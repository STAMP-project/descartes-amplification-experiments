<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$AnddeclContext;</methodDescription><lineNumber>2561</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ConstantContext;</methodDescription><lineNumber>192</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclContext;</methodDescription><lineNumber>410</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclTypeDefEquals(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclexceptionappendixContext;</methodDescription><lineNumber>3016</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclimplContext;</methodDescription><lineNumber>1656</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DecllabeltypeContext;</methodDescription><lineNumber>283</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclLabelsAndVariantsWithVarTypes(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclmonoContext;</methodDescription><lineNumber>1389</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.BindAlgTest.testDecl(tests.reference.decls.BindAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>declnewtype</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclnewtypeContext;</methodDescription><lineNumber>3162</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclTypeDefEquals(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclnewtypeappendixContext;</methodDescription><lineNumber>1584</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DecloptionalvartypesContext;</methodDescription><lineNumber>1503</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclTypeDefEquals(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>declorexp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclorexpContext;</methodDescription><lineNumber>862</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DecltypeappendixContext;</methodDescription><lineNumber>1325</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$EmptylistContext;</methodDescription><lineNumber>958</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testEmptyListConstant(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>1960</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>1964</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lcamllight/parser/CLParser$ExpContext;I)Z</methodDescription><lineNumber>3306</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lcamllight/parser/CLParser$ExpContext;I)Z</methodDescription><lineNumber>3306</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>exparray</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExparrayContext;</methodDescription><lineNumber>2743</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ArrayAlgTest.testArraySelect(tests.reference.exprs.ArrayAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$FunctionContext;</methodDescription><lineNumber>1731</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FunctionAlgTest.testFunc(tests.reference.exprs.FunctionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$FunctionappContext;</methodDescription><lineNumber>2801</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$FunctionappContext;</methodDescription><lineNumber>2805</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ControlAlgTest.testFor_(tests.reference.exprs.ControlAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>functionapp_sempred</mutatedMethod><methodDescription>(Lcamllight/parser/CLParser$FunctionappContext;I)Z</methodDescription><lineNumber>3282</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>functionapp_sempred</mutatedMethod><methodDescription>(Lcamllight/parser/CLParser$FunctionappContext;I)Z</methodDescription><lineNumber>3282</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>headtaillistpatt</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$HeadtaillistpattContext;</methodDescription><lineNumber>1221</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.ListPattAlgTest.testHeadTailListPatt(tests.reference.patts.ListPattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$IdentContext;</methodDescription><lineNumber>825</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExpAlgTest.testIdExp(tests.reference.exprs.ExpAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>letExp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$LetExpContext;</methodDescription><lineNumber>1458</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FunctionAlgTest.testFunctionId(tests.reference.exprs.FunctionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>lift</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;[Ljava/lang/Object;)Ljava/util/List;</methodDescription><lineNumber>87</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclTypeDefEquals(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>612</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>616</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattAlgTest.testPattWildcard(tests.reference.patts.PattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>patt_sempred</mutatedMethod><methodDescription>(Lcamllight/parser/CLParser$PattContext;I)Z</methodDescription><lineNumber>3288</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>patt_sempred</mutatedMethod><methodDescription>(Lcamllight/parser/CLParser$PattContext;I)Z</methodDescription><lineNumber>3288</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>pattlist</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattlistContext;</methodDescription><lineNumber>912</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.ListPattAlgTest.testPattList(tests.reference.patts.ListPattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattmatchContext;</methodDescription><lineNumber>121</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattAlgTest.testPattWildcard(tests.reference.patts.PattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>pattmatchcurried</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattmatchcurriedContext;</methodDescription><lineNumber>2653</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FunctionAlgTest.testCurriedFunc(tests.reference.exprs.FunctionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattmatchsingleContext;</methodDescription><lineNumber>995</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattAlgTest.testPattWildcard(tests.reference.patts.PattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PatttupleContext;</methodDescription><lineNumber>1618</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>prog</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ProgContext;</methodDescription><lineNumber>2702</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$RecanddeclContext;</methodDescription><lineNumber>1829</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>recdecl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$RecdeclContext;</methodDescription><lineNumber>3074</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.RecBindAlgTest.testDeclRec(tests.reference.decls.RecBindAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$RecdeclmonoContext;</methodDescription><lineNumber>2935</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.RecBindAlgTest.testDeclRec(tests.reference.decls.RecBindAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>recordpattappendix</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$RecordpattappendixContext;</methodDescription><lineNumber>1865</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>recordsingle</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$RecordsingleContext;</methodDescription><lineNumber>1271</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.RecordAlgTest.testRecordExp(tests.reference.exprs.RecordAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>3270</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>3270</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TupletypelistContext;</methodDescription><lineNumber>2884</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>1051</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>1055</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclTypeDefEquals(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>type_sempred</mutatedMethod><methodDescription>(Lcamllight/parser/CLParser$TypeContext;I)Z</methodDescription><lineNumber>3296</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>type_sempred</mutatedMethod><methodDescription>(Lcamllight/parser/CLParser$TypeContext;I)Z</methodDescription><lineNumber>3296</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>varianttype</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$VarianttypeContext;</methodDescription><lineNumber>2597</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$VartypeContext;</methodDescription><lineNumber>333</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclLabelsAndVariantsWithVarTypes(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$AnddeclContext;</methodDescription><lineNumber>2527</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ConstantContext;</methodDescription><lineNumber>195</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclContext;</methodDescription><lineNumber>409</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclexceptionappendixContext;</methodDescription><lineNumber>2982</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclimplContext;</methodDescription><lineNumber>1645</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DecllabeltypeContext;</methodDescription><lineNumber>286</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclmonoContext;</methodDescription><lineNumber>1378</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>declnewtype</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclnewtypeContext;</methodDescription><lineNumber>3128</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclnewtypeappendixContext;</methodDescription><lineNumber>1573</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DecloptionalvartypesContext;</methodDescription><lineNumber>1492</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>declorexp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclorexpContext;</methodDescription><lineNumber>851</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DecltypeappendixContext;</methodDescription><lineNumber>1314</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$EmptylistContext;</methodDescription><lineNumber>947</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>1926</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>1930</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;I)Z</methodDescription><lineNumber>3272</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;I)Z</methodDescription><lineNumber>3272</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>exparray</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExparrayContext;</methodDescription><lineNumber>2709</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$FunctionContext;</methodDescription><lineNumber>1710</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$FunctionappContext;</methodDescription><lineNumber>2767</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$FunctionappContext;</methodDescription><lineNumber>2771</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>functionapp_sempred</mutatedMethod><methodDescription>(Lcamllightnorecursion/parser/CLNoRecParser$FunctionappContext;I)Z</methodDescription><lineNumber>3248</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>functionapp_sempred</mutatedMethod><methodDescription>(Lcamllightnorecursion/parser/CLNoRecParser$FunctionappContext;I)Z</methodDescription><lineNumber>3248</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>headtaillistpatt</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$HeadtaillistpattContext;</methodDescription><lineNumber>1210</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$IdentContext;</methodDescription><lineNumber>814</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>letExp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$LetExpContext;</methodDescription><lineNumber>1447</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>lift</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;[Ljava/lang/Object;)Ljava/util/List;</methodDescription><lineNumber>90</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>601</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>605</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>patt_sempred</mutatedMethod><methodDescription>(Lcamllightnorecursion/parser/CLNoRecParser$PattContext;I)Z</methodDescription><lineNumber>3254</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>patt_sempred</mutatedMethod><methodDescription>(Lcamllightnorecursion/parser/CLNoRecParser$PattContext;I)Z</methodDescription><lineNumber>3254</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>pattlist</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattlistContext;</methodDescription><lineNumber>901</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattmatchContext;</methodDescription><lineNumber>124</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>pattmatchcurried</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattmatchcurriedContext;</methodDescription><lineNumber>2619</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattmatchsingleContext;</methodDescription><lineNumber>984</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PatttupleContext;</methodDescription><lineNumber>1607</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>prog</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ProgContext;</methodDescription><lineNumber>2668</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$RecanddeclContext;</methodDescription><lineNumber>1795</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>recdecl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$RecdeclContext;</methodDescription><lineNumber>3040</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$RecdeclmonoContext;</methodDescription><lineNumber>2901</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>recordpattappendix</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$RecordpattappendixContext;</methodDescription><lineNumber>1831</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>recordsingle</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$RecordsingleContext;</methodDescription><lineNumber>1260</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>3236</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>3236</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TupletypelistContext;</methodDescription><lineNumber>2850</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>1040</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>1044</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>type_sempred</mutatedMethod><methodDescription>(Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;I)Z</methodDescription><lineNumber>3262</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>type_sempred</mutatedMethod><methodDescription>(Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;I)Z</methodDescription><lineNumber>3262</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>varianttype</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$VarianttypeContext;</methodDescription><lineNumber>2563</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$VartypeContext;</methodDescription><lineNumber>336</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$AnddeclContext;</methodDescription><lineNumber>2249</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ConstantContext;</methodDescription><lineNumber>193</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclContext;</methodDescription><lineNumber>411</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclexceptionappendixContext;</methodDescription><lineNumber>2646</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclimplContext;</methodDescription><lineNumber>1568</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DecllabeltypeContext;</methodDescription><lineNumber>284</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclmonoContext;</methodDescription><lineNumber>1301</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>declnewtype</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclnewtypeContext;</methodDescription><lineNumber>2792</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclnewtypeappendixContext;</methodDescription><lineNumber>1496</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DecloptionalvartypesContext;</methodDescription><lineNumber>1415</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>declorexp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclorexpContext;</methodDescription><lineNumber>828</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DecltypeappendixContext;</methodDescription><lineNumber>1237</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$EmptylistContext;</methodDescription><lineNumber>924</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>1794</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>1798</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;I)Z</methodDescription><lineNumber>2936</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;I)Z</methodDescription><lineNumber>2936</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$FunctionContext;</methodDescription><lineNumber>1633</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$FunctionappContext;</methodDescription><lineNumber>2431</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$FunctionappContext;</methodDescription><lineNumber>2435</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>functionapp_sempred</mutatedMethod><methodDescription>(Lcamllightnosideeffects/parser/CLNoSEParser$FunctionappContext;I)Z</methodDescription><lineNumber>2912</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>functionapp_sempred</mutatedMethod><methodDescription>(Lcamllightnosideeffects/parser/CLNoSEParser$FunctionappContext;I)Z</methodDescription><lineNumber>2912</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>headtaillistpatt</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$HeadtaillistpattContext;</methodDescription><lineNumber>1187</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$IdentContext;</methodDescription><lineNumber>791</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>letExp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$LetExpContext;</methodDescription><lineNumber>1370</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>lift</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;[Ljava/lang/Object;)Ljava/util/List;</methodDescription><lineNumber>88</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>603</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>607</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>patt_sempred</mutatedMethod><methodDescription>(Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;I)Z</methodDescription><lineNumber>2918</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>patt_sempred</mutatedMethod><methodDescription>(Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;I)Z</methodDescription><lineNumber>2918</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>pattlist</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattlistContext;</methodDescription><lineNumber>878</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattmatchContext;</methodDescription><lineNumber>122</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>pattmatchcurried</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattmatchcurriedContext;</methodDescription><lineNumber>2341</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattmatchsingleContext;</methodDescription><lineNumber>961</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PatttupleContext;</methodDescription><lineNumber>1530</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>prog</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ProgContext;</methodDescription><lineNumber>2390</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$RecanddeclContext;</methodDescription><lineNumber>1718</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>recdecl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$RecdeclContext;</methodDescription><lineNumber>2704</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$RecdeclmonoContext;</methodDescription><lineNumber>2565</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>2900</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>2900</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TupletypelistContext;</methodDescription><lineNumber>2514</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>1017</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>1021</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>type_sempred</mutatedMethod><methodDescription>(Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;I)Z</methodDescription><lineNumber>2926</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>type_sempred</mutatedMethod><methodDescription>(Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;I)Z</methodDescription><lineNumber>2926</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>varianttype</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$VarianttypeContext;</methodDescription><lineNumber>2285</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$VartypeContext;</methodDescription><lineNumber>334</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$AnddeclContext;</methodDescription><lineNumber>2053</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ConstantContext;</methodDescription><lineNumber>191</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclContext;</methodDescription><lineNumber>409</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclexceptionappendixContext;</methodDescription><lineNumber>2450</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclimplContext;</methodDescription><lineNumber>1425</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DecllabeltypeContext;</methodDescription><lineNumber>282</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclmonoContext;</methodDescription><lineNumber>1158</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>declnewtype</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclnewtypeContext;</methodDescription><lineNumber>2596</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclnewtypeappendixContext;</methodDescription><lineNumber>1353</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DecloptionalvartypesContext;</methodDescription><lineNumber>1272</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>declorexp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclorexpContext;</methodDescription><lineNumber>789</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DecltypeappendixContext;</methodDescription><lineNumber>1094</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$EmptylistContext;</methodDescription><lineNumber>833</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>1648</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>1652</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lcamllightnocollections/parser/CLNoColParser$ExpContext;I)Z</methodDescription><lineNumber>2740</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lcamllightnocollections/parser/CLNoColParser$ExpContext;I)Z</methodDescription><lineNumber>2740</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$FunctionContext;</methodDescription><lineNumber>1490</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$FunctionappContext;</methodDescription><lineNumber>2235</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$FunctionappContext;</methodDescription><lineNumber>2239</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>functionapp_sempred</mutatedMethod><methodDescription>(Lcamllightnocollections/parser/CLNoColParser$FunctionappContext;I)Z</methodDescription><lineNumber>2716</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>functionapp_sempred</mutatedMethod><methodDescription>(Lcamllightnocollections/parser/CLNoColParser$FunctionappContext;I)Z</methodDescription><lineNumber>2716</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$IdentContext;</methodDescription><lineNumber>752</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>letExp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$LetExpContext;</methodDescription><lineNumber>1227</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>lift</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;[Ljava/lang/Object;)Ljava/util/List;</methodDescription><lineNumber>86</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattContext;</methodDescription><lineNumber>589</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$PattContext;</methodDescription><lineNumber>593</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>patt_sempred</mutatedMethod><methodDescription>(Lcamllightnocollections/parser/CLNoColParser$PattContext;I)Z</methodDescription><lineNumber>2722</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>patt_sempred</mutatedMethod><methodDescription>(Lcamllightnocollections/parser/CLNoColParser$PattContext;I)Z</methodDescription><lineNumber>2722</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattmatchContext;</methodDescription><lineNumber>120</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>pattmatchcurried</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattmatchcurriedContext;</methodDescription><lineNumber>2145</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattmatchsingleContext;</methodDescription><lineNumber>870</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PatttupleContext;</methodDescription><lineNumber>1387</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>prog</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ProgContext;</methodDescription><lineNumber>2194</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$RecanddeclContext;</methodDescription><lineNumber>1575</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>recdecl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$RecdeclContext;</methodDescription><lineNumber>2508</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$RecdeclmonoContext;</methodDescription><lineNumber>2369</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>2704</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>2704</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TupletypelistContext;</methodDescription><lineNumber>2318</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>926</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>930</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>type_sempred</mutatedMethod><methodDescription>(Lcamllightnocollections/parser/CLNoColParser$TypeContext;I)Z</methodDescription><lineNumber>2730</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>type_sempred</mutatedMethod><methodDescription>(Lcamllightnocollections/parser/CLNoColParser$TypeContext;I)Z</methodDescription><lineNumber>2730</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>varianttype</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$VarianttypeContext;</methodDescription><lineNumber>2089</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$VartypeContext;</methodDescription><lineNumber>332</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getRegularOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getRegularOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getRegularOperator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getRegularSymbol</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>30</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getRegularSymbol</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>30</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getRegularSymbol</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getSepListSymbol</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getSepListSymbol</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getSepListSymbol</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getSepListToken</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getSepListToken</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>getSepListToken</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>hasPlaceholder</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>10</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>hasPlaceholder</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>10</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isLiteral</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isLiteral</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>18</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isNonTerminal</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>22</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isNonTerminal</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>22</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isOneOrMoreSepList</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>46</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isOneOrMoreSepList</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>46</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isRegular</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isRegular</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isSepList</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>38</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isSepList</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>38</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isToken</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isToken</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>14</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isZeroOrMoreSepList</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>42</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>isZeroOrMoreSepList</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>42</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>labelFor</mutatedMethod><methodDescription>(ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>58</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>labelFor</mutatedMethod><methodDescription>(ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>58</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>labelFor</mutatedMethod><methodDescription>(ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>58</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>returnVariable</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>returnVariable</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Conventions.java</sourceFile><mutatedClass>noa.syntax.Conventions</mutatedClass><mutatedMethod>returnVariable</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>boundType</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>96</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testBoundType(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>clVariant</mutatedMethod><methodDescription>(Ljava/lang/String;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>50</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testClVariant(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>depends</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>83</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testDepends(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>freshToken</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>101</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testNewType(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>meta</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>55</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testMeta(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>newType</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>106</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testNewType(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>nomVal</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testNomVal(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>nomValSelect</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testNomValSelect(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>scopeNominalCoercion</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>78</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testScopeNominalCoercion(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>tag</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testTag(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleTypeFactoryTest.testTupleTypePrefix(tests.reference.TupleTypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>typeDef</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>114</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testTypeDef(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>typeVar</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testTypeVar(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>unknownType</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testUnknownType(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TypeFactory</mutatedClass><mutatedMethod>variantMatch</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>129</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testVariantMatch(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>boundType</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>105</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>clVariant</mutatedMethod><methodDescription>(Ljava/lang/String;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>depends</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>95</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>freshToken</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>111</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>meta</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>newType</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>120</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>nomVal</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>66</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>nomValSelect</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>80</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>scopeNominalCoercion</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>86</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>tag</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>typeDef</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>125</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>typeVar</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>48</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>unknownType</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory</mutatedClass><mutatedMethod>variantMatch</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>148</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>558</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>578</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>WILDCARDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>568</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ConstantContext;</methodDescription><lineNumber>580</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$EmptylistContext;</methodDescription><lineNumber>563</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>headtaillistpatt</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$HeadtaillistpattContext;</methodDescription><lineNumber>586</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$IdentContext;</methodDescription><lineNumber>583</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>570</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>566</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>pattlist</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattlistContext;</methodDescription><lineNumber>576</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>573</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$PatttupleContext;</methodDescription><lineNumber>556</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>recordpattappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>592</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>recordpattappendix</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$RecordpattappendixContext;</methodDescription><lineNumber>560</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>589</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1917</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>EMPTYARRAYTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1936</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1940</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ConstantContext;</methodDescription><lineNumber>1938</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1915</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>1931</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>exparray</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExparrayContext;</methodDescription><lineNumber>1948</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$FunctionContext;</methodDescription><lineNumber>1951</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$FunctionappContext;</methodDescription><lineNumber>1928</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$IdentContext;</methodDescription><lineNumber>1942</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>letExp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$LetExpContext;</methodDescription><lineNumber>1919</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattmatchContext;</methodDescription><lineNumber>1934</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>recordsingle</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1922</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>recordsingle</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$RecordsingleContext;</methodDescription><lineNumber>1925</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExpContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>1945</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>569</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>589</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>WILDCARDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>579</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ConstantContext;</methodDescription><lineNumber>591</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$EmptylistContext;</methodDescription><lineNumber>574</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>headtaillistpatt</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$HeadtaillistpattContext;</methodDescription><lineNumber>597</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$IdentContext;</methodDescription><lineNumber>594</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>581</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>577</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>pattlist</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattlistContext;</methodDescription><lineNumber>587</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>584</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$PatttupleContext;</methodDescription><lineNumber>567</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>recordpattappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>603</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>recordpattappendix</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$RecordpattappendixContext;</methodDescription><lineNumber>571</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>600</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1883</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>EMPTYARRAYTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1902</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1906</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ConstantContext;</methodDescription><lineNumber>1904</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1881</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>1897</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>exparray</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExparrayContext;</methodDescription><lineNumber>1914</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$FunctionContext;</methodDescription><lineNumber>1917</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$FunctionappContext;</methodDescription><lineNumber>1894</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$IdentContext;</methodDescription><lineNumber>1908</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>letExp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$LetExpContext;</methodDescription><lineNumber>1885</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattmatchContext;</methodDescription><lineNumber>1900</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>recordsingle</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1888</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>recordsingle</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$RecordsingleContext;</methodDescription><lineNumber>1891</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExpContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>1911</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lfuncons/values/Variable;Lfuncons/values/Variable;)I</methodDescription><lineNumber>78</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testGreater(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All method body replaced by: return 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lfuncons/values/Variable;Lfuncons/values/Variable;)I</methodDescription><lineNumber>78</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IBool;Lio/usethesource/vallang/IBool;)I</methodDescription><lineNumber>82</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IBool;Lio/usethesource/vallang/IBool;)I</methodDescription><lineNumber>82</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IList;Lio/usethesource/vallang/IList;)I</methodDescription><lineNumber>43</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testGreater(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All method body replaced by: return 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IList;Lio/usethesource/vallang/IList;)I</methodDescription><lineNumber>43</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testGreater(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All method body replaced by: return 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IMap;Lio/usethesource/vallang/IMap;)I</methodDescription><lineNumber>53</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testGreater(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All method body replaced by: return 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IMap;Lio/usethesource/vallang/IMap;)I</methodDescription><lineNumber>53</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/INumber;Lio/usethesource/vallang/INumber;)I</methodDescription><lineNumber>33</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testGreaterEqual(tests.reference.BoolFactoryTest)</killingTest><description>All method body replaced by: return 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/INumber;Lio/usethesource/vallang/INumber;)I</methodDescription><lineNumber>33</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testGreaterEqual(tests.reference.BoolFactoryTest)</killingTest><description>All method body replaced by: return 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IString;Lio/usethesource/vallang/IString;)I</methodDescription><lineNumber>69</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testGreater(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All method body replaced by: return 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IString;Lio/usethesource/vallang/IString;)I</methodDescription><lineNumber>69</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testGreater(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All method body replaced by: return 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValue;Lio/usethesource/vallang/IValue;)I</methodDescription><lineNumber>10</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testGreaterEqual(tests.reference.BoolFactoryTest)</killingTest><description>All method body replaced by: return 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalValueComperator.java</sourceFile><mutatedClass>funcons.helper.RascalValueComperator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValue;Lio/usethesource/vallang/IValue;)I</methodDescription><lineNumber>10</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testGreaterEqual(tests.reference.BoolFactoryTest)</killingTest><description>All method body replaced by: return 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/String;)Lio/usethesource/vallang/IValue;</methodDescription><lineNumber>36</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/String;Lcamllight/algebras/AllAlg;)Lio/usethesource/vallang/IValue;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>importStandardLibrary</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValue;)Lio/usethesource/vallang/IValue;</methodDescription><lineNumber>110</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExpAlgTest.testIdExp(tests.reference.exprs.ExpAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>importStandardLibrary</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValue;Ljava/util/Set;)Lio/usethesource/vallang/IValue;</methodDescription><lineNumber>114</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExpAlgTest.testIdExp(tests.reference.exprs.ExpAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>interpret</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>51</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Lcamllight/algebras/AllAlg;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>60</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>runAll</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>89</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>runAllButExclude</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;)V</methodDescription><lineNumber>93</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>runExamples</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>146</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>runGivenTests</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>152</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>runPerformance</mutatedMethod><methodDescription>(Ljava/lang/String;I)V</methodDescription><lineNumber>69</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLight.java</sourceFile><mutatedClass>camllight.CamlLight</mutatedClass><mutatedMethod>runPerformanceTests</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>intClosedInterval</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>80</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testIntClosedInterval(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>list</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListTail(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>list</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListHead(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>list</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>47</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testProjectList(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>listAppend</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>98</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListAppend(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>listHead</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>107</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListHead(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>listLength</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>123</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListLength(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>listPrefix</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListPrefix(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>listPrefixMatch</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>62</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListPrefixMatch(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>listPrefixPatt</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>75</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListPrefixPatt(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>listReverse</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>93</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListReverse(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>listTail</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>112</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testListTail(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.ListFactory</mutatedClass><mutatedMethod>projectList</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ListFactoryTest.testProjectList(tests.reference.ListFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>intClosedInterval</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>91</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>list</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>list</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>list</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>51</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>listAppend</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>107</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>listHead</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>113</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>listLength</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>132</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>listPrefix</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>listPrefixMatch</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>71</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>listPrefixPatt</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>77</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>listReverse</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>listTail</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>125</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory</mutatedClass><mutatedMethod>projectList</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>collectArgs</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Ljava/util/Map;</methodDescription><lineNumber>147</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>collectVars</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;Lcom/oracle/truffle/api/nodes/Node;)Ljava/util/Map;</methodDescription><lineNumber>197</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>createScope</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Lfuncons/truffle/nodes/FNCLexicalScope;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>findChildrenBlock</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>86</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>findParent</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCLexicalScope;</methodDescription><lineNumber>102</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>getArguments</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/Frame;)Ljava/lang/Object;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>getNode</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/Node;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>getParentBlock</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>122</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>getVariables</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/Frame;)Ljava/lang/Object;</methodDescription><lineNumber>226</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope</mutatedClass><mutatedMethod>getVars</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>180</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declConstrException</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>135</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExceptionAlgTest.testRaiseWithArgumentExp(tests.reference.exprs.ExceptionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declConstrExceptionAppendix</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>149</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExceptionAlgTest.testRaiseWithArgumentExp(tests.reference.exprs.ExceptionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declConstrTypeAppendix</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>100</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclNewConstrType(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declEnumException</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>126</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclEnumException(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declEnumExceptionAppendix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>144</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclEnumException(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declEnumTypeAppendix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>105</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclNewEnumType(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declLabelType</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>116</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declMutableLabelType</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>121</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declNewConstrType</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>91</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclNewConstrType(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declNewEnumType</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>82</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclNewEnumType(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declNewType</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclTypeDefEquals(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declRecordType</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>111</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclLabelsAndVariantsWithVarTypes(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GlobalAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.GlobalAlg</mutatedClass><mutatedMethod>declTypeDefEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>77</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclTypeDefEquals(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>369</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>398</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$AnddeclContext;</methodDescription><lineNumber>371</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclContext;</methodDescription><lineNumber>386</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>374</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$DeclexceptionappendixContext;</methodDescription><lineNumber>377</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclmonoContext;</methodDescription><lineNumber>380</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>389</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$DeclnewtypeappendixContext;</methodDescription><lineNumber>383</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DecloptionalvartypesContext;</methodDescription><lineNumber>395</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>recdecl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$RecdeclContext;</methodDescription><lineNumber>401</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>392</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>368</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>397</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$AnddeclContext;</methodDescription><lineNumber>370</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclContext;</methodDescription><lineNumber>385</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>373</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$DeclexceptionappendixContext;</methodDescription><lineNumber>376</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclmonoContext;</methodDescription><lineNumber>379</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>388</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$DeclnewtypeappendixContext;</methodDescription><lineNumber>382</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DecloptionalvartypesContext;</methodDescription><lineNumber>391</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>recdecl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$RecdeclContext;</methodDescription><lineNumber>400</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>394</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>charIterator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/Iterator;</methodDescription><lineNumber>61</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>clChar</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValueFactory;Ljava/lang/String;)Lio/usethesource/vallang/IString;</methodDescription><lineNumber>11</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightChar(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>clString</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValueFactory;Ljava/lang/String;)Lio/usethesource/vallang/IString;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>filterCamlLightEscapes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>44</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>filterCamlLightEscapes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>44</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>filterCamlLightEscapes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>44</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>getCamlLightEscape</mutatedMethod><methodDescription>(Ljava/lang/Character;)Ljava/lang/Character;</methodDescription><lineNumber>79</lineNumber><mutator>&#39;A&#39;</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All method body replaced by: return &#39;A&#39;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>getCamlLightEscape</mutatedMethod><methodDescription>(Ljava/lang/Character;)Ljava/lang/Character;</methodDescription><lineNumber>79</lineNumber><mutator>&#39;\40&#39;</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All method body replaced by: return &#39;\40&#39;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>getCamlLightEscape</mutatedMethod><methodDescription>(Ljava/lang/Character;)Ljava/lang/Character;</methodDescription><lineNumber>79</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>handleEscape</mutatedMethod><methodDescription>(Ljava/util/Iterator;)Ljava/lang/Character;</methodDescription><lineNumber>69</lineNumber><mutator>&#39;A&#39;</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All method body replaced by: return &#39;A&#39;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>handleEscape</mutatedMethod><methodDescription>(Ljava/util/Iterator;)Ljava/lang/Character;</methodDescription><lineNumber>69</lineNumber><mutator>&#39;\40&#39;</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All method body replaced by: return &#39;\40&#39;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RascalCLStringFactory.java</sourceFile><mutatedClass>funcons.helper.RascalCLStringFactory</mutatedClass><mutatedMethod>handleEscape</mutatedMethod><methodDescription>(Ljava/util/Iterator;)Ljava/lang/Character;</methodDescription><lineNumber>69</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>asFNCFunction</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lfuncons/truffle/nodes/FNCFunction;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>asIBool</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lio/usethesource/vallang/IBool;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>asIInteger</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lio/usethesource/vallang/IInteger;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>expectFNCFunction</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lfuncons/truffle/nodes/FNCFunction;</methodDescription><lineNumber>59</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>expectIBool</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lio/usethesource/vallang/IBool;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>expectIInteger</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lio/usethesource/vallang/IInteger;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>isFNCFunction</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>50</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>isFNCFunction</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>50</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>isIBool</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>34</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>isIBool</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>34</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>isIInteger</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>18</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypesGen.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCTypesGen</mutatedClass><mutatedMethod>isIInteger</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>18</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>buildArg</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>buildArg</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>buildArg</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>buildBuildExp</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>42</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>buildBuildExp</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>42</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>buildBuildExp</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>buildExp</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>52</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>buildExp</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>52</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>buildExp</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>52</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>tokenCondition</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>tokenCondition</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InfixAlt.java</sourceFile><mutatedClass>noa.syntax.InfixAlt</mutatedClass><mutatedMethod>tokenCondition</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>370</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>399</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$AnddeclContext;</methodDescription><lineNumber>372</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclContext;</methodDescription><lineNumber>387</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>375</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$DeclexceptionappendixContext;</methodDescription><lineNumber>378</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclmonoContext;</methodDescription><lineNumber>381</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>390</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$DeclnewtypeappendixContext;</methodDescription><lineNumber>384</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DecloptionalvartypesContext;</methodDescription><lineNumber>393</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>recdecl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$RecdeclContext;</methodDescription><lineNumber>402</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>396</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>567</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>WILDCARDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>589</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ConstantContext;</methodDescription><lineNumber>575</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$EmptylistContext;</methodDescription><lineNumber>578</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>headtaillistpatt</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$HeadtaillistpattContext;</methodDescription><lineNumber>584</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$IdentContext;</methodDescription><lineNumber>581</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>594</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>587</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>pattlist</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattlistContext;</methodDescription><lineNumber>572</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>569</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$PatttupleContext;</methodDescription><lineNumber>565</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>591</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>concat_vectFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>float_of_intFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>int_of_floatFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>make_vectFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>63</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>print_floatFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>16</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>print_intFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>print_newlineFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>print_stringFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>raiseFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>36</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>refFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>8</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StandardLibrary.java</sourceFile><mutatedClass>camllight.lib.StandardLibrary</mutatedClass><mutatedMethod>vect_lengthFun</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>142</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/String;Z)V</methodDescription><lineNumber>147</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>interpret</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>132</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>23</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>47</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>runAll</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>79</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>runAllButExclude</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;)V</methodDescription><lineNumber>83</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>runExamples</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>101</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>runGivenTests</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>110</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>runPerformance</mutatedMethod><methodDescription>(Ljava/lang/String;I)V</methodDescription><lineNumber>57</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightTruffle.java</sourceFile><mutatedClass>camllight.CamlLightTruffle</mutatedClass><mutatedMethod>runPerformanceTests</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasKeys</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasSize</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsBoxed</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsExecutable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsInstantiable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsNull</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsPointer</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessKeyInfo</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>89</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessKeys</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>93</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessRead</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign</mutatedClass><mutatedMethod>accessWrite</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>69</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>equal</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testEqual(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>greater</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testGreater(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>greaterEqual</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testGreaterEqual(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>lAnd</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testLAnd(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>lNot</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testLNot(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>lOr</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>18</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testLOr(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>notEqual</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>63</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testNotEqual(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>notPhysicalEqual</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>58</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>physicalEqual</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>48</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>smaller</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testSmaller(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolLogicAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.BoolLogicAlg</mutatedClass><mutatedMethod>smallerEqual</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testSmallerEqual(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>getLhs</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>29</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>getLhs</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>29</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>getLhs</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>getOperator</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>getOperator</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>getOperator</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>getRhs</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>getRhs</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>getRhs</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>isInfix</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>19</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NormalAlt.java</sourceFile><mutatedClass>noa.syntax.NormalAlt</mutatedClass><mutatedMethod>isInfix</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>19</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>371</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>400</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>anddecl</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$AnddeclContext;</methodDescription><lineNumber>373</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclContext;</methodDescription><lineNumber>388</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>376</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>declexceptionappendix</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$DeclexceptionappendixContext;</methodDescription><lineNumber>379</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclmonoContext;</methodDescription><lineNumber>382</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>391</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>declnewtypeappendix</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$DeclnewtypeappendixContext;</methodDescription><lineNumber>385</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DecloptionalvartypesContext;</methodDescription><lineNumber>394</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>397</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>project</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>75</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.CurryFactoryTest.testPartialAppN(tests.reference.CurryFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>tuple</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleFactoryTest.testTuplePrefix(tests.reference.TupleFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>tuple</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleFactoryTest.testTuplePrefix(tests.reference.TupleFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>tuple</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleFactoryTest.testProject(tests.reference.TupleFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>tuple</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleFactoryTest.testTupleHead(tests.reference.TupleFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>tupleHead</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>59</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleFactoryTest.testTupleHead(tests.reference.TupleFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>tuplePrefix</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>52</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleFactoryTest.testTuplePrefix(tests.reference.TupleFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>tuplePrefixMatch</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>82</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleFactoryTest.testTuplePrefixPatt(tests.reference.TupleFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>tuplePrefixPatt</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>93</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleFactoryTest.testTuplePrefixPatt(tests.reference.TupleFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.TupleFactory</mutatedClass><mutatedMethod>tupleTail</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>64</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleFactoryTest.testTupleTail(tests.reference.TupleFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>addAlt</mutatedMethod><methodDescription>(Lnoa/syntax/Alt;)V</methodDescription><lineNumber>27</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>addHeader</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>145</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>addLiftMethod</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>130</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>addParserMembers</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>119</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>assertValidInfix</mutatedMethod><methodDescription>(Lnoa/syntax/NormalAlt;Lnoa/syntax/NormalAlt;)V</methodDescription><lineNumber>80</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>collapseLevel</mutatedMethod><methodDescription>(Ljava/util/Map;Ljava/lang/Integer;)V</methodDescription><lineNumber>58</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>generate</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>98</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>groupByLevel</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>groupByLevel</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rules.java</sourceFile><mutatedClass>noa.syntax.Rules</mutatedClass><mutatedMethod>sortAlternatives</mutatedMethod><methodDescription>(Ljava/util/Map;)Ljava/util/List;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>project</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>77</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>tuple</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>tuple</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>tuple</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>tuple</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>47</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>tupleHead</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>tuplePrefix</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>55</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>tuplePrefixMatch</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>83</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>tuplePrefixPatt</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>94</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory</mutatedClass><mutatedMethod>tupleTail</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>72</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1762</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ConstantContext;</methodDescription><lineNumber>1764</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1760</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>1779</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$FunctionContext;</methodDescription><lineNumber>1785</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$FunctionappContext;</methodDescription><lineNumber>1773</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$IdentContext;</methodDescription><lineNumber>1770</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>letExp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$LetExpContext;</methodDescription><lineNumber>1767</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattmatchContext;</methodDescription><lineNumber>1782</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ExpContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>1776</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1616</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ConstantContext;</methodDescription><lineNumber>1618</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1614</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>1633</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$FunctionContext;</methodDescription><lineNumber>1639</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$FunctionappContext;</methodDescription><lineNumber>1627</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$IdentContext;</methodDescription><lineNumber>1624</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>letExp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$LetExpContext;</methodDescription><lineNumber>1621</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattmatchContext;</methodDescription><lineNumber>1636</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ExpContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>1630</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasKeys</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasSize</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsBoxed</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsExecutable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsInstantiable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsNull</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsPointer</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessKeyInfo</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>89</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessKeys</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>93</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign</mutatedClass><mutatedMethod>accessRead</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>accessExecute</mutatedMethod><methodDescription>(I)Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>79</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasKeys</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>51</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasSize</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>55</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsBoxed</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>47</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsExecutable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsInstantiable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsNull</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsPointer</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>99</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>canHandle</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>30</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign</mutatedClass><mutatedMethod>canHandle</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>30</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>catchElseRethrow</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>66</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>catch_</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>else_</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>78</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>exception</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>exception</mutatedMethod><methodDescription>(Ljava/lang/String;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>fail</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>matchFailure</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>preferOver</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>84</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>throw_</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>48</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory</mutatedClass><mutatedMethod>whenTrue</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>91</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>catchElseRethrow</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testCatchElseRethrow(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>catch_</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testCatch_(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>else_</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testElse_(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>exception</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testException(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>exception</mutatedMethod><methodDescription>(Ljava/lang/String;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testException(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>fail</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testFail(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>matchFailure</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testMatchFailure(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>preferOver</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>82</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testPreferOver(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>throw_</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>47</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testCatch_(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.ExceptionFactory</mutatedClass><mutatedMethod>whenTrue</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>91</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testWhenTrue(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>562</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattContext</mutatedClass><mutatedMethod>WILDCARDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>575</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattContext</mutatedClass><mutatedMethod>constant</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ConstantContext;</methodDescription><lineNumber>567</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$IdentContext;</methodDescription><lineNumber>570</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>580</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$PattContext;</methodDescription><lineNumber>573</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattContext</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>564</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattContext</mutatedClass><mutatedMethod>patttuple</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$PatttupleContext;</methodDescription><lineNumber>560</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>577</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessGetSize</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasKeys</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasSize</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsBoxed</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsExecutable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsInstantiable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsNull</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsPointer</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessRead</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessGetSize</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasKeys</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessHasSize</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsBoxed</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsExecutable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsInstantiable</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsNull</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessIsPointer</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign</mutatedClass><mutatedMethod>accessRead</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclnewtypeContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>3101</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclnewtypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>3105</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>3113</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$DecllabeltypeContext;</methodDescription><lineNumber>3103</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>3116</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$DecltypeappendixContext;</methodDescription><lineNumber>3107</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclnewtypeContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$IdentContext;</methodDescription><lineNumber>3110</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclnewtypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>3119</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ConstantContext</mutatedClass><mutatedMethod>BOOLTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>186</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ConstantContext</mutatedClass><mutatedMethod>CHARTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>185</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ConstantContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>179</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ConstantContext</mutatedClass><mutatedMethod>FLOATTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>178</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ConstantContext</mutatedClass><mutatedMethod>INTTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>181</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ConstantContext</mutatedClass><mutatedMethod>NULLTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>180</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ConstantContext</mutatedClass><mutatedMethod>STRINGTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>187</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ConstantContext</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$EmptylistContext;</methodDescription><lineNumber>183</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Propagate.java</sourceFile><mutatedClass>noa.proxy.Propagate$Lifter</mutatedClass><mutatedMethod>extend</mutatedMethod><methodDescription>([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>86</lineNumber><mutator>empty</mutator><index>1</index><block>1</block><killingTest/><description>Method body replaced by instructions that returns an empty array of the corresponding type</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Propagate.java</sourceFile><mutatedClass>noa.proxy.Propagate$Lifter</mutatedClass><mutatedMethod>extend</mutatedMethod><methodDescription>([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>86</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Propagate.java</sourceFile><mutatedClass>noa.proxy.Propagate$Lifter</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Propagate.java</sourceFile><mutatedClass>noa.proxy.Propagate$Lifter</mutatedClass><mutatedMethod>last</mutatedMethod><methodDescription>([Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>95</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Propagate.java</sourceFile><mutatedClass>noa.proxy.Propagate$Lifter</mutatedClass><mutatedMethod>lower</mutatedMethod><methodDescription>(Ljava/lang/reflect/Method;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>73</lineNumber><mutator>empty</mutator><index>1</index><block>1</block><killingTest/><description>Method body replaced by instructions that returns an empty array of the corresponding type</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Propagate.java</sourceFile><mutatedClass>noa.proxy.Propagate$Lifter</mutatedClass><mutatedMethod>lower</mutatedMethod><methodDescription>(Ljava/lang/reflect/Method;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>73</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Propagate.java</sourceFile><mutatedClass>noa.proxy.Propagate$Lifter</mutatedClass><mutatedMethod>lower1</mutatedMethod><methodDescription>(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Propagate.java</sourceFile><mutatedClass>noa.proxy.Propagate$Lifter</mutatedClass><mutatedMethod>proxy</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;</methodDescription><lineNumber>82</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConstantsAlg.java</sourceFile><mutatedClass>camllight.algebras.constants.ConstantsAlg</mutatedClass><mutatedMethod>bool</mutatedMethod><methodDescription>(Ljava/lang/Boolean;)Ljava/lang/Object;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testLNot(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConstantsAlg.java</sourceFile><mutatedClass>camllight.algebras.constants.ConstantsAlg</mutatedClass><mutatedMethod>char_</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>48</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testChar_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConstantsAlg.java</sourceFile><mutatedClass>camllight.algebras.constants.ConstantsAlg</mutatedClass><mutatedMethod>constr</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclEnumException(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConstantsAlg.java</sourceFile><mutatedClass>camllight.algebras.constants.ConstantsAlg</mutatedClass><mutatedMethod>emptyList</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>63</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testEmptyListConstant(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConstantsAlg.java</sourceFile><mutatedClass>camllight.algebras.constants.ConstantsAlg</mutatedClass><mutatedMethod>float_</mutatedMethod><methodDescription>(Ljava/lang/Float;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FloatCalcAlgTest.testFloatAddExp(tests.reference.exprs.FloatCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConstantsAlg.java</sourceFile><mutatedClass>camllight.algebras.constants.ConstantsAlg</mutatedClass><mutatedMethod>int_</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExpAlgTest.testConstExp(tests.reference.exprs.ExpAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConstantsAlg.java</sourceFile><mutatedClass>camllight.algebras.constants.ConstantsAlg</mutatedClass><mutatedMethod>null_</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConstantsAlg.java</sourceFile><mutatedClass>camllight.algebras.constants.ConstantsAlg</mutatedClass><mutatedMethod>string</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.StringAlgTest.testStringAppendExp(tests.reference.exprs.StringAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecursiveFactory.java</sourceFile><mutatedClass>funcons.interpreter.recursion.RecursiveFactory</mutatedClass><mutatedMethod>followFwd</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>90</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecursiveFactoryTest.testFreshFwds(tests.reference.RecursiveFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecursiveFactory.java</sourceFile><mutatedClass>funcons.interpreter.recursion.RecursiveFactory</mutatedClass><mutatedMethod>followIfFwd</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>95</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecursiveFactoryTest.testFollowIfFwd(tests.reference.RecursiveFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecursiveFactory.java</sourceFile><mutatedClass>funcons.interpreter.recursion.RecursiveFactory</mutatedClass><mutatedMethod>freshFwd</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecursiveFactoryTest.testFreshFwd(tests.reference.RecursiveFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecursiveFactory.java</sourceFile><mutatedClass>funcons.interpreter.recursion.RecursiveFactory</mutatedClass><mutatedMethod>freshFwds</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecursiveFactoryTest.testFreshFwds(tests.reference.RecursiveFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecursiveFactory.java</sourceFile><mutatedClass>funcons.interpreter.recursion.RecursiveFactory</mutatedClass><mutatedMethod>reclose</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>72</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecursiveFactoryTest.testRecursive(tests.reference.RecursiveFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecursiveFactory.java</sourceFile><mutatedClass>funcons.interpreter.recursion.RecursiveFactory</mutatedClass><mutatedMethod>recursive</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>80</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecursiveFactoryTest.testRecursive(tests.reference.RecursiveFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecursiveFactory.java</sourceFile><mutatedClass>funcons.interpreter.recursion.RecursiveFactory</mutatedClass><mutatedMethod>recursiveTyped</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>85</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecursiveFactoryTest.testRecursiveTyped(tests.reference.RecursiveFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecursiveFactory.java</sourceFile><mutatedClass>funcons.interpreter.recursion.RecursiveFactory</mutatedClass><mutatedMethod>setForwards</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>51</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecursiveFactoryTest.testFollowIfFwd(tests.reference.RecursiveFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExternalRascalValue.java</sourceFile><mutatedClass>funcons.values.properties.ExternalRascalValue</mutatedClass><mutatedMethod>asAnnotatable</mutatedMethod><methodDescription>()Lio/usethesource/vallang/IAnnotatable;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExternalRascalValue.java</sourceFile><mutatedClass>funcons.values.properties.ExternalRascalValue</mutatedClass><mutatedMethod>asWithKeywordParameters</mutatedMethod><methodDescription>()Lio/usethesource/vallang/IWithKeywordParameters;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExternalRascalValue.java</sourceFile><mutatedClass>funcons.values.properties.ExternalRascalValue</mutatedClass><mutatedMethod>encodeAsConstructor</mutatedMethod><methodDescription>()Lio/usethesource/vallang/IConstructor;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExternalRascalValue.java</sourceFile><mutatedClass>funcons.values.properties.ExternalRascalValue</mutatedClass><mutatedMethod>getType</mutatedMethod><methodDescription>()Lio/usethesource/vallang/type/Type;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.VectorFactoryTest.testVectorSelect(tests.reference.VectorFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExternalRascalValue.java</sourceFile><mutatedClass>funcons.values.properties.ExternalRascalValue</mutatedClass><mutatedMethod>isAnnotatable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>30</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExternalRascalValue.java</sourceFile><mutatedClass>funcons.values.properties.ExternalRascalValue</mutatedClass><mutatedMethod>isAnnotatable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>30</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExternalRascalValue.java</sourceFile><mutatedClass>funcons.values.properties.ExternalRascalValue</mutatedClass><mutatedMethod>mayHaveKeywordParameters</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>40</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExternalRascalValue.java</sourceFile><mutatedClass>funcons.values.properties.ExternalRascalValue</mutatedClass><mutatedMethod>mayHaveKeywordParameters</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>40</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclnewtypeContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>3135</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclnewtypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>3136</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>3147</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$DecllabeltypeContext;</methodDescription><lineNumber>3138</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>3153</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$DecltypeappendixContext;</methodDescription><lineNumber>3141</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclnewtypeContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$IdentContext;</methodDescription><lineNumber>3144</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclnewtypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>3150</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ConstantContext</mutatedClass><mutatedMethod>BOOLTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>184</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ConstantContext</mutatedClass><mutatedMethod>CHARTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>183</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ConstantContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>177</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ConstantContext</mutatedClass><mutatedMethod>FLOATTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>176</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ConstantContext</mutatedClass><mutatedMethod>INTTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>179</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ConstantContext</mutatedClass><mutatedMethod>NULLTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>178</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ConstantContext</mutatedClass><mutatedMethod>STRINGTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>185</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ConstantContext</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$EmptylistContext;</methodDescription><lineNumber>181</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindingFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.BindingFactory</mutatedClass><mutatedMethod>accum</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BindingFactoryTest.testAccum(tests.reference.BindingFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindingFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.BindingFactory</mutatedClass><mutatedMethod>bindValue</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BindingFactoryTest.testBoundValue(tests.reference.BindingFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindingFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.BindingFactory</mutatedClass><mutatedMethod>boundValue</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BindingFactoryTest.testBoundValue(tests.reference.BindingFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindingFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.BindingFactory</mutatedClass><mutatedMethod>closure</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BindingFactoryTest.testClosure(tests.reference.BindingFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindingFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.BindingFactory</mutatedClass><mutatedMethod>environment</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testTypeDef(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindingFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.BindingFactory</mutatedClass><mutatedMethod>id</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BindingFactoryTest.testId(tests.reference.BindingFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindingFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.BindingFactory</mutatedClass><mutatedMethod>nameId</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BindingFactoryTest.testNameId(tests.reference.BindingFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindingFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.BindingFactory</mutatedClass><mutatedMethod>scope</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>46</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BindingFactoryTest.testBoundValue(tests.reference.BindingFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFloatFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleFloatFactory</mutatedClass><mutatedMethod>floatAdd</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFloatFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleFloatFactory</mutatedClass><mutatedMethod>floatDivide</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFloatFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleFloatFactory</mutatedClass><mutatedMethod>floatModulo</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFloatFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleFloatFactory</mutatedClass><mutatedMethod>floatMultiply</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFloatFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleFloatFactory</mutatedClass><mutatedMethod>floatNegate</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFloatFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleFloatFactory</mutatedClass><mutatedMethod>floatPowerOf</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>59</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFloatFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleFloatFactory</mutatedClass><mutatedMethod>floatSubtract</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFloatFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleFloatFactory</mutatedClass><mutatedMethod>lit</mutatedMethod><methodDescription>(Ljava/lang/Double;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclnewtypeContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2569</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclnewtypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2573</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2581</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$DecllabeltypeContext;</methodDescription><lineNumber>2571</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2584</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$DecltypeappendixContext;</methodDescription><lineNumber>2575</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclnewtypeContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$IdentContext;</methodDescription><lineNumber>2578</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclnewtypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>2587</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ConstantContext</mutatedClass><mutatedMethod>BOOLTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>182</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ConstantContext</mutatedClass><mutatedMethod>CHARTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>183</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ConstantContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>175</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ConstantContext</mutatedClass><mutatedMethod>FLOATTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>176</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ConstantContext</mutatedClass><mutatedMethod>INTTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>178</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ConstantContext</mutatedClass><mutatedMethod>NULLTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>177</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ConstantContext</mutatedClass><mutatedMethod>STRINGTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>184</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ConstantContext</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$EmptylistContext;</methodDescription><lineNumber>180</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclnewtypeContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2765</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclnewtypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2766</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2777</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decllabeltype</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$DecllabeltypeContext;</methodDescription><lineNumber>2768</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2780</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclnewtypeContext</mutatedClass><mutatedMethod>decltypeappendix</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$DecltypeappendixContext;</methodDescription><lineNumber>2771</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclnewtypeContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$IdentContext;</methodDescription><lineNumber>2774</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclnewtypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>2783</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1705</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1703</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>1716</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$FunctionContext;</methodDescription><lineNumber>1722</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$IdentContext;</methodDescription><lineNumber>1707</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattmatchContext;</methodDescription><lineNumber>1719</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionContext</mutatedClass><mutatedMethod>pattmatchcurried</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattmatchcurriedContext;</methodDescription><lineNumber>1713</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionContext</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattmatchsingleContext;</methodDescription><lineNumber>1710</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lnoa/syntax/demo/DemoParser$ExpContext;</methodDescription><lineNumber>89</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lnoa/syntax/demo/DemoParser$ExpContext;</methodDescription><lineNumber>93</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lnoa/syntax/demo/DemoParser$ExpContext;I)Z</methodDescription><lineNumber>259</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser</mutatedClass><mutatedMethod>exp_sempred</mutatedMethod><methodDescription>(Lnoa/syntax/demo/DemoParser$ExpContext;I)Z</methodDescription><lineNumber>259</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser</mutatedClass><mutatedMethod>lift</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;[Ljava/lang/Object;)Ljava/util/List;</methodDescription><lineNumber>51</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser</mutatedClass><mutatedMethod>prog</mutatedMethod><methodDescription>()Lnoa/syntax/demo/DemoParser$ProgContext;</methodDescription><lineNumber>232</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>253</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>253</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattAlg</mutatedClass><mutatedMethod>optionalPatt</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>81</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattAlgTest.testOptionalPatt(tests.reference.patts.PattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattAlg</mutatedClass><mutatedMethod>pattAs</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattAlgTest.testPattAs(tests.reference.patts.PattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattAlg</mutatedClass><mutatedMethod>pattConstant</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>51</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattMatchAlgTest.testPattMatch(tests.reference.patts.PattMatchAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattAlg</mutatedClass><mutatedMethod>pattConstr</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>56</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattAlg</mutatedClass><mutatedMethod>pattConstrPatt</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>66</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExceptionAlgTest.testTryWithExp(tests.reference.exprs.ExceptionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattAlg</mutatedClass><mutatedMethod>pattId</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.BindAlgTest.testDecl(tests.reference.decls.BindAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattAlg</mutatedClass><mutatedMethod>pattType</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>36</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.typeexprs.TypeExpAlgTest.testTypeId(tests.reference.typeexprs.TypeExpAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattAlg</mutatedClass><mutatedMethod>pattWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>46</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattAlgTest.testPattWildcard(tests.reference.patts.PattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory</mutatedClass><mutatedMethod>accum</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>72</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory</mutatedClass><mutatedMethod>bindValue</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>36</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory</mutatedClass><mutatedMethod>boundValue</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory</mutatedClass><mutatedMethod>closure</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>62</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory</mutatedClass><mutatedMethod>environment</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>67</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory</mutatedClass><mutatedMethod>id</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory</mutatedClass><mutatedMethod>nameId</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory</mutatedClass><mutatedMethod>scope</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory</mutatedClass><mutatedMethod>bool</mutatedMethod><methodDescription>(Ljava/lang/Boolean;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory</mutatedClass><mutatedMethod>equal</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory</mutatedClass><mutatedMethod>greater</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory</mutatedClass><mutatedMethod>greaterEqual</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory</mutatedClass><mutatedMethod>not</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory</mutatedClass><mutatedMethod>physicalEqual</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>56</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory</mutatedClass><mutatedMethod>smaller</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory</mutatedClass><mutatedMethod>smallerEqual</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>44</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.FloatFactory</mutatedClass><mutatedMethod>floatAdd</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>18</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FloatFactoryTest.testFloatAdd(tests.reference.FloatFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.FloatFactory</mutatedClass><mutatedMethod>floatDivide</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>51</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FloatFactoryTest.testFloatDivide(tests.reference.FloatFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.FloatFactory</mutatedClass><mutatedMethod>floatModulo</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FloatFactoryTest.testFloatModulo(tests.reference.FloatFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.FloatFactory</mutatedClass><mutatedMethod>floatMultiply</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FloatFactoryTest.testFloatMultiply(tests.reference.FloatFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.FloatFactory</mutatedClass><mutatedMethod>floatNegate</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FloatFactoryTest.testFloatNegate(tests.reference.FloatFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.FloatFactory</mutatedClass><mutatedMethod>floatPowerOf</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>69</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FloatFactoryTest.testFloatPowerOf(tests.reference.FloatFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.FloatFactory</mutatedClass><mutatedMethod>floatSubtract</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FloatFactoryTest.testFloatSubtract(tests.reference.FloatFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.FloatFactory</mutatedClass><mutatedMethod>lit</mutatedMethod><methodDescription>(Ljava/lang/Double;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FloatFactoryTest.testFloatNegate(tests.reference.FloatFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.BoolFactory</mutatedClass><mutatedMethod>bool</mutatedMethod><methodDescription>(Ljava/lang/Boolean;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>15</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testNot(tests.reference.BoolFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.BoolFactory</mutatedClass><mutatedMethod>equal</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testEqual(tests.reference.BoolFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.BoolFactory</mutatedClass><mutatedMethod>greater</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testGreaterEqual(tests.reference.BoolFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.BoolFactory</mutatedClass><mutatedMethod>greaterEqual</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testGreaterEqual(tests.reference.BoolFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.BoolFactory</mutatedClass><mutatedMethod>not</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testNot(tests.reference.BoolFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.BoolFactory</mutatedClass><mutatedMethod>physicalEqual</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.BoolFactory</mutatedClass><mutatedMethod>smaller</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testSmaller(tests.reference.BoolFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoolFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.BoolFactory</mutatedClass><mutatedMethod>smallerEqual</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BoolFactoryTest.testSmallerEqual(tests.reference.BoolFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ConstantContext</mutatedClass><mutatedMethod>BOOLTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>181</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ConstantContext</mutatedClass><mutatedMethod>CHARTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>182</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ConstantContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>175</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ConstantContext</mutatedClass><mutatedMethod>FLOATTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>174</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ConstantContext</mutatedClass><mutatedMethod>INTTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>177</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ConstantContext</mutatedClass><mutatedMethod>NULLTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>176</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ConstantContext</mutatedClass><mutatedMethod>STRINGTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>183</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ConstantContext</mutatedClass><mutatedMethod>emptylist</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$EmptylistContext;</methodDescription><lineNumber>179</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tokens.java</sourceFile><mutatedClass>camllight.parser.Tokens</mutatedClass><mutatedMethod>booltoken</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>20</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testLNot(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tokens.java</sourceFile><mutatedClass>camllight.parser.Tokens</mutatedClass><mutatedMethod>booltoken</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>20</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.BoolLogicAlgTest.testLNot(tests.reference.exprs.BoolLogicAlgTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tokens.java</sourceFile><mutatedClass>camllight.parser.Tokens</mutatedClass><mutatedMethod>chartoken</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>30</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testChar_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tokens.java</sourceFile><mutatedClass>camllight.parser.Tokens</mutatedClass><mutatedMethod>chartoken</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>30</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testChar_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tokens.java</sourceFile><mutatedClass>camllight.parser.Tokens</mutatedClass><mutatedMethod>chartoken</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testChar_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tokens.java</sourceFile><mutatedClass>camllight.parser.Tokens</mutatedClass><mutatedMethod>stringtoken</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.StringAlgTest.testStringAppendExp(tests.reference.exprs.StringAlgTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tokens.java</sourceFile><mutatedClass>camllight.parser.Tokens</mutatedClass><mutatedMethod>stringtoken</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.StringAlgTest.testStringAppendExp(tests.reference.exprs.StringAlgTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tokens.java</sourceFile><mutatedClass>camllight.parser.Tokens</mutatedClass><mutatedMethod>stringtoken</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.StringAlgTest.testStringAppendExp(tests.reference.exprs.StringAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory</mutatedClass><mutatedMethod>followFwd</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>58</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory</mutatedClass><mutatedMethod>followIfFwd</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory</mutatedClass><mutatedMethod>freshFwd</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory</mutatedClass><mutatedMethod>freshFwds</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory</mutatedClass><mutatedMethod>reclose</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory</mutatedClass><mutatedMethod>recursive</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>47</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory</mutatedClass><mutatedMethod>recursiveTyped</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>52</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory</mutatedClass><mutatedMethod>setForwards</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory</mutatedClass><mutatedMethod>intAdd</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory</mutatedClass><mutatedMethod>intDivide</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory</mutatedClass><mutatedMethod>intModulo</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>59</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory</mutatedClass><mutatedMethod>intMultiply</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory</mutatedClass><mutatedMethod>intNegate</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory</mutatedClass><mutatedMethod>intSubtract</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory</mutatedClass><mutatedMethod>lit</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>15</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ControlAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ControlAlg</mutatedClass><mutatedMethod>forDownto</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>52</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ControlAlgTest.testForDownto(tests.reference.exprs.ControlAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ControlAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ControlAlg</mutatedClass><mutatedMethod>for_</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ControlAlgTest.testFor_(tests.reference.exprs.ControlAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ControlAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ControlAlg</mutatedClass><mutatedMethod>ifElse</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ControlAlgTest.testIfElse(tests.reference.exprs.ControlAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ControlAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ControlAlg</mutatedClass><mutatedMethod>if_</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ControlAlgTest.testIf_(tests.reference.exprs.ControlAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ControlAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ControlAlg</mutatedClass><mutatedMethod>matchWith</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattAlgTest.testPattWildcard(tests.reference.patts.PattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ControlAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ControlAlg</mutatedClass><mutatedMethod>seq</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>62</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ControlAlgTest.testSeq(tests.reference.exprs.ControlAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ControlAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ControlAlg</mutatedClass><mutatedMethod>whileTrue</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ControlAlgTest.testWhileTrue(tests.reference.exprs.ControlAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>46</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory</mutatedClass><mutatedMethod>applyToEach</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>61</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory</mutatedClass><mutatedMethod>bind</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>78</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>73</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>67</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCDispatchNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCDispatchNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/functions/FNCDispatchNode;</methodDescription><lineNumber>150</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCDispatchNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCDispatchNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCDispatchNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCDispatchNodeGen</mutatedClass><mutatedMethod>executeDispatch</mutatedMethod><methodDescription>(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCDispatchNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCDispatchNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>105</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCDispatchNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCDispatchNodeGen</mutatedClass><mutatedMethod>isValid_</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/Assumption;)Z</methodDescription><lineNumber>146</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCDispatchNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCDispatchNodeGen</mutatedClass><mutatedMethod>isValid_</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/Assumption;)Z</methodDescription><lineNumber>146</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCDispatchNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCDispatchNodeGen</mutatedClass><mutatedMethod>removeDirect_</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>118</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PGen.java</sourceFile><mutatedClass>noa.syntax.PGen</mutatedClass><mutatedMethod>addProductions</mutatedMethod><methodDescription>(Lnoa/syntax/Rules;)V</methodDescription><lineNumber>121</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PGen.java</sourceFile><mutatedClass>noa.syntax.PGen</mutatedClass><mutatedMethod>allMethods</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/util/Set;)V</methodDescription><lineNumber>111</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PGen.java</sourceFile><mutatedClass>noa.syntax.PGen</mutatedClass><mutatedMethod>allMethodsOf</mutatedMethod><methodDescription>(Ljava/lang/Class;)[Ljava/lang/reflect/Method;</methodDescription><lineNumber>105</lineNumber><mutator>empty</mutator><index>1</index><block>1</block><killingTest/><description>Method body replaced by instructions that returns an empty array of the corresponding type</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PGen.java</sourceFile><mutatedClass>noa.syntax.PGen</mutatedClass><mutatedMethod>allMethodsOf</mutatedMethod><methodDescription>(Ljava/lang/Class;)[Ljava/lang/reflect/Method;</methodDescription><lineNumber>105</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PGen.java</sourceFile><mutatedClass>noa.syntax.PGen</mutatedClass><mutatedMethod>generate</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>32</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PGen.java</sourceFile><mutatedClass>noa.syntax.PGen</mutatedClass><mutatedMethod>generate</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V</methodDescription><lineNumber>36</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PGen.java</sourceFile><mutatedClass>noa.syntax.PGen</mutatedClass><mutatedMethod>generateTokens</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;)V</methodDescription><lineNumber>83</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.BindAlg</mutatedClass><mutatedMethod>andDecl</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>83</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.BindAlgTest.testAndDecl(tests.reference.decls.BindAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.BindAlg</mutatedClass><mutatedMethod>declBindMono</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>101</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.BindAlgTest.testDecl(tests.reference.decls.BindAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.BindAlg</mutatedClass><mutatedMethod>declBindMonoFunc</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/List;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>106</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FunctionAlgTest.testFunctionId(tests.reference.exprs.FunctionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BindAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.BindAlg</mutatedClass><mutatedMethod>recAndDecl</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>46</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BindAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.BindAlg</mutatedClass><mutatedMethod>recDeclIdentExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>68</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BindAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.BindAlg</mutatedClass><mutatedMethod>recDeclIdentPattsExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/List;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>61</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.RecBindAlgTest.testDeclRec(tests.reference.decls.RecBindAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BindAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.BindAlg</mutatedClass><mutatedMethod>recDeclPattTypeExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>73</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.FunctionFactory</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FunctionFactoryTest.testCompose(tests.reference.FunctionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.FunctionFactory</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testScopeNominalCoercion(tests.reference.TypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.FunctionFactory</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FunctionFactoryTest.testCompose(tests.reference.FunctionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.FunctionFactory</mutatedClass><mutatedMethod>applyToEach</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>48</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FunctionFactoryTest.testApplyToEach(tests.reference.FunctionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.FunctionFactory</mutatedClass><mutatedMethod>bind</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>75</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.PatternFactoryTest.testPattAbs(tests.reference.PatternFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.FunctionFactory</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>67</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FunctionFactoryTest.testClose(tests.reference.FunctionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.FunctionFactory</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>61</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FunctionFactoryTest.testCompose(tests.reference.FunctionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.IntFactory</mutatedClass><mutatedMethod>intAdd</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.FunctionFactoryTest.testCompose(tests.reference.FunctionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.IntFactory</mutatedClass><mutatedMethod>intDivide</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>46</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.IntFactoryTest.testIntDivide(tests.reference.IntFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.IntFactory</mutatedClass><mutatedMethod>intModulo</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.IntFactoryTest.testIntModulo(tests.reference.IntFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.IntFactory</mutatedClass><mutatedMethod>intMultiply</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.IntFactoryTest.testIntMultiply(tests.reference.IntFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.IntFactory</mutatedClass><mutatedMethod>intNegate</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.IntFactoryTest.testIntNegate(tests.reference.IntFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.IntFactory</mutatedClass><mutatedMethod>intSubtract</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.IntFactoryTest.testIntSubtract(tests.reference.IntFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.IntFactory</mutatedClass><mutatedMethod>lit</mutatedMethod><methodDescription>(Ljava/lang/Integer;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.IntFactoryTest.testIntMultiply(tests.reference.IntFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PatternFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.PatternFactory</mutatedClass><mutatedMethod>any</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.PatternFactoryTest.testAny(tests.reference.PatternFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PatternFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.PatternFactory</mutatedClass><mutatedMethod>match</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>36</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.PatternFactoryTest.testPattAbs(tests.reference.PatternFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PatternFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.PatternFactory</mutatedClass><mutatedMethod>only</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.PatternFactoryTest.testMatch(tests.reference.PatternFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PatternFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.PatternFactory</mutatedClass><mutatedMethod>pattAbs</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.PatternFactoryTest.testPattAbs(tests.reference.PatternFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PatternFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.PatternFactory</mutatedClass><mutatedMethod>pattNonBinding</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.PatternFactoryTest.testPattNonBinding(tests.reference.PatternFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PatternFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.PatternFactory</mutatedClass><mutatedMethod>pattUnion</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>47</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.PatternFactoryTest.testPattUnion(tests.reference.PatternFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.IntCalcAlg</mutatedClass><mutatedMethod>intAdd</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>17</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.IntCalcAlgTest.testIntAdd(tests.reference.exprs.IntCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.IntCalcAlg</mutatedClass><mutatedMethod>intDivide</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.IntCalcAlgTest.testIntDivide(tests.reference.exprs.IntCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.IntCalcAlg</mutatedClass><mutatedMethod>intMod</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.IntCalcAlgTest.testIntMod(tests.reference.exprs.IntCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.IntCalcAlg</mutatedClass><mutatedMethod>intMultiply</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.IntCalcAlgTest.testIntMultiply(tests.reference.exprs.IntCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.IntCalcAlg</mutatedClass><mutatedMethod>intSub</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.IntCalcAlgTest.testIntSub(tests.reference.exprs.IntCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.IntCalcAlg</mutatedClass><mutatedMethod>intUnarySub</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.IntCalcAlgTest.testIntUnarySub(tests.reference.exprs.IntCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleTypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TupleTypeFactory</mutatedClass><mutatedMethod>projectType</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>47</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleTypeFactoryTest.testProjectType(tests.reference.TupleTypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleTypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TupleTypeFactory</mutatedClass><mutatedMethod>tupleType</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>15</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleTypeFactoryTest.testTupleType(tests.reference.TupleTypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleTypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TupleTypeFactory</mutatedClass><mutatedMethod>tupleType</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleTypeFactoryTest.testTupleTypePrefix(tests.reference.TupleTypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleTypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TupleTypeFactory</mutatedClass><mutatedMethod>tupleType</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleTypeFactoryTest.testTupleType(tests.reference.TupleTypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleTypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TupleTypeFactory</mutatedClass><mutatedMethod>tupleType</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleTypeFactoryTest.testProjectType(tests.reference.TupleTypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleTypeFactory.java</sourceFile><mutatedClass>funcons.interpreter.types.TupleTypeFactory</mutatedClass><mutatedMethod>tupleTypePrefix</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.TupleTypeFactoryTest.testTupleTypePrefix(tests.reference.TupleTypeFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTupleTypeFactory</mutatedClass><mutatedMethod>projectType</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>52</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTupleTypeFactory</mutatedClass><mutatedMethod>tupleType</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>15</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTupleTypeFactory</mutatedClass><mutatedMethod>tupleType</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTupleTypeFactory</mutatedClass><mutatedMethod>tupleType</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTupleTypeFactory</mutatedClass><mutatedMethod>tupleType</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTupleTypeFactory</mutatedClass><mutatedMethod>tupleTypePrefix</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.RecordAlg</mutatedClass><mutatedMethod>recordAssignExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.RecordAlgTest.testRecordAssignExp(tests.reference.exprs.RecordAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.RecordAlg</mutatedClass><mutatedMethod>recordEntryMutableSingle</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.RecordAlgTest.testRecordExp(tests.reference.exprs.RecordAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.RecordAlg</mutatedClass><mutatedMethod>recordEntrySingle</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.RecordAlgTest.testRecordExp(tests.reference.exprs.RecordAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.RecordAlg</mutatedClass><mutatedMethod>recordExp</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.RecordAlgTest.testRecordExp(tests.reference.exprs.RecordAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecordAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.RecordAlg</mutatedClass><mutatedMethod>recordSelectApplyFunction</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.RecordAlg</mutatedClass><mutatedMethod>recordSelectExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.RecordAlgTest.testRecordExp(tests.reference.exprs.RecordAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypeToForeignNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCTypeToForeignNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/functions/FNCTypeToForeignNode;</methodDescription><lineNumber>78</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypeToForeignNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCTypeToForeignNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>36</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypeToForeignNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCTypeToForeignNodeGen</mutatedClass><mutatedMethod>executeConvert</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypeToForeignNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCTypeToForeignNodeGen</mutatedClass><mutatedMethod>fallbackGuard_</mutatedMethod><methodDescription>(ILjava/lang/Object;)Z</methodDescription><lineNumber>71</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypeToForeignNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCTypeToForeignNodeGen</mutatedClass><mutatedMethod>fallbackGuard_</mutatedMethod><methodDescription>(ILjava/lang/Object;)Z</methodDescription><lineNumber>71</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCTypeToForeignNodeGen.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCTypeToForeignNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>61</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>TypeExpAlg.java</sourceFile><mutatedClass>camllight.algebras.typeexprs.TypeExpAlg</mutatedClass><mutatedMethod>functionType</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>TypeExpAlg.java</sourceFile><mutatedClass>camllight.algebras.typeexprs.TypeExpAlg</mutatedClass><mutatedMethod>tupleType</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>TypeExpAlg.java</sourceFile><mutatedClass>camllight.algebras.typeexprs.TypeExpAlg</mutatedClass><mutatedMethod>typeId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>TypeExpAlg.java</sourceFile><mutatedClass>camllight.algebras.typeexprs.TypeExpAlg</mutatedClass><mutatedMethod>varType</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TypeExpAlg.java</sourceFile><mutatedClass>camllight.algebras.typeexprs.TypeExpAlg</mutatedClass><mutatedMethod>variantDecl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>71</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TypeExpAlg.java</sourceFile><mutatedClass>camllight.algebras.typeexprs.TypeExpAlg</mutatedClass><mutatedMethod>variantTypeDecl</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>76</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$TypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>906</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$TypeContext</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>917</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$TypeContext</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$TupletypelistContext;</methodDescription><lineNumber>904</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$TypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>911</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$TypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>908</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$TypeContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$VartypeContext;</methodDescription><lineNumber>914</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FloatCalcAlg</mutatedClass><mutatedMethod>floatAddExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>17</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FloatCalcAlgTest.testFloatAddExp(tests.reference.exprs.FloatCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FloatCalcAlg</mutatedClass><mutatedMethod>floatDivideExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FloatCalcAlgTest.testFloatDivideExp(tests.reference.exprs.FloatCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FloatCalcAlg</mutatedClass><mutatedMethod>floatMultiplyExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FloatCalcAlgTest.testFloatMultiplyExp(tests.reference.exprs.FloatCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FloatCalcAlg</mutatedClass><mutatedMethod>floatNegateExp</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FloatCalcAlgTest.testFloatNegateExp(tests.reference.exprs.FloatCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FloatCalcAlg</mutatedClass><mutatedMethod>floatPowerExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FloatCalcAlgTest.testFloatPowerExp(tests.reference.exprs.FloatCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FloatCalcAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FloatCalcAlg</mutatedClass><mutatedMethod>floatSubtractExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FloatCalcAlgTest.testFloatSubtractExp(tests.reference.exprs.FloatCalcAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrufflePatternFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TrufflePatternFactory</mutatedClass><mutatedMethod>any</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrufflePatternFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TrufflePatternFactory</mutatedClass><mutatedMethod>match</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>36</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrufflePatternFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TrufflePatternFactory</mutatedClass><mutatedMethod>only</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrufflePatternFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TrufflePatternFactory</mutatedClass><mutatedMethod>pattAbs</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrufflePatternFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TrufflePatternFactory</mutatedClass><mutatedMethod>pattNonBinding</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>62</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrufflePatternFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TrufflePatternFactory</mutatedClass><mutatedMethod>pattUnion</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>52</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ArrayAlg</mutatedClass><mutatedMethod>arrayAssign</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ArrayAlgTest.testArrayAssign(tests.reference.exprs.ArrayAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ArrayAlg</mutatedClass><mutatedMethod>arraySelect</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ArrayAlgTest.testArraySingle(tests.reference.exprs.ArrayAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ArrayAlg</mutatedClass><mutatedMethod>arraySingle</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>17</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ArrayAlgTest.testArraySingle(tests.reference.exprs.ArrayAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ArrayAlg</mutatedClass><mutatedMethod>emptyArray</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ArrayAlgTest.testEmptyArray(tests.reference.exprs.ArrayAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ArrayAlg</mutatedClass><mutatedMethod>innerExpArrayDouble</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ArrayAlgTest.testArraySelect(tests.reference.exprs.ArrayAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ArrayAlg</mutatedClass><mutatedMethod>innerExpArrayMulti</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ArrayAlgTest.testArraySelect(tests.reference.exprs.ArrayAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecordFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleRecordFactory</mutatedClass><mutatedMethod>field</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecordFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleRecordFactory</mutatedClass><mutatedMethod>record</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecordFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleRecordFactory</mutatedClass><mutatedMethod>recordMatch</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>94</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecordFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleRecordFactory</mutatedClass><mutatedMethod>recordOver</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>59</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecordFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleRecordFactory</mutatedClass><mutatedMethod>recordSelect</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecordFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleRecordFactory</mutatedClass><mutatedMethod>recordUnion</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>67</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory</mutatedClass><mutatedMethod>vector</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>15</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory</mutatedClass><mutatedMethod>vector</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory</mutatedClass><mutatedMethod>vectorAppend</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory</mutatedClass><mutatedMethod>vectorAssign</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory</mutatedClass><mutatedMethod>vectorLength</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory</mutatedClass><mutatedMethod>vectorSelect</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$TypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1031</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$TypeContext</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1042</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$TypeContext</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$TupletypelistContext;</methodDescription><lineNumber>1029</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$TypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1036</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$TypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>1033</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$TypeContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$VartypeContext;</methodDescription><lineNumber>1039</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MapFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.MapFactory</mutatedClass><mutatedMethod>map</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>17</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.MapFactoryTest.testMap(tests.reference.MapFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MapFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.MapFactory</mutatedClass><mutatedMethod>mapDomain</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.MapFactoryTest.testMapDomain(tests.reference.MapFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MapFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.MapFactory</mutatedClass><mutatedMethod>mapGet</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>69</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.MapFactoryTest.testMap(tests.reference.MapFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MapFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.MapFactory</mutatedClass><mutatedMethod>mapOver</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.MapFactoryTest.testMapOver(tests.reference.MapFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MapFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.MapFactory</mutatedClass><mutatedMethod>mapUnion</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>48</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.MapFactoryTest.testMapUnion(tests.reference.MapFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MapFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.MapFactory</mutatedClass><mutatedMethod>mapUpdate</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.MapFactoryTest.testMapUpdate(tests.reference.MapFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$TypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1020</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$TypeContext</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1031</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$TypeContext</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$TupletypelistContext;</methodDescription><lineNumber>1018</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$TypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1025</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$TypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>1022</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$TypeContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$VartypeContext;</methodDescription><lineNumber>1028</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VectorFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.VectorFactory</mutatedClass><mutatedMethod>vector</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>16</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.VectorFactoryTest.testVector(tests.reference.VectorFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VectorFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.VectorFactory</mutatedClass><mutatedMethod>vector</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.VectorFactoryTest.testVectorSelect(tests.reference.VectorFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VectorFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.VectorFactory</mutatedClass><mutatedMethod>vectorAppend</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.VectorFactoryTest.testVectorLength(tests.reference.VectorFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VectorFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.VectorFactory</mutatedClass><mutatedMethod>vectorAssign</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>50</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.VectorFactoryTest.testVectorAssign(tests.reference.VectorFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VectorFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.VectorFactory</mutatedClass><mutatedMethod>vectorLength</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>44</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.VectorFactoryTest.testVectorLength(tests.reference.VectorFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VectorFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.VectorFactory</mutatedClass><mutatedMethod>vectorSelect</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.VectorFactoryTest.testVectorSelect(tests.reference.VectorFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory</mutatedClass><mutatedMethod>map</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>16</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory</mutatedClass><mutatedMethod>mapDomain</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory</mutatedClass><mutatedMethod>mapGet</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>73</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory</mutatedClass><mutatedMethod>mapOver</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>64</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory</mutatedClass><mutatedMethod>mapUnion</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>59</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory</mutatedClass><mutatedMethod>mapUpdate</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$TypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>997</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$TypeContext</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1008</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$TypeContext</mutatedClass><mutatedMethod>tupletypelist</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$TupletypelistContext;</methodDescription><lineNumber>995</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$TypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1002</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$TypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>999</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$TypeContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$VartypeContext;</methodDescription><lineNumber>1005</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$RecdeclmonoContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>2544</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$RecdeclmonoContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$IdentContext;</methodDescription><lineNumber>2547</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$RecdeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2556</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$RecdeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>2550</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$RecdeclmonoContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>2553</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntNegateNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/IntIntNegateNode;</methodDescription><lineNumber>76</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntNegateNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lio/usethesource/vallang/IInteger;</methodDescription><lineNumber>44</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntNegateNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntNegateNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>39</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntNegateNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>67</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatDivideNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/FloatFloatDivideNode;</methodDescription><lineNumber>85</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatDivideNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>50</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatDivideNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatDivideNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>45</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatDivideNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>76</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$FunctionContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$FunctionContext;</methodDescription><lineNumber>1701</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$FunctionContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$IdentContext;</methodDescription><lineNumber>1689</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$FunctionContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattmatchContext;</methodDescription><lineNumber>1698</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$FunctionContext</mutatedClass><mutatedMethod>pattmatchcurried</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattmatchcurriedContext;</methodDescription><lineNumber>1695</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$FunctionContext</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattmatchsingleContext;</methodDescription><lineNumber>1692</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntModuloNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntModuloNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/IntIntModuloNode;</methodDescription><lineNumber>133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntModuloNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntModuloNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/INumber;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntModuloNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntModuloNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntModuloNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntModuloNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>65</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntModuloNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntModuloNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>123</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$RecdeclmonoContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>2348</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$RecdeclmonoContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$IdentContext;</methodDescription><lineNumber>2351</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$RecdeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2360</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$RecdeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$PattContext;</methodDescription><lineNumber>2357</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$RecdeclmonoContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>2354</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecdeclmonoContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>2914</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecdeclmonoContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$IdentContext;</methodDescription><lineNumber>2917</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecdeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2926</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecdeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>2923</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecdeclmonoContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>2920</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFollowIfFwdNodeGen.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFollowIfFwdNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/recursion/RecursiveFollowIfFwdNode;</methodDescription><lineNumber>92</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFollowIfFwdNodeGen.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFollowIfFwdNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFollowIfFwdNodeGen.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFollowIfFwdNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFollowIfFwdNodeGen.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFollowIfFwdNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>45</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFollowIfFwdNodeGen.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFollowIfFwdNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>82</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/BoolGreaterNode;</methodDescription><lineNumber>133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/IBool;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>65</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>123</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$FunctionContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$FunctionContext;</methodDescription><lineNumber>1481</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$FunctionContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$IdentContext;</methodDescription><lineNumber>1469</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$FunctionContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattmatchContext;</methodDescription><lineNumber>1478</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$FunctionContext</mutatedClass><mutatedMethod>pattmatchcurried</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattmatchcurriedContext;</methodDescription><lineNumber>1475</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$FunctionContext</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattmatchsingleContext;</methodDescription><lineNumber>1472</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.StringFactory</mutatedClass><mutatedMethod>camlLightChar</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightChar(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.StringFactory</mutatedClass><mutatedMethod>camlLightString</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testCamlLightString(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.StringFactory</mutatedClass><mutatedMethod>char_</mutatedMethod><methodDescription>(Ljava/lang/Character;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testChar_(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.StringFactory</mutatedClass><mutatedMethod>string</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testString(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.StringFactory</mutatedClass><mutatedMethod>stringAppend</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.StringFactoryTest.testStringAppend(tests.reference.StringFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatMultiplyNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/FloatFloatMultiplyNode;</methodDescription><lineNumber>85</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatMultiplyNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>50</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatMultiplyNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatMultiplyNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>45</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatMultiplyNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>76</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleLogicControlFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleLogicControlFactory</mutatedClass><mutatedMethod>effect</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleLogicControlFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleLogicControlFactory</mutatedClass><mutatedMethod>for_</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>48</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleLogicControlFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleLogicControlFactory</mutatedClass><mutatedMethod>ifTrue</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleLogicControlFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleLogicControlFactory</mutatedClass><mutatedMethod>seq</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleLogicControlFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleLogicControlFactory</mutatedClass><mutatedMethod>whileTrue</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolEqualNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/BoolEqualNode;</methodDescription><lineNumber>90</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolEqualNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/IBool;</methodDescription><lineNumber>52</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolEqualNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolEqualNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>47</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolEqualNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>80</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntAddNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/IntIntAddNode;</methodDescription><lineNumber>133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntAddNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/INumber;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntAddNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntAddNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>65</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntAddNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>123</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatNegateNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/FloatFloatNegateNode;</methodDescription><lineNumber>76</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatNegateNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>44</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatNegateNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatNegateNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>39</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatNegateNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatNegateNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>67</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntMultiplyNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/IntIntMultiplyNode;</methodDescription><lineNumber>133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntMultiplyNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/INumber;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntMultiplyNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntMultiplyNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>65</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntMultiplyNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntMultiplyNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>123</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurryFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.CurryFactory</mutatedClass><mutatedMethod>curry</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.CurryFactoryTest.testUncurry(tests.reference.CurryFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurryFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.CurryFactory</mutatedClass><mutatedMethod>curryN</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.CurryFactoryTest.testCurryN(tests.reference.CurryFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurryFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.CurryFactory</mutatedClass><mutatedMethod>partialApp</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.CurryFactoryTest.testPartialApp(tests.reference.CurryFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurryFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.CurryFactory</mutatedClass><mutatedMethod>partialAppN</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.CurryFactoryTest.testPartialAppN(tests.reference.CurryFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurryFactory.java</sourceFile><mutatedClass>funcons.interpreter.functions.CurryFactory</mutatedClass><mutatedMethod>uncurry</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>54</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.CurryFactoryTest.testUncurry(tests.reference.CurryFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntDivideNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/IntIntDivideNode;</methodDescription><lineNumber>133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntDivideNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/INumber;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntDivideNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntDivideNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>65</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntDivideNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntDivideNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>123</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleStringFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleStringFactory</mutatedClass><mutatedMethod>camlLightChar</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleStringFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleStringFactory</mutatedClass><mutatedMethod>camlLightString</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleStringFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleStringFactory</mutatedClass><mutatedMethod>char_</mutatedMethod><methodDescription>(Ljava/lang/Character;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleStringFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleStringFactory</mutatedClass><mutatedMethod>string</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleStringFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleStringFactory</mutatedClass><mutatedMethod>stringAppend</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>46</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrintExp.java</sourceFile><mutatedClass>noa.syntax.demo.PrintExp</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnoa/syntax/demo/IPrint;Lnoa/syntax/demo/IPrint;)Lnoa/syntax/demo/IPrint;</methodDescription><lineNumber>9</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrintExp.java</sourceFile><mutatedClass>noa.syntax.demo.PrintExp</mutatedClass><mutatedMethod>avg</mutatedMethod><methodDescription>(Ljava/util/List;)Lnoa/syntax/demo/IPrint;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrintExp.java</sourceFile><mutatedClass>noa.syntax.demo.PrintExp</mutatedClass><mutatedMethod>avg2</mutatedMethod><methodDescription>(Ljava/util/List;)Lnoa/syntax/demo/IPrint;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrintExp.java</sourceFile><mutatedClass>noa.syntax.demo.PrintExp</mutatedClass><mutatedMethod>lit</mutatedMethod><methodDescription>(I)Lnoa/syntax/demo/IPrint;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrintExp.java</sourceFile><mutatedClass>noa.syntax.demo.PrintExp</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lnoa/syntax/demo/IPrint;Lnoa/syntax/demo/IPrint;)Lnoa/syntax/demo/IPrint;</methodDescription><lineNumber>52</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatPowerOfNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatPowerOfNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/FloatFloatPowerOf;</methodDescription><lineNumber>98</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatPowerOfNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatPowerOfNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>55</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatPowerOfNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatPowerOfNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatPowerOfNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatPowerOfNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>50</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatPowerOfNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatPowerOfNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>88</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EvalExp.java</sourceFile><mutatedClass>noa.syntax.demo.EvalExp</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnoa/syntax/demo/IEval;Lnoa/syntax/demo/IEval;)Lnoa/syntax/demo/IEval;</methodDescription><lineNumber>9</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EvalExp.java</sourceFile><mutatedClass>noa.syntax.demo.EvalExp</mutatedClass><mutatedMethod>avg</mutatedMethod><methodDescription>(Ljava/util/List;)Lnoa/syntax/demo/IEval;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EvalExp.java</sourceFile><mutatedClass>noa.syntax.demo.EvalExp</mutatedClass><mutatedMethod>avg2</mutatedMethod><methodDescription>(Ljava/util/List;)Lnoa/syntax/demo/IEval;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EvalExp.java</sourceFile><mutatedClass>noa.syntax.demo.EvalExp</mutatedClass><mutatedMethod>lit</mutatedMethod><methodDescription>(I)Lnoa/syntax/demo/IEval;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EvalExp.java</sourceFile><mutatedClass>noa.syntax.demo.EvalExp</mutatedClass><mutatedMethod>mul</mutatedMethod><methodDescription>(Lnoa/syntax/demo/IEval;Lnoa/syntax/demo/IEval;)Lnoa/syntax/demo/IEval;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ToDot.java</sourceFile><mutatedClass>noa.proxy.ToDot$Node</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ToDot.java</sourceFile><mutatedClass>noa.proxy.ToDot$Node</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ToDot.java</sourceFile><mutatedClass>noa.proxy.ToDot$Node</mutatedClass><mutatedMethod>getId</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>19</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ToDot.java</sourceFile><mutatedClass>noa.proxy.ToDot$Node</mutatedClass><mutatedMethod>getId</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>19</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ToDot.java</sourceFile><mutatedClass>noa.proxy.ToDot$Node</mutatedClass><mutatedMethod>getId</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.RecordFactory</mutatedClass><mutatedMethod>field</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecordFactoryTest.testField(tests.reference.RecordFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.RecordFactory</mutatedClass><mutatedMethod>record</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecordFactoryTest.testRecord(tests.reference.RecordFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.RecordFactory</mutatedClass><mutatedMethod>recordMatch</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>62</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecordFactoryTest.testRecordMatch(tests.reference.RecordFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.RecordFactory</mutatedClass><mutatedMethod>recordSelect</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecordFactoryTest.testRecordOver(tests.reference.RecordFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.RecordFactory</mutatedClass><mutatedMethod>recordUnion</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>55</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecordFactoryTest.testRecordOver(tests.reference.RecordFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecdeclmonoContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>2880</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecdeclmonoContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$IdentContext;</methodDescription><lineNumber>2883</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecdeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2892</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecdeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>2886</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecdeclmonoContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>2889</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLanguage.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLanguage</mutatedClass><mutatedMethod>createContext</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/TruffleLanguage$Env;)Lfuncons/truffle/nodes/FNCContext;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLanguage.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLanguage</mutatedClass><mutatedMethod>getFncRootNode</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/TruffleLanguage$ParsingRequest;)Lfuncons/truffle/nodes/FNCRootNode;</methodDescription><lineNumber>55</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLanguage.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLanguage</mutatedClass><mutatedMethod>importStandardLibrary</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>80</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLanguage.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLanguage</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/TruffleLanguage$ParsingRequest;)Lcom/oracle/truffle/api/CallTarget;</methodDescription><lineNumber>48</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLanguage.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLanguage</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Lcamllight/algebras/AllAlg;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterEqualNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/BoolGreaterEqualNode;</methodDescription><lineNumber>133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterEqualNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/IBool;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterEqualNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterEqualNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>65</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolGreaterEqualNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.BoolGreaterEqualNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>123</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatAddNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/values/FloatFloatAddNode;</methodDescription><lineNumber>85</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatAddNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>50</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatAddNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatAddNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>45</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatAddNodeGen.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatAddNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>76</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionIntToFloatNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionIntToFloatNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/auxiliary/IntoFloatConversionIntToFloatNode;</methodDescription><lineNumber>77</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionIntToFloatNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionIntToFloatNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionIntToFloatNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionIntToFloatNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionIntToFloatNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionIntToFloatNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>40</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionIntToFloatNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionIntToFloatNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>68</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$FunctionContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$FunctionContext;</methodDescription><lineNumber>1624</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$FunctionContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$IdentContext;</methodDescription><lineNumber>1612</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$FunctionContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattmatchContext;</methodDescription><lineNumber>1621</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$FunctionContext</mutatedClass><mutatedMethod>pattmatchcurried</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattmatchcurriedContext;</methodDescription><lineNumber>1618</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$FunctionContext</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattmatchsingleContext;</methodDescription><lineNumber>1615</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LogicControlFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.LogicControlFactory</mutatedClass><mutatedMethod>effect</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.LogicControlFactoryTest.testEffect(tests.reference.LogicControlFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LogicControlFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.LogicControlFactory</mutatedClass><mutatedMethod>for_</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>55</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.LogicControlFactoryTest.testFor_(tests.reference.LogicControlFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LogicControlFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.LogicControlFactory</mutatedClass><mutatedMethod>ifTrue</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testWhenTrue(tests.reference.ExceptionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LogicControlFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.LogicControlFactory</mutatedClass><mutatedMethod>seq</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.LogicControlFactoryTest.testSeq(tests.reference.LogicControlFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LogicControlFactory.java</sourceFile><mutatedClass>funcons.interpreter.controlflow.LogicControlFactory</mutatedClass><mutatedMethod>whileTrue</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.LogicControlFactoryTest.testWhileTrue(tests.reference.LogicControlFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionFloatToIntoNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionFloatToIntoNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExpressionNode;)Lfuncons/truffle/auxiliary/IntoFloatConversionFloatToIntoNode;</methodDescription><lineNumber>76</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionFloatToIntoNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionFloatToIntoNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionFloatToIntoNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionFloatToIntoNodeGen</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionFloatToIntoNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionFloatToIntoNodeGen</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>39</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionFloatToIntoNodeGen.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionFloatToIntoNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>67</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleCurryFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleCurryFactory</mutatedClass><mutatedMethod>curry</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleCurryFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleCurryFactory</mutatedClass><mutatedMethod>curryN</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>56</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleCurryFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleCurryFactory</mutatedClass><mutatedMethod>partialApp</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleCurryFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleCurryFactory</mutatedClass><mutatedMethod>partialAppN</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleCurryFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleCurryFactory</mutatedClass><mutatedMethod>uncurry</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>61</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleAssignFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleAssignFactory</mutatedClass><mutatedMethod>alloc</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleAssignFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleAssignFactory</mutatedClass><mutatedMethod>assign</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>15</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleAssignFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleAssignFactory</mutatedClass><mutatedMethod>assignedValue</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleAssignFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleAssignFactory</mutatedClass><mutatedMethod>assignedValueIfVar</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesGetSizeSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FunctionNamesMessageResolutionForeign$FunctionNamesGetSizeSubNode;</methodDescription><lineNumber>134</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesGetSizeSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>102</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesGetSizeSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>92</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesGetSizeSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>125</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeysSubNode$KEYSRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>256</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeysSubNode$KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>251</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeysSubNode$KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>251</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeysSubNode$KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>251</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesReadSubNode$READRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>134</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapReadSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/VariablesMapMessageResolutionForeign$VarsMapReadSubNode;</methodDescription><lineNumber>260</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapReadSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>225</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapReadSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>212</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapReadSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>251</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LinkedStackReader.java</sourceFile><mutatedClass>noa.context.env.LinkedStackReader</mutatedClass><mutatedMethod>ask</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LinkedStackReader.java</sourceFile><mutatedClass>noa.context.env.LinkedStackReader</mutatedClass><mutatedMethod>cc</mutatedMethod><methodDescription>(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LinkedStackReader.java</sourceFile><mutatedClass>noa.context.env.LinkedStackReader</mutatedClass><mutatedMethod>local</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LinkedStackReader.java</sourceFile><mutatedClass>noa.context.env.LinkedStackReader</mutatedClass><mutatedMethod>restore</mutatedMethod><methodDescription>(Lnoa/context/env/LinkedStackReader$Stack;Ljava/util/function/Supplier;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapReadSubNode$READRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>258</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>253</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>253</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>253</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Variable.java</sourceFile><mutatedClass>funcons.values.Variable</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>47</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Variable.java</sourceFile><mutatedClass>funcons.values.Variable</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>47</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variable.java</sourceFile><mutatedClass>funcons.values.Variable</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValue;)Z</methodDescription><lineNumber>52</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>tests.reference.VectorFactoryTest.testVectorAssign(tests.reference.VectorFactoryTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Variable.java</sourceFile><mutatedClass>funcons.values.Variable</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValue;)Z</methodDescription><lineNumber>52</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesHasSizeSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/VariableNamesMessageResolutionForeign$VarNamesHasSizeSubNode;</methodDescription><lineNumber>190</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesHasSizeSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>158</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesHasSizeSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>148</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesHasSizeSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>181</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclmonoContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>1360</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclmonoContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$IdentContext;</methodDescription><lineNumber>1363</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1369</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>1366</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclmonoContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>1283</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclmonoContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$IdentContext;</methodDescription><lineNumber>1286</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1292</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>1289</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapKeysSubNode$KEYSRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>299</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapKeysSubNode$KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>294</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapKeysSubNode$KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>294</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapKeysSubNode$KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>294</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFollowIfFwdNode.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFollowIfFwdNode</mutatedClass><mutatedMethod>getFrameSlot</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/FrameSlot;Lcom/oracle/truffle/api/frame/FrameDescriptor;)Lcom/oracle/truffle/api/frame/FrameSlot;</methodDescription><lineNumber>85</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFollowIfFwdNode.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFollowIfFwdNode</mutatedClass><mutatedMethod>getFrameSlots</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/FrameDescriptor;)[Lcom/oracle/truffle/api/frame/FrameSlot;</methodDescription><lineNumber>90</lineNumber><mutator>empty</mutator><index>1</index><block>1</block><killingTest/><description>Method body replaced by instructions that returns an empty array of the corresponding type</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFollowIfFwdNode.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFollowIfFwdNode</mutatedClass><mutatedMethod>getFrameSlots</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/FrameDescriptor;)[Lcom/oracle/truffle/api/frame/FrameSlot;</methodDescription><lineNumber>90</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFollowIfFwdNode.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFollowIfFwdNode</mutatedClass><mutatedMethod>recursiveFNCFunction</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Lfuncons/truffle/nodes/FNCFunction;)Ljava/lang/Object;</methodDescription><lineNumber>61</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignFunctionExecuteSubNode$EXECUTERootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>136</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignFunctionExecuteSubNode$EXECUTERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>131</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignFunctionExecuteSubNode$EXECUTERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>131</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignFunctionExecuteSubNode$EXECUTERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>131</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesReadSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FunctionNamesMessageResolutionForeign$FunctionNamesReadSubNode;</methodDescription><lineNumber>78</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesReadSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesReadSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesReadSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>69</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Abs.java</sourceFile><mutatedClass>funcons.values.Abs</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>20</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Abs.java</sourceFile><mutatedClass>funcons.values.Abs</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>20</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Abs.java</sourceFile><mutatedClass>funcons.values.Abs</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValue;)Z</methodDescription><lineNumber>25</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Abs.java</sourceFile><mutatedClass>funcons.values.Abs</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IValue;)Z</methodDescription><lineNumber>25</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclmonoContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>1371</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclmonoContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$IdentContext;</methodDescription><lineNumber>1374</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1380</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>1377</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Recorder.java</sourceFile><mutatedClass>noa.proxy.Recorder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Recorder.java</sourceFile><mutatedClass>noa.proxy.Recorder</mutatedClass><mutatedMethod>buildArgument</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Recorder.java</sourceFile><mutatedClass>noa.proxy.Recorder</mutatedClass><mutatedMethod>buildList</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;</methodDescription><lineNumber>56</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclTypeDefEquals(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Recorder.java</sourceFile><mutatedClass>noa.proxy.Recorder</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesHasSizeSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FunctionNamesMessageResolutionForeign$FunctionNamesHasSizeSubNode;</methodDescription><lineNumber>190</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesHasSizeSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>158</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesHasSizeSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>148</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeignFactory$FunctionNamesHasSizeSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>181</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectHasKeysSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FunctionsObjectMessageResolutionForeign$FunctionsObjectHasKeysSubNode;</methodDescription><lineNumber>134</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectHasKeysSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>102</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectHasKeysSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>92</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectHasKeysSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>125</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesReadSubNode$READRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>134</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FunctionAlg</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FunctionAlgTest.testFunc(tests.reference.exprs.FunctionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FunctionAlg</mutatedClass><mutatedMethod>functionApplication</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ControlAlgTest.testFor_(tests.reference.exprs.ControlAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FunctionAlg</mutatedClass><mutatedMethod>functionApplicationApplication</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.BindAlgTest.testDeclBindMonoFunc(tests.reference.decls.BindAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.FunctionAlg</mutatedClass><mutatedMethod>functionId</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ControlAlgTest.testFor_(tests.reference.exprs.ControlAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$KeyInfoSubNode$KEY_INFORootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>177</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$KeyInfoSubNode$KEY_INFORootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>172</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$KeyInfoSubNode$KEY_INFORootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>172</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$KeyInfoSubNode$KEY_INFORootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>172</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectReadSubNode$READRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>215</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectReadSubNode$READRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$FNCForeignFunctionExecuteSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/functions/FNCFunctionMessageResolutionForeign$FNCForeignFunctionExecuteSubNode;</methodDescription><lineNumber>79</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$FNCForeignFunctionExecuteSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$FNCForeignFunctionExecuteSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$FNCForeignFunctionExecuteSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCContext.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCContext</mutatedClass><mutatedMethod>fromForeignNumber</mutatedMethod><methodDescription>(Ljava/lang/Object;)J</methodDescription><lineNumber>63</lineNumber><mutator>0L</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 0L</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCContext.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCContext</mutatedClass><mutatedMethod>fromForeignNumber</mutatedMethod><methodDescription>(Ljava/lang/Object;)J</methodDescription><lineNumber>63</lineNumber><mutator>1L</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 1L</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCContext.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCContext</mutatedClass><mutatedMethod>fromForeignValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>46</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCContext.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCContext</mutatedClass><mutatedMethod>initRegistry</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)V</methodDescription><lineNumber>27</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapWriteSubNode$WRITERootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>134</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapWriteSubNode$WRITERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapWriteSubNode$WRITERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapWriteSubNode$WRITERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapWriteSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/VariablesMapMessageResolutionForeign$VarsMapWriteSubNode;</methodDescription><lineNumber>80</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapWriteSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapWriteSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapWriteSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>71</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclmonoContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>1140</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclmonoContext</mutatedClass><mutatedMethod>ident</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$IdentContext;</methodDescription><lineNumber>1143</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1149</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclmonoContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$PattContext;</methodDescription><lineNumber>1146</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$CheckFunctionSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/functions/FNCFunctionMessageResolutionForeign$CheckFunctionSubNode;</methodDescription><lineNumber>185</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$CheckFunctionSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>153</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$CheckFunctionSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>143</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$CheckFunctionSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>176</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesHasSizeSubNode$HAS_SIZERootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>215</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesHasSizeSubNode$HAS_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesHasSizeSubNode$HAS_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesHasSizeSubNode$HAS_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tracer.java</sourceFile><mutatedClass>funcons.debug.Tracer</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tracer.java</sourceFile><mutatedClass>funcons.debug.Tracer</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>57</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tracer.java</sourceFile><mutatedClass>funcons.debug.Tracer</mutatedClass><mutatedMethod>make</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tracer.java</sourceFile><mutatedClass>funcons.debug.Tracer</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesHasSizeSubNode$HAS_SIZERootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>215</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesHasSizeSubNode$HAS_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesHasSizeSubNode$HAS_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesHasSizeSubNode$HAS_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectKeyInfoSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FunctionsObjectMessageResolutionForeign$FunctionsObjectKeyInfoSubNode;</methodDescription><lineNumber>78</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectKeyInfoSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectKeyInfoSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectKeyInfoSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>69</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapHasKeysSubNode$HAS_KEYSRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>218</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapHasKeysSubNode$HAS_KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>213</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapHasKeysSubNode$HAS_KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>213</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapHasKeysSubNode$HAS_KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>213</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapKeysSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/VariablesMapMessageResolutionForeign$VarsMapKeysSubNode;</methodDescription><lineNumber>316</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapKeysSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>284</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapKeysSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>274</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapKeysSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>307</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapHasKeysSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/VariablesMapMessageResolutionForeign$VarsMapHasKeysSubNode;</methodDescription><lineNumber>198</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapHasKeysSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>166</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapHasKeysSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>156</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$VarsMapHasKeysSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>189</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesGetSizeSubNode$GET_SIZERootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>175</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesGetSizeSubNode$GET_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>170</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesGetSizeSubNode$GET_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>170</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesGetSizeSubNode$GET_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>170</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$FNCForeignIsExecutableSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/functions/FNCFunctionMessageResolutionForeign$FNCForeignIsExecutableSubNode;</methodDescription><lineNumber>129</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$FNCForeignIsExecutableSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>102</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$FNCForeignIsExecutableSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>93</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeignFactory$FNCForeignIsExecutableSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>120</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeyInfoSubNode$KEY_INFORootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>134</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeyInfoSubNode$KEY_INFORootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeyInfoSubNode$KEY_INFORootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeyInfoSubNode$KEY_INFORootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectHasKeysSubNode$HAS_KEYSRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>175</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectHasKeysSubNode$HAS_KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>170</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectHasKeysSubNode$HAS_KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>170</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectHasKeysSubNode$HAS_KEYSRootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>170</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>noa.proxy.demo.Main</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnoa/proxy/demo/ArithAlg;)Ljava/lang/Object;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>noa.proxy.demo.Main</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(Lnoa/proxy/demo/ArithAlg;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>noa.proxy.demo.Main</mutatedClass><mutatedMethod>exp2</mutatedMethod><methodDescription>(Lnoa/proxy/demo/ArithAlg;)Ljava/lang/Object;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>noa.proxy.demo.Main</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>37</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesReadSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/VariableNamesMessageResolutionForeign$VarNamesReadSubNode;</methodDescription><lineNumber>78</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesReadSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesReadSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesReadSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>69</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignIsExecutableSubNode$IS_EXECUTABLERootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>181</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignIsExecutableSubNode$IS_EXECUTABLERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>176</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignIsExecutableSubNode$IS_EXECUTABLERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>176</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignIsExecutableSubNode$IS_EXECUTABLERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>176</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesGetSizeSubNode$GET_SIZERootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>175</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesGetSizeSubNode$GET_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>170</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesGetSizeSubNode$GET_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>170</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesGetSizeSubNode$GET_SIZERootNode</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>170</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectKeysSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FunctionsObjectMessageResolutionForeign$FunctionsObjectKeysSubNode;</methodDescription><lineNumber>252</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectKeysSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>220</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectKeysSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>210</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectKeysSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>243</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesGetSizeSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/VariableNamesMessageResolutionForeign$VarNamesGetSizeSubNode;</methodDescription><lineNumber>134</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesGetSizeSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>102</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesGetSizeSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>92</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeignFactory$VarNamesGetSizeSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>125</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$KeyInfoSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/VariablesMapMessageResolutionForeign$KeyInfoSubNode;</methodDescription><lineNumber>142</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$KeyInfoSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>107</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$KeyInfoSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>94</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeignFactory$KeyInfoSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectReadSubNodeGen</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FunctionsObjectMessageResolutionForeign$FunctionsObjectReadSubNode;</methodDescription><lineNumber>196</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectReadSubNodeGen</mutatedClass><mutatedMethod>executeAndSpecialize</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>161</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectReadSubNodeGen</mutatedClass><mutatedMethod>executeWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>148</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeignFactory.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeignFactory$FunctionsObjectReadSubNodeGen</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/NodeCost;</methodDescription><lineNumber>187</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssignFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.AssignFactory</mutatedClass><mutatedMethod>alloc</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>37</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.AssignFactoryTest.testAssignedValue(tests.reference.AssignFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssignFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.AssignFactory</mutatedClass><mutatedMethod>assign</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.AssignFactoryTest.testAssign(tests.reference.AssignFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssignFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.AssignFactory</mutatedClass><mutatedMethod>assignedValue</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.AssignFactoryTest.testAssignedValue(tests.reference.AssignFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssignFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.AssignFactory</mutatedClass><mutatedMethod>assignedValueIfVar</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.AssignFactoryTest.testAssignedValueIfVar(tests.reference.AssignFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExparrayContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2694</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExparrayContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>2700</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ExparrayContext</mutatedClass><mutatedMethod>exparray</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExparrayContext;</methodDescription><lineNumber>2697</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$RecdeclContext</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2499</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$RecdeclContext</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$RecanddeclContext;</methodDescription><lineNumber>2496</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$RecdeclContext</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$RecdeclmonoContext;</methodDescription><lineNumber>2493</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Null.java</sourceFile><mutatedClass>funcons.values.Null</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lio/usethesource/vallang/visitors/IValueVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>11</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Null.java</sourceFile><mutatedClass>funcons.values.Null</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>21</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>tests.reference.NullFactoryTest.testNull_(tests.reference.NullFactoryTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Null.java</sourceFile><mutatedClass>funcons.values.Null</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>21</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$FunctionappContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>2416</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$FunctionappContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$FunctionContext;</methodDescription><lineNumber>2422</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$FunctionappContext</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$FunctionappContext;</methodDescription><lineNumber>2419</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntDivideNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntDivideNode</mutatedClass><mutatedMethod>addIInteger</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IInteger;Lio/usethesource/vallang/IReal;)Lio/usethesource/vallang/IInteger;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntDivideNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntDivideNode</mutatedClass><mutatedMethod>addIInteger</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IReal;Lio/usethesource/vallang/IInteger;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>33</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntDivideNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntDivideNode</mutatedClass><mutatedMethod>addIInteger</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IReal;Lio/usethesource/vallang/IReal;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PattMatchAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattMatchAlg</mutatedClass><mutatedMethod>pattMatchCurriedMulti</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FunctionAlgTest.testCurriedFunc(tests.reference.exprs.FunctionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PattMatchAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattMatchAlg</mutatedClass><mutatedMethod>pattMatchMulti</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattAlgTest.testPattConstant(tests.reference.patts.PattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PattMatchAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.PattMatchAlg</mutatedClass><mutatedMethod>pattMatchSingle</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.PattAlgTest.testPattWildcard(tests.reference.patts.PattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ExpAlg</mutatedClass><mutatedMethod>constrExp</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>46</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclNewConstrType(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ExpAlg</mutatedClass><mutatedMethod>idExp</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExpAlgTest.testIdExp(tests.reference.exprs.ExpAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ExpAlg</mutatedClass><mutatedMethod>typedExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExpAlgTest.testTypedExp(tests.reference.exprs.ExpAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCExpressionNode.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCExpressionNode</mutatedClass><mutatedMethod>executeIBool</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Lio/usethesource/vallang/IBool;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCExpressionNode.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCExpressionNode</mutatedClass><mutatedMethod>executeIInteger</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Lio/usethesource/vallang/IInteger;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCExpressionNode.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCExpressionNode</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>17</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$RecdeclContext</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2695</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$RecdeclContext</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$RecanddeclContext;</methodDescription><lineNumber>2692</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$RecdeclContext</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$RecdeclmonoContext;</methodDescription><lineNumber>2689</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ListPattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.ListPattAlg</mutatedClass><mutatedMethod>emptyListPatt</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.ListPattAlg</mutatedClass><mutatedMethod>headTailListPattMulti</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.ListPattAlgTest.testPattList(tests.reference.patts.ListPattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.ListPattAlg</mutatedClass><mutatedMethod>pattListSingle</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.ListPattAlgTest.testPattList(tests.reference.patts.ListPattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntModuloNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntModuloNode</mutatedClass><mutatedMethod>addIInteger</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IInteger;Lio/usethesource/vallang/IReal;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntModuloNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntModuloNode</mutatedClass><mutatedMethod>addIInteger</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IReal;Lio/usethesource/vallang/IInteger;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntModuloNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntModuloNode</mutatedClass><mutatedMethod>addIInteger</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IReal;Lio/usethesource/vallang/IReal;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecdeclContext</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>3031</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecdeclContext</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$RecanddeclContext;</methodDescription><lineNumber>3028</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecdeclContext</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$RecdeclmonoContext;</methodDescription><lineNumber>3025</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecdeclContext</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>3065</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecdeclContext</mutatedClass><mutatedMethod>recanddecl</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$RecanddeclContext;</methodDescription><lineNumber>3062</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecdeclContext</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$RecdeclmonoContext;</methodDescription><lineNumber>3059</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>declnewtype</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclnewtypeContext;</methodDescription><lineNumber>1400</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1403</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$VartypeContext;</methodDescription><lineNumber>1406</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>declnewtype</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclnewtypeContext;</methodDescription><lineNumber>1257</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1260</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$VartypeContext;</methodDescription><lineNumber>1263</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogicControlIfTrueNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.LogicControlIfTrueNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogicControlIfTrueNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.LogicControlIfTrueNode</mutatedClass><mutatedMethod>testResult</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Z</methodDescription><lineNumber>29</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogicControlIfTrueNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.LogicControlIfTrueNode</mutatedClass><mutatedMethod>testResult</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Z</methodDescription><lineNumber>29</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>declnewtype</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclnewtypeContext;</methodDescription><lineNumber>1477</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1480</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$VartypeContext;</methodDescription><lineNumber>1483</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ListAlg</mutatedClass><mutatedMethod>expList</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ListAlgTest.testExpListSingle(tests.reference.exprs.ListAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ListAlg</mutatedClass><mutatedMethod>headTailListExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>18</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ListAlgTest.testHeadTailListExp(tests.reference.exprs.ListAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ListAlg</mutatedClass><mutatedMethod>listConcatExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ListAlgTest.testListConcatExp(tests.reference.exprs.ListAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Env.java</sourceFile><mutatedClass>noa.proxy.demo.Env</mutatedClass><mutatedMethod>bind</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lnoa/proxy/demo/Env;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Env.java</sourceFile><mutatedClass>noa.proxy.demo.Env</mutatedClass><mutatedMethod>empty</mutatedMethod><methodDescription>()Lnoa/proxy/demo/Env;</methodDescription><lineNumber>6</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Env.java</sourceFile><mutatedClass>noa.proxy.demo.Env</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExparrayContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2728</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExparrayContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>2734</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ExparrayContext</mutatedClass><mutatedMethod>exparray</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExparrayContext;</methodDescription><lineNumber>2731</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$FunctionappContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>2220</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$FunctionappContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$FunctionContext;</methodDescription><lineNumber>2226</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$FunctionappContext</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$FunctionappContext;</methodDescription><lineNumber>2223</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>2326</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2332</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>2329</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>declnewtype</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclnewtypeContext;</methodDescription><lineNumber>1488</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1491</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DecloptionalvartypesContext</mutatedClass><mutatedMethod>vartype</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$VartypeContext;</methodDescription><lineNumber>1494</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>2638</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2644</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>2641</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser$ExpContext</mutatedClass><mutatedMethod>NUM</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>78</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>76</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser$ExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(I)Lnoa/syntax/demo/DemoParser$ExpContext;</methodDescription><lineNumber>80</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>2604</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2610</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>2607</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$FunctionappContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>2752</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$FunctionappContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$FunctionContext;</methodDescription><lineNumber>2758</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$FunctionappContext</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$FunctionappContext;</methodDescription><lineNumber>2755</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionappContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>2786</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionappContext</mutatedClass><mutatedMethod>function</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$FunctionContext;</methodDescription><lineNumber>2792</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$FunctionappContext</mutatedClass><mutatedMethod>functionapp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$FunctionappContext;</methodDescription><lineNumber>2789</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Demo.java</sourceFile><mutatedClass>noa.syntax.demo.Demo</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>31</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Demo.java</sourceFile><mutatedClass>noa.syntax.demo.Demo</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Lnoa/syntax/demo/AllAlg;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Demo.java</sourceFile><mutatedClass>noa.syntax.demo.Demo</mutatedClass><mutatedMethod>testBuilder</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>21</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>2130</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2136</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattmatchcurriedContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>(I)Lcamllightnocollections/parser/CLNoColParser$PattContext;</methodDescription><lineNumber>2133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$3</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Z</methodDescription><lineNumber>201</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$3</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Z</methodDescription><lineNumber>201</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$2</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Z</methodDescription><lineNumber>173</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$2</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Z</methodDescription><lineNumber>173</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$1</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Z</methodDescription><lineNumber>90</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$1</mutatedClass><mutatedMethod>visit</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/nodes/Node;)Z</methodDescription><lineNumber>90</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$VarianttypeContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2552</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$VarianttypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>2554</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolEqualNode.java</sourceFile><mutatedClass>funcons.truffle.values.BoolEqualNode</mutatedClass><mutatedMethod>equal</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IInteger;Lio/usethesource/vallang/IInteger;)Lio/usethesource/vallang/IBool;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolEqualNode.java</sourceFile><mutatedClass>funcons.truffle.values.BoolEqualNode</mutatedClass><mutatedMethod>equal</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Lio/usethesource/vallang/IBool;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecordpattappendixContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1854</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecordpattappendixContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>1856</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DecltypeappendixContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1314</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DecltypeappendixContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>1316</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclorexpContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclContext;</methodDescription><lineNumber>853</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclorexpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>850</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclorexpContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclContext;</methodDescription><lineNumber>819</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclorexpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>816</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleNullFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleNullFactory</mutatedClass><mutatedMethod>null_</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleNullFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleNullFactory</mutatedClass><mutatedMethod>undefined</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolution.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolution$CheckFunction</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>49</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolution.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolution$CheckFunction</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>49</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattmatchContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattmatchContext;</methodDescription><lineNumber>115</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattmatchContext</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattmatchsingleContext;</methodDescription><lineNumber>112</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PGen.java</sourceFile><mutatedClass>noa.syntax.PGen$Tk</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lnoa/syntax/PGen$Tk;)I</methodDescription><lineNumber>73</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PGen.java</sourceFile><mutatedClass>noa.syntax.PGen$Tk</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lnoa/syntax/PGen$Tk;)I</methodDescription><lineNumber>73</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ToDot.java</sourceFile><mutatedClass>noa.proxy.ToDot$Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>64</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ToDot.java</sourceFile><mutatedClass>noa.proxy.ToDot$Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>64</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclimplContext</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclimplContext;</methodDescription><lineNumber>1416</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclimplContext</mutatedClass><mutatedMethod>declorexp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclorexpContext;</methodDescription><lineNumber>1413</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariablesMapObject$VariablesMapMessageResolution$KeyInfoNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariablesMapObject;Ljava/lang/String;)I</methodDescription><lineNumber>282</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariablesMapObject$VariablesMapMessageResolution$KeyInfoNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariablesMapObject;Ljava/lang/String;)I</methodDescription><lineNumber>282</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DecllabeltypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>273</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DecllabeltypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>275</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject$FunctionsObjectMessageResolution$FunctionNamesObject</mutatedClass><mutatedMethod>isInstance</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>88</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject$FunctionsObjectMessageResolution$FunctionNamesObject</mutatedClass><mutatedMethod>isInstance</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>88</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattmatchsingleContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>949</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattmatchsingleContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>952</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightNoCollections.java</sourceFile><mutatedClass>camllightnocollections.CamlLightNoCollections</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/String;Lcamllightnocollections/NoCollectionsAlg;)Lio/usethesource/vallang/IValue;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightNoCollections.java</sourceFile><mutatedClass>camllightnocollections.CamlLightNoCollections</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Lcamllightnocollections/NoCollectionsAlg;)Ljava/lang/Object;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EvalArith.java</sourceFile><mutatedClass>noa.proxy.demo.EvalArith</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnoa/proxy/demo/IEval;Lnoa/proxy/demo/IEval;)Lnoa/proxy/demo/IEval;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EvalArith.java</sourceFile><mutatedClass>noa.proxy.demo.EvalArith</mutatedClass><mutatedMethod>lit</mutatedMethod><methodDescription>(I)Lnoa/proxy/demo/IEval;</methodDescription><lineNumber>7</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattmatchsingleContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>972</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattmatchsingleContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>975</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SupplyGivenFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.SupplyGivenFactory</mutatedClass><mutatedMethod>given</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>9</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.SupplyGivenFactoryTest.testGiven(tests.reference.SupplyGivenFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SupplyGivenFactory.java</sourceFile><mutatedClass>funcons.interpreter.entities.SupplyGivenFactory</mutatedClass><mutatedMethod>supply</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.SupplyGivenFactoryTest.testGiven(tests.reference.SupplyGivenFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Alt.java</sourceFile><mutatedClass>noa.syntax.Alt</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lnoa/syntax/Alt;)I</methodDescription><lineNumber>22</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Alt.java</sourceFile><mutatedClass>noa.syntax.Alt</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lnoa/syntax/Alt;)I</methodDescription><lineNumber>22</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclimplContext</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclimplContext;</methodDescription><lineNumber>1559</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclimplContext</mutatedClass><mutatedMethod>declorexp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclorexpContext;</methodDescription><lineNumber>1556</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightNoRecursion.java</sourceFile><mutatedClass>camllightnorecursion.CamlLightNoRecursion</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/String;Lcamllightnorecursion/NoRecAlg;)Lio/usethesource/vallang/IValue;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightNoRecursion.java</sourceFile><mutatedClass>camllightnorecursion.CamlLightNoRecursion</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Lcamllightnorecursion/NoRecAlg;)Ljava/lang/Object;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattmatchContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattmatchContext;</methodDescription><lineNumber>111</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattmatchContext</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattmatchsingleContext;</methodDescription><lineNumber>108</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclexceptionappendixContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2439</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclexceptionappendixContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>2441</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject</mutatedClass><mutatedMethod>isInstance</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>24</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject</mutatedClass><mutatedMethod>isInstance</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>24</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionLiteralNode.java</sourceFile><mutatedClass>funcons.truffle.functions.FunctionLiteralNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionLiteralNode.java</sourceFile><mutatedClass>funcons.truffle.functions.FunctionLiteralNode</mutatedClass><mutatedMethod>setCallTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/RootCallTarget;)V</methodDescription><lineNumber>53</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecordsingleContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1263</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecordsingleContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>1261</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattlistContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>892</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PattlistContext</mutatedClass><mutatedMethod>pattlist</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattlistContext;</methodDescription><lineNumber>889</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$HeadtaillistpattContext</mutatedClass><mutatedMethod>headtaillistpatt</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$HeadtaillistpattContext;</methodDescription><lineNumber>1198</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$HeadtaillistpattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>1201</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$VarianttypeContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2274</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$VarianttypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>2276</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleSupplyGivenFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleSupplyGivenFactory</mutatedClass><mutatedMethod>given</mutatedMethod><methodDescription>()Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleSupplyGivenFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleSupplyGivenFactory</mutatedClass><mutatedMethod>supply</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>18</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WithEnv.java</sourceFile><mutatedClass>noa.context.env.WithEnv</mutatedClass><mutatedMethod>askEnv</mutatedMethod><methodDescription>()Lnoa/context/env/Env;</methodDescription><lineNumber>16</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WithEnv.java</sourceFile><mutatedClass>noa.context.env.WithEnv</mutatedClass><mutatedMethod>local</mutatedMethod><methodDescription>(Lnoa/context/env/Env;Ljava/util/function/Supplier;)Ljava/lang/Object;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$HeadtaillistpattContext</mutatedClass><mutatedMethod>headtaillistpatt</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$HeadtaillistpattContext;</methodDescription><lineNumber>1175</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$HeadtaillistpattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>1178</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntoFloatConversionFactory.java</sourceFile><mutatedClass>funcons.interpreter.auxiliary.IntoFloatConversionFactory</mutatedClass><mutatedMethod>floatToInt</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.IntFloatConversionFactoryTest.testIntToFloat(tests.reference.IntFloatConversionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntoFloatConversionFactory.java</sourceFile><mutatedClass>funcons.interpreter.auxiliary.IntoFloatConversionFactory</mutatedClass><mutatedMethod>intToFloat</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.IntFloatConversionFactoryTest.testIntToFloat(tests.reference.IntFloatConversionFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclexceptionappendixContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>3005</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclexceptionappendixContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>3007</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattmatchContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattmatchContext;</methodDescription><lineNumber>112</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattmatchContext</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattmatchsingleContext;</methodDescription><lineNumber>109</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclimplContext</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclimplContext;</methodDescription><lineNumber>1636</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclimplContext</mutatedClass><mutatedMethod>declorexp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclorexpContext;</methodDescription><lineNumber>1633</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattmatchContext</mutatedClass><mutatedMethod>pattmatch</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattmatchContext;</methodDescription><lineNumber>113</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattmatchContext</mutatedClass><mutatedMethod>pattmatchsingle</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattmatchsingleContext;</methodDescription><lineNumber>110</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Fwd.java</sourceFile><mutatedClass>funcons.values.recursion.Fwd</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>27</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fwd.java</sourceFile><mutatedClass>funcons.values.recursion.Fwd</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>27</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>tests.reference.RecursiveFactoryTest.testFreshFwd(tests.reference.RecursiveFactoryTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DecltypeappendixContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1303</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DecltypeappendixContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>1305</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntoFloatConversionFactory.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.TruffleIntoFloatConversionFactory</mutatedClass><mutatedMethod>floatToInt</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>18</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntoFloatConversionFactory.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.TruffleIntoFloatConversionFactory</mutatedClass><mutatedMethod>intToFloat</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattlistContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>903</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattlistContext</mutatedClass><mutatedMethod>pattlist</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattlistContext;</methodDescription><lineNumber>900</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecordpattappendixContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1820</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecordpattappendixContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>1822</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$KeyInfoSubNode</mutatedClass><mutatedMethod>accessWithTarget</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariablesMapObject;Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>162</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$KeyInfoSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>192</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$HeadtaillistpattContext</mutatedClass><mutatedMethod>headtaillistpatt</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$HeadtaillistpattContext;</methodDescription><lineNumber>1209</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$HeadtaillistpattContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>1212</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Token.java</sourceFile><mutatedClass>funcons.values.types.Token</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testNomTag(tests.reference.TypeFactoryTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>funcons.values.types.Token</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>23</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testNewType(tests.reference.TypeFactoryTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordPattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.RecordPattAlg</mutatedClass><mutatedMethod>recordPatt</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.RecordPattAlgTest.testRecordPatt(tests.reference.patts.RecordPattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecordPattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.RecordPattAlg</mutatedClass><mutatedMethod>recordPattAppendix</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.RecordPattAlgTest.testRecordPatt(tests.reference.patts.RecordPattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DecllabeltypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>272</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DecllabeltypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>274</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LetAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.LetAlg</mutatedClass><mutatedMethod>id</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExpAlgTest.testIdExp(tests.reference.exprs.ExpAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LetAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.LetAlg</mutatedClass><mutatedMethod>letInExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.FunctionAlgTest.testFunctionId(tests.reference.exprs.FunctionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattmatchsingleContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>983</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PattmatchsingleContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>986</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclexceptionappendixContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2971</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclexceptionappendixContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>2973</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclorexpContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclContext;</methodDescription><lineNumber>842</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclorexpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>839</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclorexpContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclContext;</methodDescription><lineNumber>780</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclorexpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>777</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$LetExpContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclContext;</methodDescription><lineNumber>1438</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$LetExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>1435</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunconException.java</sourceFile><mutatedClass>funcons.values.signals.FunconException</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>21</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testException(tests.reference.ExceptionFactoryTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FunconException.java</sourceFile><mutatedClass>funcons.values.signals.FunconException</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>21</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.NullFactory</mutatedClass><mutatedMethod>null_</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.NullFactoryTest.testNull_(tests.reference.NullFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullFactory.java</sourceFile><mutatedClass>funcons.interpreter.values.NullFactory</mutatedClass><mutatedMethod>undefined</mutatedMethod><methodDescription>()Lfuncons/carriers/IEval;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.NullFactoryTest.testUndefined(tests.reference.NullFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DecllabeltypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>271</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DecllabeltypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>273</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ModuleAlg.java</sourceFile><mutatedClass>camllight.algebras.toplevel.ModuleAlg</mutatedClass><mutatedMethod>declImpl</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>18</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.GlobalAlgTest.testDeclEnumException(tests.reference.decls.GlobalAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ModuleAlg.java</sourceFile><mutatedClass>camllight.algebras.toplevel.ModuleAlg</mutatedClass><mutatedMethod>declOrExpExp</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Undefined.java</sourceFile><mutatedClass>funcons.values.Undefined</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>14</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>tests.reference.NullFactoryTest.testUndefined(tests.reference.NullFactoryTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Undefined.java</sourceFile><mutatedClass>funcons.values.Undefined</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>14</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecordsingleContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1252</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecordsingleContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$ExpContext;</methodDescription><lineNumber>1250</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariableNamesObject</mutatedClass><mutatedMethod>isInstance</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>354</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariableNamesObject</mutatedClass><mutatedMethod>isInstance</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>354</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$CheckFunctionSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>231</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$CheckFunctionSubNode</mutatedClass><mutatedMethod>testWithTarget</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Ljava/lang/Object;</methodDescription><lineNumber>207</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatPowerOf.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatPowerOf</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IInteger;Lio/usethesource/vallang/IReal;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatPowerOf.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatPowerOf</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IReal;Lio/usethesource/vallang/IReal;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RunTimeFunconException.java</sourceFile><mutatedClass>funcons.values.signals.RunTimeFunconException</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>21</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testException(tests.reference.ExceptionFactoryTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RunTimeFunconException.java</sourceFile><mutatedClass>funcons.values.signals.RunTimeFunconException</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>21</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>tests.reference.ExceptionFactoryTest.testException(tests.reference.ExceptionFactoryTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$LetExpContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclContext;</methodDescription><lineNumber>1449</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$LetExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$ExpContext;</methodDescription><lineNumber>1446</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrintPrintNode.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.PrintPrintNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrintPrintNode.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.PrintPrintNode</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>42</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariablesMapObject</mutatedClass><mutatedMethod>isInstance</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>253</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariablesMapObject</mutatedClass><mutatedMethod>isInstance</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/interop/TruffleObject;)Z</methodDescription><lineNumber>253</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclimplContext</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclimplContext;</methodDescription><lineNumber>1647</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclimplContext</mutatedClass><mutatedMethod>declorexp</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclorexpContext;</methodDescription><lineNumber>1644</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$LetExpContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclContext;</methodDescription><lineNumber>1361</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$LetExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$ExpContext;</methodDescription><lineNumber>1358</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionRegistry.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCFunctionRegistry</mutatedClass><mutatedMethod>lookup</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lfuncons/truffle/nodes/FNCFunction;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionRegistry.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCFunctionRegistry</mutatedClass><mutatedMethod>register</mutatedMethod><methodDescription>(Ljava/lang/String;Lfuncons/truffle/nodes/FNCRootNode;)Lfuncons/truffle/nodes/FNCFunction;</methodDescription><lineNumber>38</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$VarianttypeContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2586</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$VarianttypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>2588</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DecllabeltypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>275</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DecllabeltypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>277</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattmatchsingleContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>858</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PattmatchsingleContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattContext;</methodDescription><lineNumber>861</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NoOp.java</sourceFile><mutatedClass>noa.proxy.NoOp</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>18</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NoOp.java</sourceFile><mutatedClass>noa.proxy.NoOp</mutatedClass><mutatedMethod>noOp</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/lang/Object;</methodDescription><lineNumber>10</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightNoSideEffects.java</sourceFile><mutatedClass>camllightnosideeffects.CamlLightNoSideEffects</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/String;Lcamllightnosideeffects/NoSEAlg;)Lio/usethesource/vallang/IValue;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CamlLightNoSideEffects.java</sourceFile><mutatedClass>camllightnosideeffects.CamlLightNoSideEffects</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;Lcamllightnosideeffects/NoSEAlg;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLVariant.java</sourceFile><mutatedClass>funcons.values.cl.CLVariant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testClVariant(tests.reference.TypeFactoryTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CLVariant.java</sourceFile><mutatedClass>funcons.values.cl.CLVariant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>29</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>tests.reference.TypeFactoryTest.testClVariant(tests.reference.TypeFactoryTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DecltypeappendixContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1083</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DecltypeappendixContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>1085</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EvalLet.java</sourceFile><mutatedClass>noa.proxy.demo.EvalLet</mutatedClass><mutatedMethod>let</mutatedMethod><methodDescription>(Ljava/lang/String;Lnoa/proxy/demo/IEvalEnv;Lnoa/proxy/demo/IEvalEnv;)Lnoa/proxy/demo/IEvalEnv;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EvalLet.java</sourceFile><mutatedClass>noa.proxy.demo.EvalLet</mutatedClass><mutatedMethod>var</mutatedMethod><methodDescription>(Ljava/lang/String;)Lnoa/proxy/demo/IEvalEnv;</methodDescription><lineNumber>7</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$VarianttypeContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2078</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$VarianttypeContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>2080</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclexceptionappendixContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2635</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclexceptionappendixContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>2637</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$LetExpContext</mutatedClass><mutatedMethod>decl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclContext;</methodDescription><lineNumber>1218</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$LetExpContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$ExpContext;</methodDescription><lineNumber>1215</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattlistContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>869</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PattlistContext</mutatedClass><mutatedMethod>pattlist</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattlistContext;</methodDescription><lineNumber>866</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.RefAlg</mutatedClass><mutatedMethod>dereferenceExp</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.RefAlgTest.testDereferenceExp(tests.reference.exprs.RefAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.RefAlg</mutatedClass><mutatedMethod>refAssignExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>17</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.RefAlgTest.testRefAssignExp(tests.reference.exprs.RefAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DecltypeappendixContext</mutatedClass><mutatedMethod>CONSTRTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1226</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DecltypeappendixContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>1228</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$AnddeclContext</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclmonoContext;</methodDescription><lineNumber>2518</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory$IntDivide</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>146</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleStringFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleStringFactory$String_</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>73</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeysSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>270</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$AnddeclContext</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclmonoContext;</methodDescription><lineNumber>2552</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VectorVectorLengthNode.java</sourceFile><mutatedClass>funcons.truffle.collections.VectorVectorLengthNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject$FunctionsObjectMessageResolution$FunctionNamesObject$FunctionNamesMessageResolution$FunctionNamesGetSizeNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FunctionsObject$FunctionsObjectMessageResolution$FunctionNamesObject;)Ljava/lang/Object;</methodDescription><lineNumber>108</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VectorVectorNode2.java</sourceFile><mutatedClass>funcons.truffle.collections.VectorVectorNode2</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntoFloatConversionFactory.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.TruffleIntoFloatConversionFactory$FloatToInt</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesGetSizeSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>189</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntSubstractNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntSubstractNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory$GreaterEqual</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>111</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionAbsNode2.java</sourceFile><mutatedClass>funcons.truffle.functions.FunctionAbsNode2</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory$FreshFwds</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>89</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleStringFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleStringFactory$CamlLightString</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>86</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TupleAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.TupleAlg</mutatedClass><mutatedMethod>exprTupleMulti</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.TupleAlgTest.testExprTupleMulti(tests.reference.exprs.TupleAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory$VectorLength</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>94</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory$TuplePrefix</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>130</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$DeclnewtypeappendixContext</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DecloptionalvartypesContext;</methodDescription><lineNumber>1575</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory$BoundValue</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>122</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory$Vector2</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>81</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CurryCurryNode.java</sourceFile><mutatedClass>funcons.truffle.functions.CurryCurryNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>18</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ArrayDequeReader.java</sourceFile><mutatedClass>noa.context.env.ArrayDequeReader</mutatedClass><mutatedMethod>local</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory$Abs2</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>105</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLPGen.java</sourceFile><mutatedClass>camllight.parser.CLPGen</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>8</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ListProjectListNode.java</sourceFile><mutatedClass>funcons.truffle.collections.ListProjectListNode</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>25</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$PatttupleContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$PattContext;</methodDescription><lineNumber>1378</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MapMapOverNode.java</sourceFile><mutatedClass>funcons.truffle.collections.MapMapOverNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$ProgContext</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclimplContext;</methodDescription><lineNumber>2185</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEPGen.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEPGen</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>8</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapReadSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>273</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectHasKeysSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>189</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$VartypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>324</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory$Type</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>182</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$RecanddeclContext</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$RecdeclmonoContext;</methodDescription><lineNumber>1709</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleLogicControlFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleLogicControlFactory$IfTrue</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>64</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariablesMapObject$VariablesMapMessageResolution$VarsMapReadNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariablesMapObject;Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>301</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>StringStringNode.java</sourceFile><mutatedClass>funcons.truffle.values.StringStringNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$EmptylistContext</mutatedClass><mutatedMethod>EMPTYLISTTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>916</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory$Accum</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>168</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ListListLengthNode.java</sourceFile><mutatedClass>funcons.truffle.collections.ListListLengthNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFloatFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleFloatFactory$Lit</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>71</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionMatchFailureNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.ExceptionMatchFailureNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>17</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Print.java</sourceFile><mutatedClass>noa.proxy.Print</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SupplyGivenSupplyNode.java</sourceFile><mutatedClass>funcons.truffle.entities.SupplyGivenSupplyNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleSupplyGivenFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleSupplyGivenFactory$Supply</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>39</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory$PrefereOver</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>164</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject$FunctionsObjectMessageResolution$FunctionsObjectKeysNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FunctionsObject;)Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariableNamesObject$VariableNamesMessageResolution$VarNamesReadNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariableNamesObject;I)Ljava/lang/Object;</methodDescription><lineNumber>383</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesReadSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>149</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MapFactory.java</sourceFile><mutatedClass>funcons.interpreter.collections.MapFactory$1</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IMap;Lio/usethesource/vallang/IValue;)Lio/usethesource/vallang/IValue;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.MapFactoryTest.testMapOver(tests.reference.MapFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory$MapOver</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>120</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleStringFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleStringFactory$StringAppend</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveSetForwardsNode.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveSetForwardsNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariablesMapObject$VariablesMapMessageResolution$VarsMapWriteNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariablesMapObject;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>321</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory$ListAppend</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>198</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory$Close</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>118</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrintFactory.java</sourceFile><mutatedClass>funcons.interpreter.auxiliary.PrintFactory</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lfuncons/carriers/IEval;)Lfuncons/carriers/IEval;</methodDescription><lineNumber>10</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.PrintFactoryTest.testPrint(tests.reference.PrintFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$RecanddeclContext</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$RecdeclmonoContext;</methodDescription><lineNumber>1820</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory$ListLength</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>160</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatDivideNode.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatDivideNode</mutatedClass><mutatedMethod>addIInteger</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IReal;Lio/usethesource/vallang/IReal;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariableNamesObject$VariableNamesMessageResolution$VarNamesHasSizeNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariableNamesObject;)Ljava/lang/Object;</methodDescription><lineNumber>365</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecPGen.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecPGen</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>8</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$IdentContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>744</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory$ListPrefix</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>182</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory$Not</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>81</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogicControlWhileTrueNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.LogicControlWhileTrueNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory$MapUpdate</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>90</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VectorVectorSelectNode.java</sourceFile><mutatedClass>funcons.truffle.collections.VectorVectorSelectNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TupleTuplePrefixMatchNode.java</sourceFile><mutatedClass>funcons.truffle.collections.TupleTuplePrefixMatchNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapKeysSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>313</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFwdNode.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFwdNode</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>12</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$ProgContext</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$DeclimplContext;</methodDescription><lineNumber>2693</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolution.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolution$FNCForeignFunctionExecuteNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCFunction;[Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolution.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolution$FNCForeignIsExecutableNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>41</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCUndefinedFunctionRootNode.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCUndefinedFunctionRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogicControlEffectNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.LogicControlEffectNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoParser.java</sourceFile><mutatedClass>noa.syntax.demo.DemoParser$ProgContext</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lnoa/syntax/demo/DemoParser$ExpContext;</methodDescription><lineNumber>223</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$PatttupleContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$PattContext;</methodDescription><lineNumber>1598</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntoFloatConversionIntToFloatNode.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.IntoFloatConversionIntToFloatNode</mutatedClass><mutatedMethod>conversion</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IInteger;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionElseNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.ExceptionElseNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesHasSizeSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>229</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory$MapGet</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>135</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory$UnknownType</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>154</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DemoPGen.java</sourceFile><mutatedClass>noa.syntax.demo.DemoPGen</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>8</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TestableModuleAlg.java</sourceFile><mutatedClass>camllight.algebras.toplevel.TestableModuleAlg</mutatedClass><mutatedMethod>declOrExpExp</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.constants.ConstantsAlgTest.testNull_(tests.reference.constants.ConstantsAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleCurryFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleCurryFactory$Curry</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>88</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullNullNode.java</sourceFile><mutatedClass>funcons.truffle.values.NullNullNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleStringFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleStringFactory$CamlLightChar</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>99</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$ProgContext</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DeclimplContext;</methodDescription><lineNumber>2659</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Union.java</sourceFile><mutatedClass>noa.proxy.Union</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>10</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory$Else_</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>125</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory$BindValue</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>138</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectReadSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>230</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CurryCurryNNode.java</sourceFile><mutatedClass>funcons.truffle.functions.CurryCurryNNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntoFloatConversionFactory.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.TruffleIntoFloatConversionFactory$IntToFloat</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory$TupleHead</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>143</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCMainRootNode.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCMainRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>18</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoolNotNode.java</sourceFile><mutatedClass>funcons.truffle.values.BoolNotNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$ProgContext</mutatedClass><mutatedMethod>declimpl</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclimplContext;</methodDescription><lineNumber>2381</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory$Tuple0</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>100</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleLogicControlFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleLogicControlFactory$WhileTrue</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntMultiplyNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntMultiplyNode</mutatedClass><mutatedMethod>addIInteger</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IReal;Lio/usethesource/vallang/IInteger;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>30</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleNullFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleNullFactory$Null_</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>27</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject$FunctionsObjectMessageResolution$FunctionsObjectKeyInfoNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FunctionsObject;Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject$FunctionsObjectMessageResolution$FunctionNamesObject$FunctionNamesMessageResolution$FunctionNamesHasSizeNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FunctionsObject$FunctionsObjectMessageResolution$FunctionNamesObject;)Ljava/lang/Object;</methodDescription><lineNumber>99</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionFailNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.ExceptionFailNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VectorVectorNode.java</sourceFile><mutatedClass>funcons.truffle.collections.VectorVectorNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>15</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory$IntNegate</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>116</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory$IntMultiply</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>131</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory$VectorAssign</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>122</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrufflePrintFactory.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.TrufflePrintFactory</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCExecuteNode;)Lfuncons/truffle/nodes/FNCExecuteNode;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntIntAddNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntIntAddNode</mutatedClass><mutatedMethod>addIInteger</mutatedMethod><methodDescription>(Lio/usethesource/vallang/IReal;Lio/usethesource/vallang/IInteger;)Lio/usethesource/vallang/IReal;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory$List</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>167</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>StringStringAppendNode.java</sourceFile><mutatedClass>funcons.truffle.values.StringStringAppendNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$PatttupleContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$PattContext;</methodDescription><lineNumber>1609</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TupleProjectNode.java</sourceFile><mutatedClass>funcons.truffle.collections.TupleProjectNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MapMapDomainNode.java</sourceFile><mutatedClass>funcons.truffle.collections.MapMapDomainNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullUndefinedNode.java</sourceFile><mutatedClass>funcons.truffle.values.NullUndefinedNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ToString.java</sourceFile><mutatedClass>noa.proxy.ToString</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>8</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleAssignFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleAssignFactory$AssignedValue</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$TupletypelistContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$TypeContext;</methodDescription><lineNumber>2309</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RecBindAlg.java</sourceFile><mutatedClass>camllight.algebras.decls.RecBindAlg</mutatedClass><mutatedMethod>declRec</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>14</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.decls.RecBindAlgTest.testDeclRec(tests.reference.decls.RecBindAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$IdentContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>783</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AssignAssignNode.java</sourceFile><mutatedClass>funcons.truffle.entities.AssignAssignNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatFloatSubstractNode.java</sourceFile><mutatedClass>funcons.truffle.values.FloatFloatSubstractNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$IdentContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>806</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleLogicControlFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleLogicControlFactory$Seq</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>82</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$CheckFunctionSubNode$LanguageCheckRootNode</mutatedClass><mutatedMethod>execute</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>217</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleLogicControlFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleLogicControlFactory$For_</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>116</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.StringAlg</mutatedClass><mutatedMethod>stringAppendExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>11</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.StringAlgTest.testStringAppendExp(tests.reference.exprs.StringAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory$Id</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>151</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TupleTupleHeadNode.java</sourceFile><mutatedClass>funcons.truffle.collections.TupleTupleHeadNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$TupletypelistContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllight/parser/CLParser$TypeContext;</methodDescription><lineNumber>2875</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$TupletypelistContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$TypeContext;</methodDescription><lineNumber>2841</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory$Scope</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>109</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTypeFactory$TypeVar</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>168</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TrufflePrintFactory.java</sourceFile><mutatedClass>funcons.truffle.auxiliary.TrufflePrintFactory$Print</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory$MapDomain</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>148</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesReadSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>149</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionNamesMessageResolutionForeign$FunctionNamesHasSizeSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>229</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$AnddeclContext</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DeclmonoContext;</methodDescription><lineNumber>2044</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$EmptylistContext</mutatedClass><mutatedMethod>EMPTYLISTTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>825</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleTypeFactory.java</sourceFile><mutatedClass>funcons.truffle.types.TruffleTupleTypeFactory$TupleType</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>58</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Propagate.java</sourceFile><mutatedClass>noa.proxy.Propagate</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>20</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IntLitNode.java</sourceFile><mutatedClass>funcons.truffle.values.IntLitNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ListListNode.java</sourceFile><mutatedClass>funcons.truffle.collections.ListListNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Sharing.java</sourceFile><mutatedClass>noa.proxy.Sharing</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory$Apply</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>135</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject$FunctionsObjectMessageResolution$FunctionsObjectHasKeysNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FunctionsObject;)Ljava/lang/Object;</methodDescription><lineNumber>35</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory$IntAdd</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>73</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory$MatchFailure</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapHasKeysSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>232</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory$Bool</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>68</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>StringCamlLightStringNode.java</sourceFile><mutatedClass>funcons.truffle.values.StringCamlLightStringNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MapMapNode.java</sourceFile><mutatedClass>funcons.truffle.collections.MapMapNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$VartypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>328</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableNamesMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariableNamesMessageResolutionForeign$VarNamesGetSizeSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>189</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject$FunctionsObjectMessageResolution$FunctionsObjectReadNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FunctionsObject;Ljava/lang/String;)Ljava/lang/Object;</methodDescription><lineNumber>67</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory$Map</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>31</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignFunctionExecuteSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>155</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$VartypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>325</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TupleTupleNode.java</sourceFile><mutatedClass>funcons.truffle.collections.TupleTupleNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObjectMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObjectMessageResolutionForeign$FunctionsObjectKeyInfoSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>149</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$RecanddeclContext</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$RecdeclmonoContext;</methodDescription><lineNumber>1566</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory$Reclose</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>120</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleNullFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleNullFactory$Undefined</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>34</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariablesMapMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.nodes.VariablesMapMessageResolutionForeign$VarsMapWriteSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>151</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$RecanddeclContext</mutatedClass><mutatedMethod>recdeclmono</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$RecdeclmonoContext;</methodDescription><lineNumber>1786</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$IdentContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>817</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory$TuplePrefixMatch</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>115</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory$Throw_</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>110</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory$Vector</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>51</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory$SetForwards</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>102</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecordFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleRecordFactory$Field</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>123</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory$Environment</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>79</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$AnddeclContext</mutatedClass><mutatedMethod>declmono</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DeclmonoContext;</methodDescription><lineNumber>2240</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MapUnionNode.java</sourceFile><mutatedClass>funcons.truffle.collections.MapUnionNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleMapFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleMapFactory$MapUnion</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>105</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCUndefinedNameException.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCUndefinedNameException</mutatedClass><mutatedMethod>undefinedFunction</mutatedMethod><methodDescription>(Ljava/lang/String;)Lfuncons/truffle/functions/FNCUndefinedNameException;</methodDescription><lineNumber>5</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory$FollowIfFwd</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariablesMapObject$VariablesMapMessageResolution$VarsMapKeysNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariablesMapObject;)Ljava/lang/Object;</methodDescription><lineNumber>273</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleCurryFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleCurryFactory$CurryN</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>75</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SupplyGivenGivenNode.java</sourceFile><mutatedClass>funcons.truffle.entities.SupplyGivenGivenNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColParser.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColParser$DeclnewtypeappendixContext</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllightnocollections/parser/CLNoColParser$DecloptionalvartypesContext;</methodDescription><lineNumber>1344</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariablesMapObject$VariablesMapMessageResolution$VarsMapHasKeysNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariablesMapObject;)Ljava/lang/Object;</methodDescription><lineNumber>263</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionsObject.java</sourceFile><mutatedClass>funcons.truffle.nodes.FunctionsObject$FunctionsObjectMessageResolution$FunctionNamesObject$FunctionNamesMessageResolution$FunctionNamesReadNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FunctionsObject$FunctionsObjectMessageResolution$FunctionNamesObject;I)Ljava/lang/Object;</methodDescription><lineNumber>117</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$PatttupleContext</mutatedClass><mutatedMethod>patt</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$PattContext;</methodDescription><lineNumber>1521</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IEval.java</sourceFile><mutatedClass>funcons.carriers.IEval</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>()Lio/usethesource/vallang/IValue;</methodDescription><lineNumber>15</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.BindingFactoryTest.testId(tests.reference.BindingFactoryTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogicControlForNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.LogicControlForNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>32</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogicControlSeqNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.LogicControlSeqNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleTupleFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleTupleFactory$TupleTail</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>156</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunction.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCFunction</mutatedClass><mutatedMethod>getForeignAccess</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/interop/ForeignAccess;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBindingFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleBindingFactory$Closure</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>94</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleListFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleListFactory$ProjectList</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>147</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$DeclnewtypeappendixContext</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllightnorecursion/parser/CLNoRecParser$DecloptionalvartypesContext;</methodDescription><lineNumber>1564</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecursiveFreshFwdsNode.java</sourceFile><mutatedClass>funcons.truffle.recursion.RecursiveFreshFwdsNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoRecParser.java</sourceFile><mutatedClass>camllightnorecursion.parser.CLNoRecParser$EmptylistContext</mutatedClass><mutatedMethod>EMPTYLISTTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>939</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleSupplyGivenFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleSupplyGivenFactory$Given</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoColPGen.java</sourceFile><mutatedClass>camllightnocollections.parser.CLNoColPGen</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>9</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BindingBindValueNode.java</sourceFile><mutatedClass>funcons.truffle.entities.BindingBindValueNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleFunctionFactory.java</sourceFile><mutatedClass>funcons.truffle.functions.TruffleFunctionFactory$Abs</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>90</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCLexicalScope.java</sourceFile><mutatedClass>funcons.truffle.nodes.FNCLexicalScope$VariableNamesObject$VariableNamesMessageResolution$VarNamesGetSizeNode</mutatedClass><mutatedMethod>access</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLexicalScope$VariableNamesObject;)Ljava/lang/Object;</methodDescription><lineNumber>373</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MapMapGetNode.java</sourceFile><mutatedClass>funcons.truffle.collections.MapMapGetNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleAssignFactory.java</sourceFile><mutatedClass>funcons.truffle.entities.TruffleAssignFactory$Assign</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>52</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ListListPrefixNode.java</sourceFile><mutatedClass>funcons.truffle.collections.ListListPrefixNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BindingBoundValueNode.java</sourceFile><mutatedClass>funcons.truffle.entities.BindingBoundValueNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory$Equal</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>126</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$DeclnewtypeappendixContext</mutatedClass><mutatedMethod>decloptionalvartypes</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$DecloptionalvartypesContext;</methodDescription><lineNumber>1487</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionThrowNode.java</sourceFile><mutatedClass>funcons.truffle.controlflow.ExceptionThrowNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BindingClosureNode.java</sourceFile><mutatedClass>funcons.truffle.entities.BindingClosureNode</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>25</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleBoolFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleBoolFactory$Greater</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>96</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ListListAppendNode.java</sourceFile><mutatedClass>funcons.truffle.collections.ListListAppendNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TupleTupleTailNode.java</sourceFile><mutatedClass>funcons.truffle.collections.TupleTupleTailNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory$Lit</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>88</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VectorVectorAssignNode.java</sourceFile><mutatedClass>funcons.truffle.collections.VectorVectorAssignNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionAlg.java</sourceFile><mutatedClass>camllight.algebras.exprs.ExceptionAlg</mutatedClass><mutatedMethod>tryWithExp</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>11</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.exprs.ExceptionAlgTest.testTryWithExp(tests.reference.exprs.ExceptionAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecursiveFactory.java</sourceFile><mutatedClass>funcons.truffle.recursion.TruffleRecursiveFactory$FreshFwd</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>76</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ToDot.java</sourceFile><mutatedClass>noa.proxy.ToDot</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/lang/Object;Ljava/util/IdentityHashMap;Ljava/util/Set;)Ljava/lang/Object;</methodDescription><lineNumber>80</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$TupletypelistContext</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Lcamllightnosideeffects/parser/CLNoSEParser$TypeContext;</methodDescription><lineNumber>2505</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>StringCamlLightCharNode.java</sourceFile><mutatedClass>funcons.truffle.values.StringCamlLightCharNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>19</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FloatLitNode.java</sourceFile><mutatedClass>funcons.truffle.values.FloatLitNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLParser.java</sourceFile><mutatedClass>camllight.parser.CLParser$EmptylistContext</mutatedClass><mutatedMethod>EMPTYLISTTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>950</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory$VectorSelect</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>141</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleIntFactory.java</sourceFile><mutatedClass>funcons.truffle.values.TruffleIntFactory$IntSubstract</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>103</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleVectorFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleVectorFactory$VectorAppend</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>66</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecordFieldNode.java</sourceFile><mutatedClass>funcons.truffle.collections.RecordFieldNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FunctionCloseNode.java</sourceFile><mutatedClass>funcons.truffle.functions.FunctionCloseNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>26</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TuplePattAlg.java</sourceFile><mutatedClass>camllight.algebras.patts.TuplePattAlg</mutatedClass><mutatedMethod>pattTuple</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;</methodDescription><lineNumber>17</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>tests.reference.patts.TuplePattAlgTest.testPattTuple(tests.reference.patts.TuplePattAlgTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleRecordFactory.java</sourceFile><mutatedClass>funcons.truffle.collections.TruffleRecordFactory$RecordMatch</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>110</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TupleTuplePrefixNode.java</sourceFile><mutatedClass>funcons.truffle.collections.TupleTuplePrefixNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RecordRecordMatchNode.java</sourceFile><mutatedClass>funcons.truffle.collections.RecordRecordMatchNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MapMapUpdateNode.java</sourceFile><mutatedClass>funcons.truffle.collections.MapMapUpdateNode</mutatedClass><mutatedMethod>executeVoid</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)V</methodDescription><lineNumber>30</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VectorVectorAppendNode.java</sourceFile><mutatedClass>funcons.truffle.collections.VectorVectorAppendNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BindingScopeNode.java</sourceFile><mutatedClass>funcons.truffle.entities.BindingScopeNode</mutatedClass><mutatedMethod>executeGeneric</mutatedMethod><methodDescription>(Lcom/oracle/truffle/api/frame/VirtualFrame;)Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FNCFunctionMessageResolutionForeign.java</sourceFile><mutatedClass>funcons.truffle.functions.FNCFunctionMessageResolutionForeign$FNCForeignIsExecutableSubNode</mutatedClass><mutatedMethod>createRoot</mutatedMethod><methodDescription>()Lcom/oracle/truffle/api/nodes/RootNode;</methodDescription><lineNumber>195</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CLNoSEParser.java</sourceFile><mutatedClass>camllightnosideeffects.parser.CLNoSEParser$VartypeContext</mutatedClass><mutatedMethod>IDTOKEN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>326</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TruffleExceptionFactory.java</sourceFile><mutatedClass>funcons.truffle.controlflow.TruffleExceptionFactory$Fail</mutatedClass><mutatedMethod>buildAST</mutatedMethod><methodDescription>(Lfuncons/truffle/nodes/FNCLanguage;)Lfuncons/truffle/nodes/FNCStatementNode;</methodDescription><lineNumber>147</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
</mutations>
