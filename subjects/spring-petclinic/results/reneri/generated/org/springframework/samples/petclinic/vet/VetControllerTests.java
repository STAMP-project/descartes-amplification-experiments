package org.springframework.samples.petclinic.vet;


/**
 * Test class for the {@link VetController}
 */
@org.junit.runner.RunWith(org.springframework.test.context.junit4.SpringRunner.class)
@org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest(org.springframework.samples.petclinic.vet.VetController.class)
public class VetControllerTests {
    @org.springframework.beans.factory.annotation.Autowired
    private org.springframework.test.web.servlet.MockMvc mockMvc;

    @org.springframework.boot.test.mock.mockito.MockBean
    private org.springframework.samples.petclinic.vet.VetRepository vets;

    @org.junit.Before
    public void setup() {
        org.springframework.samples.petclinic.vet.Vet james = eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|0", org.springframework.samples.petclinic.vet.Vet.class, new org.springframework.samples.petclinic.vet.Vet());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|1", org.springframework.samples.petclinic.vet.Vet.class, james).setFirstName("James");
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|2", org.springframework.samples.petclinic.vet.Vet.class, james).setLastName("Carter");
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|3", org.springframework.samples.petclinic.vet.Vet.class, james).setId(1);
        org.springframework.samples.petclinic.vet.Vet helen = eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|4", org.springframework.samples.petclinic.vet.Vet.class, new org.springframework.samples.petclinic.vet.Vet());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|5", org.springframework.samples.petclinic.vet.Vet.class, helen).setFirstName("Helen");
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|6", org.springframework.samples.petclinic.vet.Vet.class, helen).setLastName("Leary");
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|7", org.springframework.samples.petclinic.vet.Vet.class, helen).setId(2);
        org.springframework.samples.petclinic.vet.Specialty radiology = eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Specialty>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|8", org.springframework.samples.petclinic.vet.Specialty.class, new org.springframework.samples.petclinic.vet.Specialty());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Specialty>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|9", org.springframework.samples.petclinic.vet.Specialty.class, radiology).setId(1);
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Specialty>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|10", org.springframework.samples.petclinic.vet.Specialty.class, radiology).setName("radiology");
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|11", org.springframework.samples.petclinic.vet.Vet.class, helen).addSpecialty(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Specialty>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|12", org.springframework.samples.petclinic.vet.Specialty.class, radiology));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.mockito.BDDMockito.BDDMyOngoingStubbing<java.util.Collection<org.springframework.samples.petclinic.vet.Vet>>>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|19", org.mockito.BDDMockito.BDDMyOngoingStubbing.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.mockito.BDDMockito.BDDMyOngoingStubbing<java.util.Collection<org.springframework.samples.petclinic.vet.Vet>>>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|15", org.mockito.BDDMockito.BDDMyOngoingStubbing.class, org.mockito.BDDMockito.given(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Collection<org.springframework.samples.petclinic.vet.Vet>>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|14", java.util.Collection.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.VetRepository>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|13", org.springframework.samples.petclinic.vet.VetRepository.class, this.vets).findAll()))).willReturn(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<org.springframework.samples.petclinic.vet.Vet>>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|18", java.util.ArrayList.class, org.assertj.core.util.Lists.newArrayList(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|16", org.springframework.samples.petclinic.vet.Vet.class, james), eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.samples.petclinic.vet.Vet>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|setup()|17", org.springframework.samples.petclinic.vet.Vet.class, helen)))));
    }

    @org.junit.Test
    public void testShowVetListHtml() throws java.lang.Exception {
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultActions>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|11", org.springframework.test.web.servlet.ResultActions.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultActions>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|8", org.springframework.test.web.servlet.ResultActions.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultActions>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|5", org.springframework.test.web.servlet.ResultActions.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultActions>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|2", org.springframework.test.web.servlet.ResultActions.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.MockMvc>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|0", org.springframework.test.web.servlet.MockMvc.class, mockMvc).perform(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|1", org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder.class, org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get("/vets.html")))).andExpect(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultMatcher>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|4", org.springframework.test.web.servlet.ResultMatcher.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.result.StatusResultMatchers>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|3", org.springframework.test.web.servlet.result.StatusResultMatchers.class, org.springframework.test.web.servlet.result.MockMvcResultMatchers.status()).isOk()))).andExpect(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultMatcher>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|7", org.springframework.test.web.servlet.ResultMatcher.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.result.ModelResultMatchers>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|6", org.springframework.test.web.servlet.result.ModelResultMatchers.class, org.springframework.test.web.servlet.result.MockMvcResultMatchers.model()).attributeExists("vets")))).andExpect(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultMatcher>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|10", org.springframework.test.web.servlet.ResultMatcher.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.result.ViewResultMatchers>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowVetListHtml()|9", org.springframework.test.web.servlet.result.ViewResultMatchers.class, org.springframework.test.web.servlet.result.MockMvcResultMatchers.view()).name("vets/vetList"))));
    }

    @org.junit.Test
    public void testShowResourcesVetList() throws java.lang.Exception {
        org.springframework.test.web.servlet.ResultActions actions = eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultActions>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|7", org.springframework.test.web.servlet.ResultActions.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultActions>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|4", org.springframework.test.web.servlet.ResultActions.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.MockMvc>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|0", org.springframework.test.web.servlet.MockMvc.class, mockMvc).perform(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|3", org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|1", org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder.class, org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get("/vets")).accept(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.http.MediaType>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|2", org.springframework.http.MediaType.class, org.springframework.http.MediaType.APPLICATION_JSON))))).andExpect(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultMatcher>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|6", org.springframework.test.web.servlet.ResultMatcher.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.result.StatusResultMatchers>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|5", org.springframework.test.web.servlet.result.StatusResultMatchers.class, org.springframework.test.web.servlet.result.MockMvcResultMatchers.status()).isOk())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultActions>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|14", org.springframework.test.web.servlet.ResultActions.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultActions>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|11", org.springframework.test.web.servlet.ResultActions.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultActions>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|8", org.springframework.test.web.servlet.ResultActions.class, actions).andExpect(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultMatcher>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|10", org.springframework.test.web.servlet.ResultMatcher.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.result.ContentResultMatchers>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|9", org.springframework.test.web.servlet.result.ContentResultMatchers.class, org.springframework.test.web.servlet.result.MockMvcResultMatchers.content()).contentType("application/json;charset=UTF-8")))).andExpect(eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.ResultMatcher>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|13", org.springframework.test.web.servlet.ResultMatcher.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.springframework.test.web.servlet.result.JsonPathResultMatchers>observeState("org.springframework.samples.petclinic.vet.VetControllerTests|testShowResourcesVetList()|12", org.springframework.test.web.servlet.result.JsonPathResultMatchers.class, org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath("$.vetList[0].id")).value(1))));
    }
}

