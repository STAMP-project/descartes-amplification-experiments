/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.cli;


// tests some deprecated classes
@java.lang.SuppressWarnings("deprecation")
public class CommandLineTest {
    @org.junit.Test
    public void testGetOptionProperties() throws java.lang.Exception {
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|0", java.lang.String[].class, new java.lang.String[]{ "-Dparam1=value1", "-Dparam2=value2", "-Dparam3", "-Dparam4=value4", "-D", "--property", "foo=bar" });
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|1", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|6", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|2", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|5", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|4", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|3", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withValueSeparator()).hasOptionalArgs(2)).create('D'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|12", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|7", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|11", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|10", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|9", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|8", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withValueSeparator()).hasArgs(2)).withLongOpt("property")).create())));
        final org.apache.commons.cli.Parser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.GnuParser>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|13", org.apache.commons.cli.GnuParser.class, new org.apache.commons.cli.GnuParser());
        final org.apache.commons.cli.CommandLine cl = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|17", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Parser>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|14", org.apache.commons.cli.Parser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|15", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|16", java.lang.String[].class, args)));
        final java.util.Properties props = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|19", java.util.Properties.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|18", org.apache.commons.cli.CommandLine.class, cl).getOptionProperties("D"));
        org.junit.Assert.assertNotNull("null properties", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|20", java.util.Properties.class, props));
        org.junit.Assert.assertEquals(("number of properties in " + (eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|21", java.util.Properties.class, props))), 4, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|22", java.util.Properties.class, props).size()));
        org.junit.Assert.assertEquals("property 1", "value1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|25", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|24", java.util.Properties.class, props).getProperty("param1")));
        org.junit.Assert.assertEquals("property 2", "value2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|26", java.util.Properties.class, props).getProperty("param2")));
        org.junit.Assert.assertEquals("property 3", "true", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|29", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|28", java.util.Properties.class, props).getProperty("param3")));
        org.junit.Assert.assertEquals("property 4", "value4", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|31", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|30", java.util.Properties.class, props).getProperty("param4")));
        org.junit.Assert.assertEquals("property with long format", "bar", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|34", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|33", java.util.Properties.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionProperties()|32", org.apache.commons.cli.CommandLine.class, cl).getOptionProperties("property")).getProperty("foo")));
    }

    @org.junit.Test
    public void testGetOptionPropertiesWithOption() throws java.lang.Exception {
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|0", java.lang.String[].class, new java.lang.String[]{ "-Dparam1=value1", "-Dparam2=value2", "-Dparam3", "-Dparam4=value4", "-D", "--property", "foo=bar" });
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|1", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        final org.apache.commons.cli.Option option_D = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|4", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|3", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|2", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withValueSeparator()).hasOptionalArgs(2)).create('D'));
        final org.apache.commons.cli.Option option_property = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|8", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|7", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|6", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|5", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withValueSeparator()).hasArgs(2)).withLongOpt("property")).create());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|11", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|9", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|10", org.apache.commons.cli.Option.class, option_D)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|14", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|12", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|13", org.apache.commons.cli.Option.class, option_property)));
        final org.apache.commons.cli.Parser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.GnuParser>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|15", org.apache.commons.cli.GnuParser.class, new org.apache.commons.cli.GnuParser());
        final org.apache.commons.cli.CommandLine cl = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|19", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Parser>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|16", org.apache.commons.cli.Parser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|17", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|18", java.lang.String[].class, args)));
        final java.util.Properties props = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|22", java.util.Properties.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|20", org.apache.commons.cli.CommandLine.class, cl).getOptionProperties(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|21", org.apache.commons.cli.Option.class, option_D)));
        org.junit.Assert.assertNotNull("null properties", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|23", java.util.Properties.class, props));
        org.junit.Assert.assertEquals(("number of properties in " + (eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|24", java.util.Properties.class, props))), 4, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|25", java.util.Properties.class, props).size()));
        org.junit.Assert.assertEquals("property 1", "value1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|27", java.util.Properties.class, props).getProperty("param1")));
        org.junit.Assert.assertEquals("property 2", "value2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|30", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|29", java.util.Properties.class, props).getProperty("param2")));
        org.junit.Assert.assertEquals("property 3", "true", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|32", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|31", java.util.Properties.class, props).getProperty("param3")));
        org.junit.Assert.assertEquals("property 4", "value4", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|34", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|33", java.util.Properties.class, props).getProperty("param4")));
        org.junit.Assert.assertEquals("property with long format", "bar", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|38", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|37", java.util.Properties.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|35", org.apache.commons.cli.CommandLine.class, cl).getOptionProperties(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptionPropertiesWithOption()|36", org.apache.commons.cli.Option.class, option_property))).getProperty("foo")));
    }

    @org.junit.Test
    public void testGetOptions() {
        final org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|0", org.apache.commons.cli.CommandLine.class, new org.apache.commons.cli.CommandLine());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option[]>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|2", org.apache.commons.cli.Option[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|1", org.apache.commons.cli.CommandLine.class, cmd).getOptions()));
        org.junit.Assert.assertEquals(0, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptions()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option[]>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|4", org.apache.commons.cli.Option[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|3", org.apache.commons.cli.CommandLine.class, cmd).getOptions()).length));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|6", org.apache.commons.cli.CommandLine.class, cmd).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|7", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("a", null)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|8", org.apache.commons.cli.CommandLine.class, cmd).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|9", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("b", null)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|10", org.apache.commons.cli.CommandLine.class, cmd).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|11", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("c", null)));
        org.junit.Assert.assertEquals(3, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetOptions()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option[]>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|13", org.apache.commons.cli.Option[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetOptions()|12", org.apache.commons.cli.CommandLine.class, cmd).getOptions()).length));
    }

    @org.junit.Test
    public void testGetParsedOptionValue() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|5", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|1", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|4", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|3", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|2", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.hasArg()).withType(java.lang.Number.class)).create("i"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|9", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|6", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|8", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|7", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.hasArg()).create("f"))));
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.DefaultParser>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|10", org.apache.commons.cli.DefaultParser.class, new org.apache.commons.cli.DefaultParser());
        final org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|14", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|11", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|12", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|13", java.lang.String[].class, new java.lang.String[]{ "-i", "123", "-f", "foo" })));
        org.junit.Assert.assertEquals(123, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Number>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|16", java.lang.Number.class, ((java.lang.Number) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|15", org.apache.commons.cli.CommandLine.class, cmd).getParsedOptionValue("i")))).intValue()));
        org.junit.Assert.assertEquals("foo", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|19", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValue()|18", org.apache.commons.cli.CommandLine.class, cmd).getParsedOptionValue("f")));
    }

    @org.junit.Test
    public void testGetParsedOptionValueWithChar() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|6", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|1", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|5", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|4", org.apache.commons.cli.Option.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|3", org.apache.commons.cli.Option.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|2", org.apache.commons.cli.Option.Builder.class, org.apache.commons.cli.Option.builder("i")).hasArg()).type(java.lang.Number.class)).build())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|11", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|7", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|10", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|9", org.apache.commons.cli.Option.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|8", org.apache.commons.cli.Option.Builder.class, org.apache.commons.cli.Option.builder("f")).hasArg()).build())));
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.DefaultParser>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|12", org.apache.commons.cli.DefaultParser.class, new org.apache.commons.cli.DefaultParser());
        final org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|16", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|13", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|14", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|15", java.lang.String[].class, new java.lang.String[]{ "-i", "123", "-f", "foo" })));
        org.junit.Assert.assertEquals(123, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Number>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|18", java.lang.Number.class, ((java.lang.Number) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|17", org.apache.commons.cli.CommandLine.class, cmd).getParsedOptionValue('i')))).intValue()));
        org.junit.Assert.assertEquals("foo", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|21", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithChar()|20", org.apache.commons.cli.CommandLine.class, cmd).getParsedOptionValue('f')));
    }

    @org.junit.Test
    public void testGetParsedOptionValueWithOption() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        final org.apache.commons.cli.Option opt_i = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|4", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|3", org.apache.commons.cli.Option.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|2", org.apache.commons.cli.Option.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|1", org.apache.commons.cli.Option.Builder.class, org.apache.commons.cli.Option.builder("i")).hasArg()).type(java.lang.Number.class)).build());
        final org.apache.commons.cli.Option opt_f = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|7", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|6", org.apache.commons.cli.Option.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|5", org.apache.commons.cli.Option.Builder.class, org.apache.commons.cli.Option.builder("f")).hasArg()).build());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|10", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|8", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|9", org.apache.commons.cli.Option.class, opt_i)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|13", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|11", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|12", org.apache.commons.cli.Option.class, opt_f)));
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.DefaultParser>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|14", org.apache.commons.cli.DefaultParser.class, new org.apache.commons.cli.DefaultParser());
        final org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|18", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|15", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|16", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|17", java.lang.String[].class, new java.lang.String[]{ "-i", "123", "-f", "foo" })));
        org.junit.Assert.assertEquals(123, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Number>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|21", java.lang.Number.class, ((java.lang.Number) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|19", org.apache.commons.cli.CommandLine.class, cmd).getParsedOptionValue(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|20", org.apache.commons.cli.Option.class, opt_i))))).intValue()));
        org.junit.Assert.assertEquals("foo", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|25", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|23", org.apache.commons.cli.CommandLine.class, cmd).getParsedOptionValue(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testGetParsedOptionValueWithOption()|24", org.apache.commons.cli.Option.class, opt_f))));
    }

    @org.junit.Test
    public void testNullhOption() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        final org.apache.commons.cli.Option opt_i = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|4", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|3", org.apache.commons.cli.Option.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|2", org.apache.commons.cli.Option.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|1", org.apache.commons.cli.Option.Builder.class, org.apache.commons.cli.Option.builder("i")).hasArg()).type(java.lang.Number.class)).build());
        final org.apache.commons.cli.Option opt_f = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|7", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|6", org.apache.commons.cli.Option.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|5", org.apache.commons.cli.Option.Builder.class, org.apache.commons.cli.Option.builder("f")).hasArg()).build());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|10", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|8", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|9", org.apache.commons.cli.Option.class, opt_i)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|13", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|11", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|12", org.apache.commons.cli.Option.class, opt_f)));
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.DefaultParser>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|14", org.apache.commons.cli.DefaultParser.class, new org.apache.commons.cli.DefaultParser());
        final org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|18", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|15", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|16", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|17", java.lang.String[].class, new java.lang.String[]{ "-i", "123", "-f", "foo" })));
        org.junit.Assert.assertNull(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testNullhOption()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|19", org.apache.commons.cli.CommandLine.class, cmd).getOptionValue(((org.apache.commons.cli.Option) (null)))));
        org.junit.Assert.assertNull(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|22", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testNullhOption()|21", org.apache.commons.cli.CommandLine.class, cmd).getParsedOptionValue(((org.apache.commons.cli.Option) (null)))));
    }

    @org.junit.Test
    public void testBuilder() throws java.lang.Exception {
        final org.apache.commons.cli.CommandLine.Builder builder = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine.Builder>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|0", org.apache.commons.cli.CommandLine.Builder.class, new org.apache.commons.cli.CommandLine.Builder());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine.Builder>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|3", org.apache.commons.cli.CommandLine.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine.Builder>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|2", org.apache.commons.cli.CommandLine.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine.Builder>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|1", org.apache.commons.cli.CommandLine.Builder.class, builder).addArg("foo")).addArg("bar"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine.Builder>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|7", org.apache.commons.cli.CommandLine.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine.Builder>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|4", org.apache.commons.cli.CommandLine.Builder.class, builder).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|6", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option.Builder>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|5", org.apache.commons.cli.Option.Builder.class, org.apache.commons.cli.Option.builder("T")).build())));
        final org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|9", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine.Builder>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|8", org.apache.commons.cli.CommandLine.Builder.class, builder).build());
        org.junit.Assert.assertEquals("foo", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testBuilder()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|11", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|10", org.apache.commons.cli.CommandLine.class, cmd).getArgs())[0]));
        org.junit.Assert.assertEquals("bar", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testBuilder()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|14", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|13", org.apache.commons.cli.CommandLine.class, cmd).getArgList()).get(1)));
        org.junit.Assert.assertEquals("T", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.CommandLineTest|testBuilder()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|18", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option[]>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|17", org.apache.commons.cli.Option[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.CommandLineTest|testBuilder()|16", org.apache.commons.cli.CommandLine.class, cmd).getOptions())[0]).getOpt()));
    }
}

