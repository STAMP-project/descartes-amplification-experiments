/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.cli.bug;


// tests some deprecated classes
@java.lang.SuppressWarnings("deprecation")
public class BugsTest {
    @org.junit.Test
    public void test11457() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|4", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|1", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|3", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|2", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("verbose")).create())));
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|5", java.lang.String[].class, new java.lang.String[]{ "--verbose" });
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|6", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        final org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|10", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|7", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|8", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|9", java.lang.String[].class, args)));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11457()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11457()|11", org.apache.commons.cli.CommandLine.class, cmd).hasOption("verbose")));
    }

    @org.junit.Test
    public void test11458() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|5", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|1", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|4", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|3", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|2", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withValueSeparator('=')).hasArgs()).create('D'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|10", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|6", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|9", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|8", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|7", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withValueSeparator(':')).hasArgs()).create('p'))));
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|11", java.lang.String[].class, new java.lang.String[]{ "-DJAVA_HOME=/opt/java", "-pfile1:file2:file3" });
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|12", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        final org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|16", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|13", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|14", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|15", java.lang.String[].class, args)));
        java.lang.String[] values = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|18", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|17", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues('D'));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|19", java.lang.String[].class, values)[0]), "JAVA_HOME");
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|21", java.lang.String[].class, values)[1]), "/opt/java");
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|24", java.lang.String[].class, (values = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|23", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues('p')));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|25", java.lang.String[].class, values)[0]), "file1");
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|27", java.lang.String[].class, values)[1]), "file2");
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|30", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|29", java.lang.String[].class, values)[2]), "file3");
        final java.util.Iterator<org.apache.commons.cli.Option> iter = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.apache.commons.cli.Option>>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|32", java.util.Iterator.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|31", org.apache.commons.cli.CommandLine.class, cmd).iterator());
        while (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|34", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.apache.commons.cli.Option>>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|33", java.util.Iterator.class, iter).hasNext())) {
            final org.apache.commons.cli.Option opt = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|36", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.apache.commons.cli.Option>>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|35", java.util.Iterator.class, iter).next());
            switch (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|38", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|37", org.apache.commons.cli.Option.class, opt).getId())) {
                case 'D' :
                    org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|40", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|39", org.apache.commons.cli.Option.class, opt).getValue(0)), "JAVA_HOME");
                    org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|42", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|41", org.apache.commons.cli.Option.class, opt).getValue(1)), "/opt/java");
                    break;
                case 'p' :
                    org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|44", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|43", org.apache.commons.cli.Option.class, opt).getValue(0)), "file1");
                    org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|46", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|45", org.apache.commons.cli.Option.class, opt).getValue(1)), "file2");
                    org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11458()|48", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11458()|47", org.apache.commons.cli.Option.class, opt).getValue(2)), "file3");
                    break;
                default :
                    org.junit.Assert.fail("-D option not found");
            }
        } 
    }

    @org.junit.Test
    public void test11680() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|2", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|1", org.apache.commons.cli.Options.class, options).addOption("f", true, "foobar"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|4", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|3", org.apache.commons.cli.Options.class, options).addOption("m", true, "missing"));
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|5", java.lang.String[].class, new java.lang.String[]{ "-f", "foo" });
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|6", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        final org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|10", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|7", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|8", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|9", java.lang.String[].class, args)));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11680()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|11", org.apache.commons.cli.CommandLine.class, cmd).getOptionValue("f", "default f"));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11680()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11680()|13", org.apache.commons.cli.CommandLine.class, cmd).getOptionValue("m", "default m"));
    }

    @org.junit.Test
    public void test11456() throws java.lang.Exception {
        // Posix
        org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|4", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|1", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|3", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|2", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.hasOptionalArg()).create('a'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|8", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|5", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|7", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|6", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.hasArg()).create('b'))));
        java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|9", java.lang.String[].class, new java.lang.String[]{ "-a", "-bvalue" });
        org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|10", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|14", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|11", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|12", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|13", java.lang.String[].class, args)));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11456()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|15", org.apache.commons.cli.CommandLine.class, cmd).getOptionValue('b')), "value");
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|17", org.apache.commons.cli.Options.class, // GNU
        (options = new org.apache.commons.cli.Options()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|21", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|18", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|20", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|19", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.hasOptionalArg()).create('a'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|25", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|22", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|24", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|23", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.hasArg()).create('b'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|26", java.lang.String[].class, (args = new java.lang.String[]{ "-a", "-b", "value" }));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|27", org.apache.commons.cli.CommandLineParser.class, (parser = new org.apache.commons.cli.GnuParser()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|31", org.apache.commons.cli.CommandLine.class, (cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|28", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|29", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|30", java.lang.String[].class, args))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test11456()|33", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test11456()|32", org.apache.commons.cli.CommandLine.class, cmd).getOptionValue('b')), "value");
    }

    @org.junit.Test
    public void test12210() throws java.lang.Exception {
        // create the main options object which will handle the first parameter
        final org.apache.commons.cli.Options mainOptions = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        // There can be 2 main exclusive options:  -exec|-rep
        // Therefore, place them in an option group
        java.lang.String[] argv = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|1", java.lang.String[].class, new java.lang.String[]{ "-exec", "-exec_opt1", "-exec_opt2" });
        final org.apache.commons.cli.OptionGroup grp = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|2", org.apache.commons.cli.OptionGroup.class, new org.apache.commons.cli.OptionGroup());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|5", org.apache.commons.cli.OptionGroup.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|3", org.apache.commons.cli.OptionGroup.class, grp).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|4", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("exec", false, "description for this option"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|8", org.apache.commons.cli.OptionGroup.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|6", org.apache.commons.cli.OptionGroup.class, grp).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|7", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("rep", false, "description for this option"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|11", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|9", org.apache.commons.cli.Options.class, mainOptions).addOptionGroup(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|10", org.apache.commons.cli.OptionGroup.class, grp)));
        // for the exec option, there are 2 options...
        final org.apache.commons.cli.Options execOptions = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|12", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|14", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|13", org.apache.commons.cli.Options.class, execOptions).addOption("exec_opt1", false, " desc"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|16", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|15", org.apache.commons.cli.Options.class, execOptions).addOption("exec_opt2", false, " desc"));
        // similarly, for rep there are 2 options...
        final org.apache.commons.cli.Options repOptions = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|17", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|19", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|18", org.apache.commons.cli.Options.class, repOptions).addOption("repopto", false, "desc"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|21", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|20", org.apache.commons.cli.Options.class, repOptions).addOption("repoptt", false, "desc"));
        // create the parser
        final org.apache.commons.cli.GnuParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.GnuParser>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|22", org.apache.commons.cli.GnuParser.class, new org.apache.commons.cli.GnuParser());
        // finally, parse the arguments:
        // first parse the main options to see what the user has specified
        // We set stopAtNonOption to true so it does not touch the remaining
        // options
        org.apache.commons.cli.CommandLine cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|26", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.GnuParser>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|23", org.apache.commons.cli.GnuParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|24", org.apache.commons.cli.Options.class, mainOptions), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|25", java.lang.String[].class, argv), true));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|28", java.lang.String[].class, // get the remaining options...
        (argv = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|27", org.apache.commons.cli.CommandLine.class, cmd).getArgs()));
        if (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test12210()|30", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|29", org.apache.commons.cli.CommandLine.class, cmd).hasOption("exec"))) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|34", org.apache.commons.cli.CommandLine.class, (cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.GnuParser>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|31", org.apache.commons.cli.GnuParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|32", org.apache.commons.cli.Options.class, execOptions), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|33", java.lang.String[].class, argv), false)));
            // process the exec_op1 and exec_opt2...
            org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test12210()|36", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|35", org.apache.commons.cli.CommandLine.class, cmd).hasOption("exec_opt1")));
            org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test12210()|38", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|37", org.apache.commons.cli.CommandLine.class, cmd).hasOption("exec_opt2")));
        }else
            if (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test12210()|40", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|39", org.apache.commons.cli.CommandLine.class, cmd).hasOption("rep"))) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|44", org.apache.commons.cli.CommandLine.class, (cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.GnuParser>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|41", org.apache.commons.cli.GnuParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|42", org.apache.commons.cli.Options.class, repOptions), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test12210()|43", java.lang.String[].class, argv), false)));
                // process the rep_op1 and rep_opt2...
            }else {
                org.junit.Assert.fail("exec option not found");
            }

    }

    @org.junit.Test
    public void test13425() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        final org.apache.commons.cli.Option oldpass = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|4", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|3", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|2", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|1", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("old-password")).withDescription("Use this option to specify the old password")).hasArg()).create('o'));
        final org.apache.commons.cli.Option newpass = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|8", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|7", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|6", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|5", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("new-password")).withDescription("Use this option to specify the new password")).hasArg()).create('n'));
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|9", java.lang.String[].class, new java.lang.String[]{ "-o", "-n", "newpassword" });
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|12", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|10", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|11", org.apache.commons.cli.Option.class, oldpass)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|15", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|13", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|14", org.apache.commons.cli.Option.class, newpass)));
        final org.apache.commons.cli.Parser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|16", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|20", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Parser>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|17", org.apache.commons.cli.Parser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|18", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13425()|19", java.lang.String[].class, args)));
            org.junit.Assert.fail("MissingArgumentException not caught.");
        } catch (final org.apache.commons.cli.MissingArgumentException expected) {
        }
    }

    @org.junit.Test
    public void test13666() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        final org.apache.commons.cli.Option dir = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|3", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|2", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|1", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withDescription("dir")).hasArg()).create('d'));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|6", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|4", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|5", org.apache.commons.cli.Option.class, dir)));
        final java.io.PrintStream oldSystemOut = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|7", java.io.PrintStream.class, java.lang.System.out);
        try {
            final java.io.ByteArrayOutputStream bytes = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayOutputStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|8", java.io.ByteArrayOutputStream.class, new java.io.ByteArrayOutputStream());
            final java.io.PrintStream print = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|10", java.io.PrintStream.class, new java.io.PrintStream(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayOutputStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|9", java.io.ByteArrayOutputStream.class, bytes)));
            // capture this platform's eol symbol
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|11", java.io.PrintStream.class, print).println();
            final java.lang.String eol = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test13666()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayOutputStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|12", java.io.ByteArrayOutputStream.class, bytes).toString());
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayOutputStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|14", java.io.ByteArrayOutputStream.class, bytes).reset();
            java.lang.System.setOut(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|16", java.io.PrintStream.class, new java.io.PrintStream(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayOutputStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|15", java.io.ByteArrayOutputStream.class, bytes))));
            final org.apache.commons.cli.HelpFormatter formatter = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.HelpFormatter>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|17", org.apache.commons.cli.HelpFormatter.class, new org.apache.commons.cli.HelpFormatter());
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.HelpFormatter>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|18", org.apache.commons.cli.HelpFormatter.class, formatter).printHelp("dir", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|19", org.apache.commons.cli.Options.class, options));
            org.junit.Assert.assertEquals(((("usage: dir" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test13666()|20", eol))) + " -d <arg>   dir") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test13666()|21", eol))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test13666()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayOutputStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|22", java.io.ByteArrayOutputStream.class, bytes).toString()));
        } finally {
            java.lang.System.setOut(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("org.apache.commons.cli.bug.BugsTest|test13666()|24", java.io.PrintStream.class, oldSystemOut));
        }
    }

    @org.junit.Test
    public void test13935() throws java.lang.Exception {
        final org.apache.commons.cli.OptionGroup directions = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|0", org.apache.commons.cli.OptionGroup.class, new org.apache.commons.cli.OptionGroup());
        final org.apache.commons.cli.Option left = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|1", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("l", "left", false, "go left"));
        final org.apache.commons.cli.Option right = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|2", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("r", "right", false, "go right"));
        final org.apache.commons.cli.Option straight = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|3", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("s", "straight", false, "go straight"));
        final org.apache.commons.cli.Option forward = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|4", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("f", "forward", false, "go forward"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|5", org.apache.commons.cli.Option.class, forward).setRequired(true);
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|8", org.apache.commons.cli.OptionGroup.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|6", org.apache.commons.cli.OptionGroup.class, directions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|7", org.apache.commons.cli.Option.class, left)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|11", org.apache.commons.cli.OptionGroup.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|9", org.apache.commons.cli.OptionGroup.class, directions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|10", org.apache.commons.cli.Option.class, right)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|12", org.apache.commons.cli.OptionGroup.class, directions).setRequired(true);
        final org.apache.commons.cli.Options opts = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|13", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|16", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|14", org.apache.commons.cli.Options.class, opts).addOptionGroup(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|15", org.apache.commons.cli.OptionGroup.class, directions)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|19", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|17", org.apache.commons.cli.Options.class, opts).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|18", org.apache.commons.cli.Option.class, straight)));
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|20", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|21", java.lang.String[].class, new java.lang.String[]{  });
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|25", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|22", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|23", org.apache.commons.cli.Options.class, opts), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|24", java.lang.String[].class, args)));
            org.junit.Assert.fail("Expected ParseException");
        } catch (final org.apache.commons.cli.ParseException expected) {
        }
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|26", java.lang.String[].class, (args = new java.lang.String[]{ "-s" }));
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|30", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|27", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|28", org.apache.commons.cli.Options.class, opts), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|29", java.lang.String[].class, args)));
            org.junit.Assert.fail("Expected ParseException");
        } catch (final org.apache.commons.cli.ParseException expected) {
        }
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|31", java.lang.String[].class, (args = new java.lang.String[]{ "-s", "-l" }));
        org.apache.commons.cli.CommandLine line = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|35", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|32", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|33", org.apache.commons.cli.Options.class, opts), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|34", java.lang.String[].class, args)));
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|36", org.apache.commons.cli.CommandLine.class, line));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|39", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|37", org.apache.commons.cli.Options.class, opts).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|38", org.apache.commons.cli.Option.class, forward)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|40", java.lang.String[].class, (args = new java.lang.String[]{ "-s", "-l", "-f" }));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|44", org.apache.commons.cli.CommandLine.class, (line = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|41", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|42", org.apache.commons.cli.Options.class, opts), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|43", java.lang.String[].class, args))));
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test13935()|45", org.apache.commons.cli.CommandLine.class, line));
    }

    @org.junit.Test
    public void test14786() throws java.lang.Exception {
        final org.apache.commons.cli.Option o = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|2", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|1", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|0", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.isRequired()).withDescription("test")).create("test"));
        final org.apache.commons.cli.Options opts = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|3", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|6", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|4", org.apache.commons.cli.Options.class, opts).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|5", org.apache.commons.cli.Option.class, o)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|9", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|7", org.apache.commons.cli.Options.class, opts).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|8", org.apache.commons.cli.Option.class, o)));
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.GnuParser>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|10", org.apache.commons.cli.GnuParser.class, new org.apache.commons.cli.GnuParser());
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|11", java.lang.String[].class, new java.lang.String[]{ "-test" });
        final org.apache.commons.cli.CommandLine line = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|15", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|12", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|13", org.apache.commons.cli.Options.class, opts), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|14", java.lang.String[].class, args)));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test14786()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test14786()|16", org.apache.commons.cli.CommandLine.class, line).hasOption("test")));
    }

    @org.junit.Test
    public void test15046() throws java.lang.Exception {
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|0", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        final java.lang.String[] CLI_ARGS = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|1", java.lang.String[].class, new java.lang.String[]{ "-z", "c" });
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|2", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|5", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|3", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|4", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("z", "timezone", true, "affected option"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|9", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|6", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|7", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|8", java.lang.String[].class, CLI_ARGS)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|11", org.apache.commons.cli.Options.class, // now add conflicting option
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|10", org.apache.commons.cli.Options.class, options).addOption("c", "conflict", true, "conflict option"));
        final org.apache.commons.cli.CommandLine line = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|15", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|12", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|13", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|14", java.lang.String[].class, CLI_ARGS)));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test15046()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|16", org.apache.commons.cli.CommandLine.class, line).getOptionValue('z')), "c");
        org.junit.Assert.assertTrue((!(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test15046()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test15046()|18", org.apache.commons.cli.CommandLine.class, line).hasOption("c")))));
    }

    @org.junit.Test
    public void test15648() throws java.lang.Exception {
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|0", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|1", java.lang.String[].class, new java.lang.String[]{ "-m", "\"Two Words\"" });
        final org.apache.commons.cli.Option m = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|3", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|2", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.hasArgs()).create("m"));
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|4", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|7", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|5", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|6", org.apache.commons.cli.Option.class, m)));
        final org.apache.commons.cli.CommandLine line = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|11", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|8", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|9", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|10", java.lang.String[].class, args)));
        org.junit.Assert.assertEquals("Two Words", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test15648()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test15648()|12", org.apache.commons.cli.CommandLine.class, line).getOptionValue("m")));
    }

    @org.junit.Test
    public void test31148() throws org.apache.commons.cli.ParseException {
        final org.apache.commons.cli.Option multiArgOption = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|0", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option("o", "option with multiple args"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|1", org.apache.commons.cli.Option.class, multiArgOption).setArgs(1);
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|2", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|5", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|3", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|4", org.apache.commons.cli.Option.class, multiArgOption)));
        final org.apache.commons.cli.Parser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|6", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|7", java.lang.String[].class, new java.lang.String[]{  });
        final java.util.Properties props = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|8", java.util.Properties.class, new java.util.Properties());
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|10", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|9", java.util.Properties.class, props).setProperty("o", "ovalue"));
        final org.apache.commons.cli.CommandLine cl = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|15", org.apache.commons.cli.CommandLine.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Parser>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|11", org.apache.commons.cli.Parser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|12", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|13", java.lang.String[].class, args), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Properties>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|14", java.util.Properties.class, props)));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test31148()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|16", org.apache.commons.cli.CommandLine.class, cl).hasOption('o')));
        org.junit.Assert.assertEquals("ovalue", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugsTest|test31148()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.bug.BugsTest|test31148()|18", org.apache.commons.cli.CommandLine.class, cl).getOptionValue('o')));
    }
}

