/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.cli;


// tests some deprecated classes
/**
 * jkeyes - commented out this test as the new architecture
 * breaks this type of functionality.  I have left the test 
 * here in case I get a brainwave on how to resolve this.
 */
/* public void testGetValue()
{
// the 'm' option
assertTrue( _option.getValues().length == 2 );
assertEquals( _option.getValue(), "key" );
assertEquals( _option.getValue( 0 ), "key" );
assertEquals( _option.getValue( 1 ), "value" );

try {
assertEquals( _option.getValue( 2 ), "key" );
fail( "IndexOutOfBounds not caught" );
}
catch( IndexOutOfBoundsException exp ) {

}

try {
assertEquals( _option.getValue( -1 ), "key" );
fail( "IndexOutOfBounds not caught" );
}
catch( IndexOutOfBoundsException exp ) {

}
}
 */
@java.lang.SuppressWarnings("deprecation")
public class ValuesTest {
    private org.apache.commons.cli.CommandLine cmd;

    @org.junit.Before
    public void setUp() throws java.lang.Exception {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|2", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|1", org.apache.commons.cli.Options.class, options).addOption("a", false, "toggle -a"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|4", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|3", org.apache.commons.cli.Options.class, options).addOption("b", true, "set -b"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|6", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|5", org.apache.commons.cli.Options.class, options).addOption("c", "c", false, "toggle -c"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|8", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|7", org.apache.commons.cli.Options.class, options).addOption("d", "d", true, "set -d"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|14", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|9", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.ValuesTest|setUp()|13", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|12", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|11", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|10", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("e")).hasArgs()).withDescription("set -e ")).create('e'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|16", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|15", org.apache.commons.cli.Options.class, options).addOption("f", "f", false, "jk"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|22", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|17", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.ValuesTest|setUp()|21", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|20", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|19", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|18", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("g")).hasArgs(2)).withDescription("set -g")).create('g'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|28", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|23", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.ValuesTest|setUp()|27", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|26", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|25", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|24", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("h")).hasArg()).withDescription("set -h")).create('h'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|33", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|29", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.ValuesTest|setUp()|32", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|31", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|30", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("i")).withDescription("set -i")).create('i'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|40", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|34", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.ValuesTest|setUp()|39", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|38", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|37", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|36", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|35", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("j")).hasArgs()).withDescription("set -j")).withValueSeparator('=')).create('j'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|47", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|41", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.ValuesTest|setUp()|46", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|45", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|44", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|43", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|42", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("k")).hasArgs()).withDescription("set -k")).withValueSeparator('=')).create('k'))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|54", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|48", org.apache.commons.cli.Options.class, options).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.ValuesTest|setUp()|53", org.apache.commons.cli.Option.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|52", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|51", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|50", org.apache.commons.cli.OptionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionBuilder>observeState("org.apache.commons.cli.ValuesTest|setUp()|49", org.apache.commons.cli.OptionBuilder.class, org.apache.commons.cli.OptionBuilder.withLongOpt("m")).hasArgs()).withDescription("set -m")).withValueSeparator()).create('m'))));
        final java.lang.String[] args = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|setUp()|55", java.lang.String[].class, new java.lang.String[]{ "-a", "-b", "foo", "--c", "--d", "bar", "-e", "one", "two", "-f", "arg1", "arg2", "-g", "val1", "val2", "arg3", "-h", "val1", "-i", "-h", "val2", "-jkey=value", "-j", "key=value", "-kkey1=value1", "-kkey2=value2", "-mkey=value" });
        final org.apache.commons.cli.CommandLineParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.PosixParser>observeState("org.apache.commons.cli.ValuesTest|setUp()|56", org.apache.commons.cli.PosixParser.class, new org.apache.commons.cli.PosixParser());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|setUp()|60", org.apache.commons.cli.CommandLine.class, (cmd = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLineParser>observeState("org.apache.commons.cli.ValuesTest|setUp()|57", org.apache.commons.cli.CommandLineParser.class, parser).parse(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.ValuesTest|setUp()|58", org.apache.commons.cli.Options.class, options), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|setUp()|59", java.lang.String[].class, args))));
    }

    @org.junit.Test
    public void testShortArgs() {
        org.junit.Assert.assertTrue("Option a is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgs()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgs()|0", org.apache.commons.cli.CommandLine.class, cmd).hasOption("a")));
        org.junit.Assert.assertTrue("Option c is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgs()|3", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgs()|2", org.apache.commons.cli.CommandLine.class, cmd).hasOption("c")));
        org.junit.Assert.assertNull(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testShortArgs()|5", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgs()|4", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("a")));
        org.junit.Assert.assertNull(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testShortArgs()|7", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgs()|6", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("c")));
    }

    @org.junit.Test
    public void testShortArgsWithValue() {
        org.junit.Assert.assertTrue("Option b is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|0", org.apache.commons.cli.CommandLine.class, cmd).hasOption("b")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|4", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|3", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|2", org.apache.commons.cli.CommandLine.class, cmd).getOptionValue("b")).equals("foo")));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|6", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|5", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("b")).length));
        org.junit.Assert.assertTrue("Option d is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|8", org.apache.commons.cli.CommandLine.class, cmd).hasOption("d")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|12", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|10", org.apache.commons.cli.CommandLine.class, cmd).getOptionValue("d")).equals("bar")));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|14", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testShortArgsWithValue()|13", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("d")).length));
    }

    @org.junit.Test
    public void testMultipleArgValues() {
        org.junit.Assert.assertTrue("Option e is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testMultipleArgValues()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testMultipleArgValues()|0", org.apache.commons.cli.CommandLine.class, cmd).hasOption("e")));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testMultipleArgValues()|2", java.lang.String[].class, new java.lang.String[]{ "one", "two" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testMultipleArgValues()|4", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testMultipleArgValues()|3", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("e")));
    }

    @org.junit.Test
    public void testTwoArgValues() {
        org.junit.Assert.assertTrue("Option g is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testTwoArgValues()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testTwoArgValues()|0", org.apache.commons.cli.CommandLine.class, cmd).hasOption("g")));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testTwoArgValues()|2", java.lang.String[].class, new java.lang.String[]{ "val1", "val2" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testTwoArgValues()|4", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testTwoArgValues()|3", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("g")));
    }

    @org.junit.Test
    public void testComplexValues() {
        org.junit.Assert.assertTrue("Option i is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testComplexValues()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testComplexValues()|0", org.apache.commons.cli.CommandLine.class, cmd).hasOption("i")));
        org.junit.Assert.assertTrue("Option h is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testComplexValues()|3", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testComplexValues()|2", org.apache.commons.cli.CommandLine.class, cmd).hasOption("h")));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testComplexValues()|4", java.lang.String[].class, new java.lang.String[]{ "val1", "val2" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testComplexValues()|6", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testComplexValues()|5", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("h")));
    }

    @org.junit.Test
    public void testExtraArgs() {
        org.junit.Assert.assertArrayEquals("Extra args", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testExtraArgs()|0", java.lang.String[].class, new java.lang.String[]{ "arg1", "arg2", "arg3" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testExtraArgs()|2", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testExtraArgs()|1", org.apache.commons.cli.CommandLine.class, cmd).getArgs()));
    }

    @org.junit.Test
    public void testCharSeparator() {
        // tests the char methods of CommandLine that delegate to the String methods
        org.junit.Assert.assertTrue("Option j is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testCharSeparator()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|0", org.apache.commons.cli.CommandLine.class, cmd).hasOption("j")));
        org.junit.Assert.assertTrue("Option j is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testCharSeparator()|3", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|2", org.apache.commons.cli.CommandLine.class, cmd).hasOption('j')));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|4", java.lang.String[].class, new java.lang.String[]{ "key", "value", "key", "value" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|6", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|5", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("j")));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|7", java.lang.String[].class, new java.lang.String[]{ "key", "value", "key", "value" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|9", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|8", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues('j')));
        org.junit.Assert.assertTrue("Option k is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testCharSeparator()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|10", org.apache.commons.cli.CommandLine.class, cmd).hasOption("k")));
        org.junit.Assert.assertTrue("Option k is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testCharSeparator()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|12", org.apache.commons.cli.CommandLine.class, cmd).hasOption('k')));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|14", java.lang.String[].class, new java.lang.String[]{ "key1", "value1", "key2", "value2" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|16", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|15", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("k")));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|17", java.lang.String[].class, new java.lang.String[]{ "key1", "value1", "key2", "value2" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|19", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|18", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues('k')));
        org.junit.Assert.assertTrue("Option m is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testCharSeparator()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|20", org.apache.commons.cli.CommandLine.class, cmd).hasOption("m")));
        org.junit.Assert.assertTrue("Option m is not set", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.ValuesTest|testCharSeparator()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|22", org.apache.commons.cli.CommandLine.class, cmd).hasOption('m')));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|24", java.lang.String[].class, new java.lang.String[]{ "key", "value" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|26", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|25", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues("m")));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|27", java.lang.String[].class, new java.lang.String[]{ "key", "value" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|29", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.CommandLine>observeState("org.apache.commons.cli.ValuesTest|testCharSeparator()|28", org.apache.commons.cli.CommandLine.class, cmd).getOptionValues('m')));
    }
}

