/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.cli.bug;


public class BugCLI162Test {
    /**
     * Constant for the line separator.
     */
    private static final java.lang.String CR = java.lang.System.getProperty("line.separator");

    private org.apache.commons.cli.HelpFormatter formatter;

    private java.io.StringWriter sw;

    @org.junit.Before
    public void setUp() throws java.lang.Exception {
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.HelpFormatter>observeState("org.apache.commons.cli.bug.BugCLI162Test|setUp()|0", org.apache.commons.cli.HelpFormatter.class, (formatter = new org.apache.commons.cli.HelpFormatter()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|setUp()|1", java.io.StringWriter.class, (sw = new java.io.StringWriter()));
    }

    @org.junit.Test
    public void testInfiniteLoop() {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|2", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|1", org.apache.commons.cli.Options.class, options).addOption("h", "help", false, "This is a looooong description"));
        // used to hang & crash
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.HelpFormatter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|3", org.apache.commons.cli.HelpFormatter.class, formatter).printHelp(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|5", java.io.PrintWriter.class, new java.io.PrintWriter(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|4", java.io.StringWriter.class, sw))), 20, "app", null, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|6", org.apache.commons.cli.Options.class, options), org.apache.commons.cli.HelpFormatter.DEFAULT_LEFT_PAD, org.apache.commons.cli.HelpFormatter.DEFAULT_DESC_PAD, null);
        final java.lang.String expected = (((((((((((("usage: app" + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -h,--help   This is") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "             a") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "             looooon") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "             g") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "             descrip") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "             tion") + (org.apache.commons.cli.bug.BugCLI162Test.CR);
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|7", expected), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testInfiniteLoop()|8", java.io.StringWriter.class, sw).toString()));
    }

    @org.junit.Test
    public void testPrintHelpLongLines() {
        // Constants used for options
        final java.lang.String OPT = "-";
        final java.lang.String OPT_COLUMN_NAMES = "l";
        final java.lang.String OPT_CONNECTION = "c";
        final java.lang.String OPT_DESCRIPTION = "e";
        final java.lang.String OPT_DRIVER = "d";
        final java.lang.String OPT_DRIVER_INFO = "n";
        final java.lang.String OPT_FILE_BINDING = "b";
        final java.lang.String OPT_FILE_JDBC = "j";
        final java.lang.String OPT_FILE_SFMD = "f";
        final java.lang.String OPT_HELP = "h";
        final java.lang.String OPT_HELP_ = "help";
        final java.lang.String OPT_INTERACTIVE = "i";
        final java.lang.String OPT_JDBC_TO_SFMD = "2";
        final java.lang.String OPT_JDBC_TO_SFMD_L = "jdbc2sfmd";
        final java.lang.String OPT_METADATA = "m";
        final java.lang.String OPT_PARAM_MODES_INT = "o";
        final java.lang.String OPT_PARAM_MODES_NAME = "O";
        final java.lang.String OPT_PARAM_NAMES = "a";
        final java.lang.String OPT_PARAM_TYPES_INT = "y";
        final java.lang.String OPT_PARAM_TYPES_NAME = "Y";
        final java.lang.String OPT_PASSWORD = "p";
        final java.lang.String OPT_PASSWORD_L = "password";
        final java.lang.String OPT_SQL = "s";
        final java.lang.String OPT_SQL_L = "sql";
        final java.lang.String OPT_SQL_SPLIT_DEFAULT = "###";
        final java.lang.String OPT_SQL_SPLIT_L = "splitSql";
        final java.lang.String OPT_STACK_TRACE = "t";
        final java.lang.String OPT_TIMING = "g";
        final java.lang.String OPT_TRIM_L = "trim";
        final java.lang.String OPT_USER = "u";
        final java.lang.String OPT_WRITE_TO_FILE = "w";
        final java.lang.String _PMODE_IN = "IN";
        final java.lang.String _PMODE_INOUT = "INOUT";
        final java.lang.String _PMODE_OUT = "OUT";
        final java.lang.String _PMODE_UNK = "Unknown";
        final java.lang.String PMODES = ((((((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|0", _PMODE_IN)) + ", ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|1", _PMODE_INOUT))) + ", ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|2", _PMODE_OUT))) + ", ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|3", _PMODE_UNK));
        // Options build
        org.apache.commons.cli.Options commandLineOptions;
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|4", org.apache.commons.cli.Options.class, (commandLineOptions = new org.apache.commons.cli.Options()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|8", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|5", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|6", OPT_HELP), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|7", OPT_HELP_), false, "Prints help and quits"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|11", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|9", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|10", OPT_DRIVER), "driver", true, "JDBC driver class name"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|16", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|12", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|13", OPT_DRIVER_INFO), "info", false, ((("Prints driver information and properties. If " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|14", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|15", OPT_CONNECTION))) + " is not specified, all drivers on the classpath are displayed.")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|19", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|17", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|18", OPT_CONNECTION), "url", true, "Connection URL"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|22", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|20", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|21", OPT_USER), "user", true, "A database user name"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|28", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|23", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|24", OPT_PASSWORD), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|25", OPT_PASSWORD_L), true, ((("The database password for the user specified with the " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|26", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|27", OPT_USER))) + " option. You can obfuscate the password with org.mortbay.jetty.security.Password, see http://docs.codehaus.org/display/JETTY/Securing+Passwords")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|32", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|29", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|30", OPT_SQL), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|31", OPT_SQL_L), true, "Runs SQL or {call stored_procedure(?, ?)} or {?=call function(?, ?)}"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|35", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|33", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|34", OPT_FILE_SFMD), "sfmd", true, "Writes a SFMD file for the given SQL"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|38", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|36", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|37", OPT_FILE_BINDING), "jdbc", true, "Writes a JDBC binding node file for the given SQL"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|41", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|39", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|40", OPT_FILE_JDBC), "node", true, "Writes a JDBC node file for the given SQL (internal debugging)"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|44", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|42", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|43", OPT_WRITE_TO_FILE), "outfile", true, "Writes the SQL output to the given file"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|49", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|45", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|46", OPT_DESCRIPTION), "description", true, ((("SFMD description. A default description is used if omited. Example: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|47", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|48", OPT_DESCRIPTION))) + " \"Runs such and such\"")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|52", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|50", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|51", OPT_INTERACTIVE), "interactive", false, "Runs in interactive mode, reading and writing from the console, 'go' or '/' sends a statement"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|55", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|53", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|54", OPT_TIMING), "printTiming", false, "Prints timing information"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|58", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|56", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|57", OPT_METADATA), "printMetaData", false, "Prints metadata information"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|61", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|59", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|60", OPT_STACK_TRACE), "printStack", false, "Prints stack traces on errors"));
        org.apache.commons.cli.Option option = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|65", org.apache.commons.cli.Option.class, new org.apache.commons.cli.Option(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|62", OPT_COLUMN_NAMES), "columnNames", true, ((("Column XML names; default names column labels. Example: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|63", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|64", OPT_COLUMN_NAMES))) + " \"cname1 cname2\"")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|68", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|66", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|67", org.apache.commons.cli.Option.class, option)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|72", org.apache.commons.cli.Option.class, (option = new org.apache.commons.cli.Option(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|69", OPT_PARAM_NAMES), "paramNames", true, ((("Parameter XML names; default names are param1, param2, etc. Example: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|70", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|71", OPT_PARAM_NAMES))) + " \"pname1 pname2\""))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|75", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|73", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|74", org.apache.commons.cli.Option.class, option)));
        // 
        final org.apache.commons.cli.OptionGroup pOutTypesOptionGroup = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|76", org.apache.commons.cli.OptionGroup.class, new org.apache.commons.cli.OptionGroup());
        final java.lang.String pOutTypesOptionGroupDoc = (((((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|77", OPT)) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|78", OPT_PARAM_TYPES_INT))) + " and ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|79", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|80", OPT_PARAM_TYPES_NAME))) + " are mutually exclusive.";
        final java.lang.String typesClassName = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|81", java.sql.Types.class.getName());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|87", org.apache.commons.cli.Option.class, (option = new org.apache.commons.cli.Option(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|82", OPT_PARAM_TYPES_INT), "paramTypes", true, ((((((("Parameter types from " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|83", typesClassName))) + ". ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|84", pOutTypesOptionGroupDoc))) + " Example: ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|85", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|86", OPT_PARAM_TYPES_INT))) + " \"-10 12\""))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|90", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|88", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|89", org.apache.commons.cli.Option.class, option)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|96", org.apache.commons.cli.Option.class, (option = new org.apache.commons.cli.Option(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|91", OPT_PARAM_TYPES_NAME), "paramTypeNames", true, ((((((("Parameter " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|92", typesClassName))) + " names. ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|93", pOutTypesOptionGroupDoc))) + " Example: ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|94", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|95", OPT_PARAM_TYPES_NAME))) + " \"CURSOR VARCHAR\""))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|99", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|97", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|98", org.apache.commons.cli.Option.class, option)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|102", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|100", org.apache.commons.cli.Options.class, commandLineOptions).addOptionGroup(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|101", org.apache.commons.cli.OptionGroup.class, pOutTypesOptionGroup)));
        // 
        final org.apache.commons.cli.OptionGroup modesOptionGroup = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|103", org.apache.commons.cli.OptionGroup.class, new org.apache.commons.cli.OptionGroup());
        final java.lang.String modesOptionGroupDoc = (((((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|104", OPT)) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|105", OPT_PARAM_MODES_INT))) + " and ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|106", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|107", OPT_PARAM_MODES_NAME))) + " are mutually exclusive.";
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|112", org.apache.commons.cli.Option.class, (option = new org.apache.commons.cli.Option(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|108", OPT_PARAM_MODES_INT), "paramModes", true, (((((((((((((((((("Parameters modes (" + (java.sql.ParameterMetaData.parameterModeIn)) + "=IN, ") + (java.sql.ParameterMetaData.parameterModeInOut)) + "=INOUT, ") + (java.sql.ParameterMetaData.parameterModeOut)) + "=OUT, ") + (java.sql.ParameterMetaData.parameterModeUnknown)) + "=Unknown") + "). ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|109", modesOptionGroupDoc))) + " Example for 2 parameters, OUT and IN: ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|110", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|111", OPT_PARAM_MODES_INT))) + " \"") + (java.sql.ParameterMetaData.parameterModeOut)) + " ") + (java.sql.ParameterMetaData.parameterModeIn)) + "\""))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|115", org.apache.commons.cli.OptionGroup.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|113", org.apache.commons.cli.OptionGroup.class, modesOptionGroup).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|114", org.apache.commons.cli.Option.class, option)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|123", org.apache.commons.cli.Option.class, (option = new org.apache.commons.cli.Option(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|116", OPT_PARAM_MODES_NAME), "paramModeNames", true, ((((((((((("Parameters mode names (" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|117", PMODES))) + "). ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|118", modesOptionGroupDoc))) + " Example for 2 parameters, OUT and IN: ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|119", OPT))) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|120", OPT_PARAM_MODES_NAME))) + " \"") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|121", _PMODE_OUT))) + " ") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|122", _PMODE_IN))) + "\""))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|126", org.apache.commons.cli.OptionGroup.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|124", org.apache.commons.cli.OptionGroup.class, modesOptionGroup).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|125", org.apache.commons.cli.Option.class, option)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|129", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|127", org.apache.commons.cli.Options.class, commandLineOptions).addOptionGroup(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.OptionGroup>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|128", org.apache.commons.cli.OptionGroup.class, modesOptionGroup)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|131", org.apache.commons.cli.Option.class, (option = new org.apache.commons.cli.Option(null, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|130", OPT_TRIM_L), true, "Trims leading and trailing spaces from all column values. Column XML names can be optionally specified to set which columns to trim.")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|132", org.apache.commons.cli.Option.class, option).setOptionalArg(true);
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|135", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|133", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|134", org.apache.commons.cli.Option.class, option)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|138", org.apache.commons.cli.Option.class, (option = new org.apache.commons.cli.Option(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|136", OPT_JDBC_TO_SFMD), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|137", OPT_JDBC_TO_SFMD_L), true, "Converts the JDBC file in the first argument to an SMFD file specified in the second argument.")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|139", org.apache.commons.cli.Option.class, option).setArgs(2);
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|142", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|140", org.apache.commons.cli.Options.class, commandLineOptions).addOption(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Option>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|141", org.apache.commons.cli.Option.class, option)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.HelpFormatter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|143", org.apache.commons.cli.HelpFormatter.class, formatter).printHelp(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|145", java.io.PrintWriter.class, new java.io.PrintWriter(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|144", java.io.StringWriter.class, sw))), org.apache.commons.cli.HelpFormatter.DEFAULT_WIDTH, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|146", this.getClass().getName()), null, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|147", org.apache.commons.cli.Options.class, commandLineOptions), org.apache.commons.cli.HelpFormatter.DEFAULT_LEFT_PAD, org.apache.commons.cli.HelpFormatter.DEFAULT_DESC_PAD, null);
        final java.lang.String expected = (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("usage: org.apache.commons.cli.bug.BugCLI162Test" + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -2,--jdbc2sfmd <arg>        Converts the JDBC file in the first argument") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             to an SMFD file specified in the second") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             argument.") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -a,--paramNames <arg>       Parameter XML names; default names are") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             param1, param2, etc. Example: -a \"pname1") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             pname2\"") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -b,--jdbc <arg>             Writes a JDBC binding node file for the given") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             SQL") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -c,--url <arg>              Connection URL") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -d,--driver <arg>           JDBC driver class name") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -e,--description <arg>      SFMD description. A default description is") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             used if omited. Example: -e \"Runs such and") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             such\"") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -f,--sfmd <arg>             Writes a SFMD file for the given SQL") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -g,--printTiming            Prints timing information") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -h,--help                   Prints help and quits") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -i,--interactive            Runs in interactive mode, reading and writing") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             from the console, 'go' or '/' sends a") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             statement") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -j,--node <arg>             Writes a JDBC node file for the given SQL") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             (internal debugging)") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -l,--columnNames <arg>      Column XML names; default names column") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             labels. Example: -l \"cname1 cname2\"") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -m,--printMetaData          Prints metadata information") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -n,--info                   Prints driver information and properties. If") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             -c is not specified, all drivers on the") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             classpath are displayed.") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -o,--paramModes <arg>       Parameters modes (1=IN, 2=INOUT, 4=OUT,") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             0=Unknown). -o and -O are mutually exclusive.") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             Example for 2 parameters, OUT and IN: -o \"4") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             1\"") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -O,--paramModeNames <arg>   Parameters mode names (IN, INOUT, OUT,") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             Unknown). -o and -O are mutually exclusive.") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             Example for 2 parameters, OUT and IN: -O \"OUT") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             IN\"") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -p,--password <arg>         The database password for the user specified") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             with the -u option. You can obfuscate the") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             password with") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             org.mortbay.jetty.security.Password, see") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             http://docs.codehaus.org/display/JETTY/Securi") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             ng+Passwords") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -s,--sql <arg>              Runs SQL or {call stored_procedure(?, ?)} or") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             {?=call function(?, ?)}") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -t,--printStack             Prints stack traces on errors") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "    --trim <arg>             Trims leading and trailing spaces from all") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             column values. Column XML names can be") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             optionally specified to set which columns to") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             trim.") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -u,--user <arg>             A database user name") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -w,--outfile <arg>          Writes the SQL output to the given file") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -y,--paramTypes <arg>       Parameter types from java.sql.Types. -y and") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             -Y are mutually exclusive. Example: -y \"-10") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             12\"") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " -Y,--paramTypeNames <arg>   Parameter java.sql.Types names. -y and -Y are") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             mutually exclusive. Example: -Y \"CURSOR") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                             VARCHAR\"") + (org.apache.commons.cli.bug.BugCLI162Test.CR);
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|148", expected), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|150", eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testPrintHelpLongLines()|149", java.io.StringWriter.class, sw).toString()));
    }

    @org.junit.Test
    public void testLongLineChunking() {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|2", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|1", org.apache.commons.cli.Options.class, options).addOption("x", "extralongarg", false, ("This description has ReallyLongValuesThatAreLongerThanTheWidthOfTheColumns " + ("and also other ReallyLongValuesThatAreHugerAndBiggerThanTheWidthOfTheColumnsBob, " + "yes. "))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.HelpFormatter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|3", org.apache.commons.cli.HelpFormatter.class, formatter).printHelp(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|5", java.io.PrintWriter.class, new java.io.PrintWriter(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|4", java.io.StringWriter.class, sw))), 35, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|6", this.getClass().getName()), "Header", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|7", org.apache.commons.cli.Options.class, options), 0, 5, "Footer");
        final java.lang.String expected = (((((((((((((((((((((((((((((((((((((("usage:" + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "       org.apache.commons.cli.bug.B") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "       ugCLI162Test") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "Header") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "-x,--extralongarg     This") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      description") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      has") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      ReallyLongVal") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      uesThatAreLon") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      gerThanTheWid") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      thOfTheColumn") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      s and also") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      other") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      ReallyLongVal") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      uesThatAreHug") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      erAndBiggerTh") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      anTheWidthOfT") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      heColumnsBob,") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "                      yes.") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "Footer") + (org.apache.commons.cli.bug.BugCLI162Test.CR);
        org.junit.Assert.assertEquals("Long arguments did not split as expected", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|8", expected), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunking()|9", java.io.StringWriter.class, sw).toString()));
    }

    @org.junit.Test
    public void testLongLineChunkingIndentIgnored() {
        final org.apache.commons.cli.Options options = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|0", org.apache.commons.cli.Options.class, new org.apache.commons.cli.Options());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|2", org.apache.commons.cli.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|1", org.apache.commons.cli.Options.class, options).addOption("x", "extralongarg", false, "This description is Long."));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.HelpFormatter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|3", org.apache.commons.cli.HelpFormatter.class, formatter).printHelp(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|5", java.io.PrintWriter.class, new java.io.PrintWriter(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|4", java.io.StringWriter.class, sw))), 22, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|6", this.getClass().getName()), "Header", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.cli.Options>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|7", org.apache.commons.cli.Options.class, options), 0, 5, "Footer");
        final java.lang.String expected = (((((((((((((((("usage:" + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "       org.apache.comm") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "       ons.cli.bug.Bug") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "       CLI162Test") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "Header") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "-x,--extralongarg") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " This description is") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + " Long.") + (org.apache.commons.cli.bug.BugCLI162Test.CR)) + "Footer") + (org.apache.commons.cli.bug.BugCLI162Test.CR);
        org.junit.Assert.assertEquals("Long arguments did not split as expected", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|8", expected), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringWriter>observeState("org.apache.commons.cli.bug.BugCLI162Test|testLongLineChunkingIndentIgnored()|9", java.io.StringWriter.class, sw).toString()));
    }
}

