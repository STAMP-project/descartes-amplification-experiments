package org.jsoup.integration;


/**
 * Integration test: parses from real-world example HTML.
 *
 * @author Jonathan Hedley, jonathan@hedley.net
 */
public class ParseTest {
    @org.junit.Test
    public void testSmhBizArticle() throws java.io.IOException {
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testSmhBizArticle()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/smh-biz-article-1.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testSmhBizArticle()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testSmhBizArticle()|1", java.io.File.class, in), "UTF-8", "http://www.smh.com.au/business/the-boards-next-fear-the-female-quota-20100106-lteq.html"));
        org.junit.Assert.assertEquals("The board’s next fear: the female quota", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testSmhBizArticle()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testSmhBizArticle()|3", org.jsoup.nodes.Document.class, doc).title()));// note that the apos in the source is a literal ’ (8217), not escaped or '

        org.junit.Assert.assertEquals("en", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testSmhBizArticle()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testSmhBizArticle()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testSmhBizArticle()|5", org.jsoup.nodes.Document.class, doc).select("html")).attr("xml:lang")));
        org.jsoup.select.Elements articleBody = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testSmhBizArticle()|9", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testSmhBizArticle()|8", org.jsoup.nodes.Document.class, doc).select(".articleBody > *"));
        org.junit.Assert.assertEquals(17, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testSmhBizArticle()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testSmhBizArticle()|10", org.jsoup.select.Elements.class, articleBody).size()));
        // todo: more tests!
    }

    @org.junit.Test
    public void testNewsHomepage() throws java.io.IOException {
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/news-com-au-home.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|1", java.io.File.class, in), "UTF-8", "http://www.news.com.au/"));
        org.junit.Assert.assertEquals("News.com.au | News from Australia and around the world online | NewsComAu", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testNewsHomepage()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|3", org.jsoup.nodes.Document.class, doc).title()));
        org.junit.Assert.assertEquals("Brace yourself for Metro meltdown", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testNewsHomepage()|8", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testNewsHomepage()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|5", org.jsoup.nodes.Document.class, doc).select(".id1225817868581 h4")).text()).trim()));
        org.jsoup.nodes.Element a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|11", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|10", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|9", org.jsoup.nodes.Document.class, doc).select("a[href=/entertainment/horoscopes]")).first());
        org.junit.Assert.assertEquals("/entertainment/horoscopes", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testNewsHomepage()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|12", org.jsoup.nodes.Element.class, a).attr("href")));
        org.junit.Assert.assertEquals("http://www.news.com.au/entertainment/horoscopes", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testNewsHomepage()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|14", org.jsoup.nodes.Element.class, a).attr("abs:href")));
        org.jsoup.nodes.Element hs = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|18", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|17", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|16", org.jsoup.nodes.Document.class, doc).select("a[href*=naughty-corners-are-a-bad-idea]")).first());
        org.junit.Assert.assertEquals("http://www.heraldsun.com.au/news/naughty-corners-are-a-bad-idea-for-kids/story-e6frf7jo-1225817899003", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testNewsHomepage()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|19", org.jsoup.nodes.Element.class, hs).attr("href")));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testNewsHomepage()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|21", org.jsoup.nodes.Element.class, hs).attr("href")), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testNewsHomepage()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testNewsHomepage()|23", org.jsoup.nodes.Element.class, hs).attr("abs:href")));
    }

    @org.junit.Test
    public void testGoogleSearchIpod() throws java.io.IOException {
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/google-ipod.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|1", java.io.File.class, in), "UTF-8", "http://www.google.com/search?hl=en&q=ipod&aq=f&oq=&aqi=g10"));
        org.junit.Assert.assertEquals("ipod - Google Search", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|3", org.jsoup.nodes.Document.class, doc).title()));
        org.jsoup.select.Elements results = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|5", org.jsoup.nodes.Document.class, doc).select("h3.r > a"));
        org.junit.Assert.assertEquals(12, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|7", org.jsoup.select.Elements.class, results).size()));
        org.junit.Assert.assertEquals("http://news.google.com/news?hl=en&q=ipod&um=1&ie=UTF-8&ei=uYlKS4SbBoGg6gPf-5XXCw&sa=X&oi=news_group&ct=title&resnum=1&ved=0CCIQsQQwAA", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|10", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|9", org.jsoup.select.Elements.class, results).get(0)).attr("href")));
        org.junit.Assert.assertEquals("http://www.apple.com/itunes/", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|13", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testGoogleSearchIpod()|12", org.jsoup.select.Elements.class, results).get(1)).attr("href")));
    }

    @org.junit.Test
    public void testBinary() throws java.io.IOException {
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testBinary()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/thumb.jpg"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBinary()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testBinary()|1", java.io.File.class, in), "UTF-8"));
        // nothing useful, but did not blow up
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBinary()|5", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBinary()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBinary()|3", org.jsoup.nodes.Document.class, doc).text()).contains("gd-jpeg")));
    }

    @org.junit.Test
    public void testYahooJp() throws java.io.IOException {
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testYahooJp()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/yahoo-jp.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testYahooJp()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testYahooJp()|1", java.io.File.class, in), "UTF-8", "http://www.yahoo.co.jp/index.html"));// http charset is utf-8.

        org.junit.Assert.assertEquals("Yahoo! JAPAN", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testYahooJp()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testYahooJp()|3", org.jsoup.nodes.Document.class, doc).title()));
        org.jsoup.nodes.Element a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testYahooJp()|7", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testYahooJp()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testYahooJp()|5", org.jsoup.nodes.Document.class, doc).select("a[href=t/2322m2]")).first());
        org.junit.Assert.assertEquals("http://www.yahoo.co.jp/_ylh=X3oDMTB0NWxnaGxsBF9TAzIwNzcyOTYyNjUEdGlkAzEyBHRtcGwDZ2Ex/t/2322m2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testYahooJp()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testYahooJp()|8", org.jsoup.nodes.Element.class, a).attr("abs:href")));// session put into <base>

        org.junit.Assert.assertEquals("全国、人気の駅ランキング", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testYahooJp()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testYahooJp()|10", org.jsoup.nodes.Element.class, a).text()));
    }

    @org.junit.Test
    public void testBaidu() throws java.io.IOException {
        // tests <meta http-equiv="Content-Type" content="text/html;charset=gb2312">
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testBaidu()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/baidu-cn-home.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaidu()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testBaidu()|1", java.io.File.class, in), null, "http://www.baidu.com/"));// http charset is gb2312, but NOT specifying it, to test http-equiv parse

        org.jsoup.nodes.Element submit = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testBaidu()|5", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testBaidu()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaidu()|3", org.jsoup.nodes.Document.class, doc).select("#su")).first());
        org.junit.Assert.assertEquals("百度一下", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBaidu()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testBaidu()|6", org.jsoup.nodes.Element.class, submit).attr("value")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testBaidu()|10", org.jsoup.nodes.Element.class, // test from attribute match
        (submit = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testBaidu()|9", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaidu()|8", org.jsoup.nodes.Document.class, doc).select("input[value=百度一下]")).first()));
        org.junit.Assert.assertEquals("su", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBaidu()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testBaidu()|11", org.jsoup.nodes.Element.class, submit).id()));
        org.jsoup.nodes.Element newsLink = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testBaidu()|15", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testBaidu()|14", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaidu()|13", org.jsoup.nodes.Document.class, doc).select("a:contains(新)")).first());
        org.junit.Assert.assertEquals("http://news.baidu.com", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBaidu()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testBaidu()|16", org.jsoup.nodes.Element.class, newsLink).absUrl("href")));
        // check auto-detect from meta
        org.junit.Assert.assertEquals("GB2312", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBaidu()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.jsoup.integration.ParseTest|testBaidu()|20", java.nio.charset.Charset.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.integration.ParseTest|testBaidu()|19", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaidu()|18", org.jsoup.nodes.Document.class, doc).outputSettings()).charset()).displayName()));
        org.junit.Assert.assertEquals("<title>百度一下，你就知道      </title>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBaidu()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testBaidu()|23", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaidu()|22", org.jsoup.nodes.Document.class, doc).select("title")).outerHtml()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.integration.ParseTest|testBaidu()|27", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.integration.ParseTest|testBaidu()|26", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaidu()|25", org.jsoup.nodes.Document.class, doc).outputSettings()).charset("ascii"));
        org.junit.Assert.assertEquals("<title>&#x767e;&#x5ea6;&#x4e00;&#x4e0b;&#xff0c;&#x4f60;&#x5c31;&#x77e5;&#x9053;      </title>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBaidu()|30", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testBaidu()|29", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaidu()|28", org.jsoup.nodes.Document.class, doc).select("title")).outerHtml()));
    }

    @org.junit.Test
    public void testBaiduVariant() throws java.io.IOException {
        // tests <meta charset> when preceded by another <meta>
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testBaiduVariant()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/baidu-variant.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaiduVariant()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testBaiduVariant()|1", java.io.File.class, in), null, "http://www.baidu.com/"));// http charset is gb2312, but NOT specifying it, to test http-equiv parse

        // check auto-detect from meta
        org.junit.Assert.assertEquals("GB2312", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBaiduVariant()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.jsoup.integration.ParseTest|testBaiduVariant()|5", java.nio.charset.Charset.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.integration.ParseTest|testBaiduVariant()|4", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaiduVariant()|3", org.jsoup.nodes.Document.class, doc).outputSettings()).charset()).displayName()));
        org.junit.Assert.assertEquals("<title>百度一下，你就知道</title>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBaiduVariant()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testBaiduVariant()|8", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBaiduVariant()|7", org.jsoup.nodes.Document.class, doc).select("title")).outerHtml()));
    }

    @org.junit.Test
    public void testHtml5Charset() throws java.io.IOException {
        // test that <meta charset="gb2312"> works
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/meta-charset-1.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|1", java.io.File.class, in), null, "http://example.com/"));// gb2312, has html5 <meta charset>

        org.junit.Assert.assertEquals("新", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testHtml5Charset()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|3", org.jsoup.nodes.Document.class, doc).text()));
        org.junit.Assert.assertEquals("GB2312", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testHtml5Charset()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|7", java.nio.charset.Charset.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|6", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|5", org.jsoup.nodes.Document.class, doc).outputSettings()).charset()).displayName()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|9", java.io.File.class, // double check, no charset, falls back to utf8 which is incorrect
        (in = org.jsoup.integration.ParseTest.getFile("/htmltests/meta-charset-2.html"))// 
        );
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|11", org.jsoup.nodes.Document.class, (doc = org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|10", java.io.File.class, in), null, "http://example.com"))// gb2312, no charset
        );
        org.junit.Assert.assertEquals("UTF-8", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testHtml5Charset()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|14", java.nio.charset.Charset.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|13", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|12", org.jsoup.nodes.Document.class, doc).outputSettings()).charset()).displayName()));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testHtml5Charset()|18", "新".equals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testHtml5Charset()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|16", org.jsoup.nodes.Document.class, doc).text()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|19", java.io.File.class, // confirm fallback to utf8
        (in = org.jsoup.integration.ParseTest.getFile("/htmltests/meta-charset-3.html")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|21", org.jsoup.nodes.Document.class, (doc = org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|20", java.io.File.class, in), null, "http://example.com/"))// utf8, no charset
        );
        org.junit.Assert.assertEquals("UTF-8", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testHtml5Charset()|25", eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|24", java.nio.charset.Charset.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|23", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|22", org.jsoup.nodes.Document.class, doc).outputSettings()).charset()).displayName()));
        org.junit.Assert.assertEquals("新", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testHtml5Charset()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testHtml5Charset()|26", org.jsoup.nodes.Document.class, doc).text()));
    }

    @org.junit.Test
    public void testBrokenHtml5CharsetWithASingleDoubleQuote() throws java.io.IOException {
        java.io.InputStream in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.InputStream>observeState("org.jsoup.integration.ParseTest|testBrokenHtml5CharsetWithASingleDoubleQuote()|0", java.io.InputStream.class, org.jsoup.integration.ParseTest.inputStreamFrom(("<html>\n" + (("<head><meta charset=UTF-8\"></head>\n" + "<body></body>\n") + "</html>"))));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBrokenHtml5CharsetWithASingleDoubleQuote()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.InputStream>observeState("org.jsoup.integration.ParseTest|testBrokenHtml5CharsetWithASingleDoubleQuote()|1", java.io.InputStream.class, in), null, "http://example.com/"));
        org.junit.Assert.assertEquals("UTF-8", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testBrokenHtml5CharsetWithASingleDoubleQuote()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.jsoup.integration.ParseTest|testBrokenHtml5CharsetWithASingleDoubleQuote()|5", java.nio.charset.Charset.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.integration.ParseTest|testBrokenHtml5CharsetWithASingleDoubleQuote()|4", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testBrokenHtml5CharsetWithASingleDoubleQuote()|3", org.jsoup.nodes.Document.class, doc).outputSettings()).charset()).displayName()));
    }

    @org.junit.Test
    public void testNytArticle() throws java.io.IOException {
        // has tags like <nyt_text>
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testNytArticle()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/nyt-article-1.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testNytArticle()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testNytArticle()|1", java.io.File.class, in), null, "http://www.nytimes.com/2010/07/26/business/global/26bp.html?hp"));
        org.jsoup.nodes.Element headline = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testNytArticle()|5", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testNytArticle()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testNytArticle()|3", org.jsoup.nodes.Document.class, doc).select("nyt_headline[version=1.0]")).first());
        org.junit.Assert.assertEquals("As BP Lays Out Future, It Will Not Include Hayward", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testNytArticle()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testNytArticle()|6", org.jsoup.nodes.Element.class, headline).text()));
    }

    @org.junit.Test
    public void testYahooArticle() throws java.io.IOException {
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testYahooArticle()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/yahoo-article-1.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testYahooArticle()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testYahooArticle()|1", java.io.File.class, in), "UTF-8", "http://news.yahoo.com/s/nm/20100831/bs_nm/us_gm_china"));
        org.jsoup.nodes.Element p = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testYahooArticle()|5", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testYahooArticle()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testYahooArticle()|3", org.jsoup.nodes.Document.class, doc).select("p:contains(Volt will be sold in the United States)")).first());
        org.junit.Assert.assertEquals("In July, GM said its electric Chevrolet Volt will be sold in the United States at $41,000 -- $8,000 more than its nearest competitor, the Nissan Leaf.", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testYahooArticle()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testYahooArticle()|6", org.jsoup.nodes.Element.class, p).text()));
    }

    @org.junit.Test
    public void testLowercaseUtf8Charset() throws java.io.IOException {
        java.io.File in = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|0", java.io.File.class, org.jsoup.integration.ParseTest.getFile("/htmltests/lowercase-charset-test.html"));
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|1", java.io.File.class, in), null));
        org.jsoup.nodes.Element form = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|5", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|3", org.jsoup.nodes.Document.class, doc).select("#form")).first());
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|7", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|6", org.jsoup.nodes.Element.class, form).children()).size()));
        org.junit.Assert.assertEquals("UTF-8", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|11", java.nio.charset.Charset.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|10", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.integration.ParseTest|testLowercaseUtf8Charset()|9", org.jsoup.nodes.Document.class, doc).outputSettings()).charset()).name()));
    }

    public static java.io.File getFile(java.lang.String resourceName) {
        try {
            java.io.File file = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|getFile(java.lang.String)|3", java.io.File.class, new java.io.File(eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URI>observeState("org.jsoup.integration.ParseTest|getFile(java.lang.String)|2", java.net.URI.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URL>observeState("org.jsoup.integration.ParseTest|getFile(java.lang.String)|1", java.net.URL.class, org.jsoup.integration.ParseTest.class.getResource(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|getFile(java.lang.String)|0", resourceName))).toURI())));
            return eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.jsoup.integration.ParseTest|getFile(java.lang.String)|4", java.io.File.class, file);
        } catch (java.net.URISyntaxException e) {
            throw eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.IllegalStateException>observeState("org.jsoup.integration.ParseTest|getFile(java.lang.String)|6", java.lang.IllegalStateException.class, new java.lang.IllegalStateException(eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URISyntaxException>observeState("org.jsoup.integration.ParseTest|getFile(java.lang.String)|5", java.net.URISyntaxException.class, e)));
        }
    }

    public static java.io.InputStream inputStreamFrom(java.lang.String s) {
        try {
            return eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.jsoup.integration.ParseTest|inputStreamFrom(java.lang.String)|2", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.jsoup.integration.ParseTest|inputStreamFrom(java.lang.String)|1", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.integration.ParseTest|inputStreamFrom(java.lang.String)|0", s).getBytes("UTF-8"))));
        } catch (java.io.UnsupportedEncodingException e) {
            throw eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.RuntimeException>observeState("org.jsoup.integration.ParseTest|inputStreamFrom(java.lang.String)|4", java.lang.RuntimeException.class, new java.lang.RuntimeException(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.UnsupportedEncodingException>observeState("org.jsoup.integration.ParseTest|inputStreamFrom(java.lang.String)|3", java.io.UnsupportedEncodingException.class, e)));
        }
    }
}

