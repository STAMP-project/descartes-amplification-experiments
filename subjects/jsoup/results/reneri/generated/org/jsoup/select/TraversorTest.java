package org.jsoup.select;


public class TraversorTest {
    // Note: NodeTraversor.traverse(new NodeVisitor) is tested in
    // ElementsTest#traverse()
    @org.junit.Test
    public void filterVisit() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterVisit()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><div>There</div>"));
        final java.lang.StringBuilder accum = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterVisit()|1", java.lang.StringBuilder.class, new java.lang.StringBuilder());
        org.jsoup.select.NodeTraversor.filter(new org.jsoup.select.NodeFilter() {
            public org.jsoup.select.NodeFilter.FilterResult head(org.jsoup.nodes.Node node, int depth) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterVisit()|6", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterVisit()|3", java.lang.StringBuilder.class, accum).append((("<" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterVisit()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterVisit()|4", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterVisit()|7", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE);
            }

            public org.jsoup.select.NodeFilter.FilterResult tail(org.jsoup.nodes.Node node, int depth) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterVisit()|11", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterVisit()|8", java.lang.StringBuilder.class, accum).append((("</" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterVisit()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterVisit()|9", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterVisit()|12", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE);
            }
        }, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.TraversorTest|filterVisit()|14", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterVisit()|13", org.jsoup.nodes.Document.class, doc).select("div")));
        org.junit.Assert.assertEquals("<div><p><#text></#text></p></div><div><#text></#text></div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterVisit()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterVisit()|15", java.lang.StringBuilder.class, accum).toString()));
    }

    @org.junit.Test
    public void filterSkipChildren() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><div>There</div>"));
        final java.lang.StringBuilder accum = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|1", java.lang.StringBuilder.class, new java.lang.StringBuilder());
        org.jsoup.select.NodeTraversor.filter(new org.jsoup.select.NodeFilter() {
            public org.jsoup.select.NodeFilter.FilterResult head(org.jsoup.nodes.Node node, int depth) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|6", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|3", java.lang.StringBuilder.class, accum).append((("<" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipChildren()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|4", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
                // OMIT contents of p:
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|12", org.jsoup.select.NodeFilter.FilterResult.class, (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipChildren()|9", "p".equals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipChildren()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|7", org.jsoup.nodes.Node.class, node).nodeName()))) ? eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|10", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.SKIP_CHILDREN) : eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|11", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE)));
            }

            public org.jsoup.select.NodeFilter.FilterResult tail(org.jsoup.nodes.Node node, int depth) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|16", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|13", java.lang.StringBuilder.class, accum).append((("</" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipChildren()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|14", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|17", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE);
            }
        }, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|19", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|18", org.jsoup.nodes.Document.class, doc).select("div")));
        org.junit.Assert.assertEquals("<div><p></p></div><div><#text></#text></div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipChildren()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipChildren()|20", java.lang.StringBuilder.class, accum).toString()));
    }

    @org.junit.Test
    public void filterSkipEntirely() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><div>There</div>"));
        final java.lang.StringBuilder accum = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|1", java.lang.StringBuilder.class, new java.lang.StringBuilder());
        org.jsoup.select.NodeTraversor.filter(new org.jsoup.select.NodeFilter() {
            public org.jsoup.select.NodeFilter.FilterResult head(org.jsoup.nodes.Node node, int depth) {
                // OMIT p:
                if (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipEntirely()|5", "p".equals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipEntirely()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|3", org.jsoup.nodes.Node.class, node).nodeName()))))
                    return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|6", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.SKIP_ENTIRELY);

                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|10", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|7", java.lang.StringBuilder.class, accum).append((("<" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipEntirely()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|8", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|11", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE);
            }

            public org.jsoup.select.NodeFilter.FilterResult tail(org.jsoup.nodes.Node node, int depth) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|15", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|12", java.lang.StringBuilder.class, accum).append((("</" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipEntirely()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|13", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|16", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE);
            }
        }, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|18", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|17", org.jsoup.nodes.Document.class, doc).select("div")));
        org.junit.Assert.assertEquals("<div></div><div><#text></#text></div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterSkipEntirely()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterSkipEntirely()|19", java.lang.StringBuilder.class, accum).toString()));
    }

    @org.junit.Test
    public void filterRemove() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterRemove()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><div>There be <b>bold</b></div>"));
        org.jsoup.select.NodeTraversor.filter(new org.jsoup.select.NodeFilter() {
            public org.jsoup.select.NodeFilter.FilterResult head(org.jsoup.nodes.Node node, int depth) {
                // Delete "p" in head:
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterRemove()|7", org.jsoup.select.NodeFilter.FilterResult.class, (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterRemove()|4", "p".equals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterRemove()|3", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterRemove()|2", org.jsoup.nodes.Node.class, node).nodeName()))) ? eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterRemove()|5", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.REMOVE) : eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterRemove()|6", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE)));
            }

            public org.jsoup.select.NodeFilter.FilterResult tail(org.jsoup.nodes.Node node, int depth) {
                // Delete "b" in tail:
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterRemove()|13", org.jsoup.select.NodeFilter.FilterResult.class, (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterRemove()|10", "b".equals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterRemove()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterRemove()|8", org.jsoup.nodes.Node.class, node).nodeName()))) ? eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterRemove()|11", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.REMOVE) : eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterRemove()|12", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE)));
            }
        }, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.TraversorTest|filterRemove()|15", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterRemove()|14", org.jsoup.nodes.Document.class, doc).select("div")));
        org.junit.Assert.assertEquals("<div></div>\n<div>\n There be \n</div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterRemove()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.TraversorTest|filterRemove()|17", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterRemove()|16", org.jsoup.nodes.Document.class, doc).select("body")).html()));
    }

    @org.junit.Test
    public void filterStop() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterStop()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><div>There</div>"));
        final java.lang.StringBuilder accum = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterStop()|1", java.lang.StringBuilder.class, new java.lang.StringBuilder());
        org.jsoup.select.NodeTraversor.filter(new org.jsoup.select.NodeFilter() {
            public org.jsoup.select.NodeFilter.FilterResult head(org.jsoup.nodes.Node node, int depth) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterStop()|6", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterStop()|3", java.lang.StringBuilder.class, accum).append((("<" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterStop()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterStop()|4", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterStop()|7", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE);
            }

            public org.jsoup.select.NodeFilter.FilterResult tail(org.jsoup.nodes.Node node, int depth) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterStop()|11", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterStop()|8", java.lang.StringBuilder.class, accum).append((("</" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterStop()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterStop()|9", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
                // Stop after p.
                return eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterStop()|17", org.jsoup.select.NodeFilter.FilterResult.class, (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterStop()|14", "p".equals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterStop()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.TraversorTest|filterStop()|12", org.jsoup.nodes.Node.class, node).nodeName()))) ? eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterStop()|15", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.STOP) : eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.NodeFilter.FilterResult>observeState("org.jsoup.select.TraversorTest|filterStop()|16", org.jsoup.select.NodeFilter.FilterResult.class, org.jsoup.select.NodeFilter.FilterResult.CONTINUE)));
            }
        }, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.TraversorTest|filterStop()|19", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.TraversorTest|filterStop()|18", org.jsoup.nodes.Document.class, doc).select("div")));
        org.junit.Assert.assertEquals("<div><p><#text></#text></p>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.TraversorTest|filterStop()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.TraversorTest|filterStop()|20", java.lang.StringBuilder.class, accum).toString()));
    }
}

