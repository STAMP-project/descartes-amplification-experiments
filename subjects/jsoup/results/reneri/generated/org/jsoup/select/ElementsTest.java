package org.jsoup.select;


/**
 * Tests for ElementList.
 *
 * @author Jonathan Hedley, jonathan@hedley.net
 */
public class ElementsTest {
    @org.junit.Test
    public void filter() {
        java.lang.String h = "<p>Excl</p><div class=headline><p>Hello</p><p>There</p></div><div class=headline><h1>Headline</h1></div>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|filter()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|filter()|0", h)));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|filter()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|filter()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|filter()|2", org.jsoup.nodes.Document.class, doc).select(".headline")).select("p"));
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|filter()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|filter()|5", org.jsoup.select.Elements.class, els).size()));
        org.junit.Assert.assertEquals("Hello", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|filter()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|filter()|8", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|filter()|7", org.jsoup.select.Elements.class, els).get(0)).text()));
        org.junit.Assert.assertEquals("There", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|filter()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|filter()|11", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|filter()|10", org.jsoup.select.Elements.class, els).get(1)).text()));
    }

    @org.junit.Test
    public void attributes() {
        java.lang.String h = "<p title=foo><p title=bar><p class=foo><p class=bar>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|attributes()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|0", h)));
        org.jsoup.select.Elements withTitle = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|attributes()|2", org.jsoup.nodes.Document.class, doc).select("p[title]"));
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|4", org.jsoup.select.Elements.class, withTitle).size()));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|6", org.jsoup.select.Elements.class, withTitle).hasAttr("title")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|8", org.jsoup.select.Elements.class, withTitle).hasAttr("class")));
        org.junit.Assert.assertEquals("foo", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|10", org.jsoup.select.Elements.class, withTitle).attr("title")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|13", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|12", org.jsoup.select.Elements.class, withTitle).removeAttr("title"));
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|14", org.jsoup.select.Elements.class, withTitle).size()));// existing Elements are not reevaluated

        org.junit.Assert.assertEquals(0, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|17", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|attributes()|16", org.jsoup.nodes.Document.class, doc).select("p[title]")).size()));
        org.jsoup.select.Elements ps = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|21", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|20", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|attributes()|19", org.jsoup.nodes.Document.class, doc).select("p")).attr("style", "classy"));
        org.junit.Assert.assertEquals(4, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|22", org.jsoup.select.Elements.class, ps).size()));
        org.junit.Assert.assertEquals("classy", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|attributes()|25", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|24", org.jsoup.select.Elements.class, ps).last()).attr("style")));
        org.junit.Assert.assertEquals("bar", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attributes()|29", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|attributes()|28", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attributes()|27", org.jsoup.select.Elements.class, ps).last()).attr("class")));
    }

    @org.junit.Test
    public void hasAttr() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasAttr()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<p title=foo><p title=bar><p class=foo><p class=bar>"));
        org.jsoup.select.Elements ps = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasAttr()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasAttr()|1", org.jsoup.nodes.Document.class, doc).select("p"));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasAttr()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasAttr()|3", org.jsoup.select.Elements.class, ps).hasAttr("class")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasAttr()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasAttr()|5", org.jsoup.select.Elements.class, ps).hasAttr("style")));
    }

    @org.junit.Test
    public void hasAbsAttr() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<a id=1 href='/foo'>One</a> <a id=2 href='https://jsoup.org'>Two</a>"));
        org.jsoup.select.Elements one = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|1", org.jsoup.nodes.Document.class, doc).select("#1"));
        org.jsoup.select.Elements two = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|3", org.jsoup.nodes.Document.class, doc).select("#2"));
        org.jsoup.select.Elements both = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|5", org.jsoup.nodes.Document.class, doc).select("a"));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasAbsAttr()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|7", org.jsoup.select.Elements.class, one).hasAttr("abs:href")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasAbsAttr()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|9", org.jsoup.select.Elements.class, two).hasAttr("abs:href")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasAbsAttr()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasAbsAttr()|11", org.jsoup.select.Elements.class, both).hasAttr("abs:href")));// hits on #2

    }

    @org.junit.Test
    public void attr() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|attr()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<p title=foo><p title=bar><p class=foo><p class=bar>"));
        java.lang.String classVal = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attr()|3", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|attr()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|attr()|1", org.jsoup.nodes.Document.class, doc).select("p")).attr("class"));
        org.junit.Assert.assertEquals("foo", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|attr()|4", classVal));
    }

    @org.junit.Test
    public void absAttr() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|absAttr()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<a id=1 href='/foo'>One</a> <a id=2 href='https://jsoup.org'>Two</a>"));
        org.jsoup.select.Elements one = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|absAttr()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|absAttr()|1", org.jsoup.nodes.Document.class, doc).select("#1"));
        org.jsoup.select.Elements two = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|absAttr()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|absAttr()|3", org.jsoup.nodes.Document.class, doc).select("#2"));
        org.jsoup.select.Elements both = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|absAttr()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|absAttr()|5", org.jsoup.nodes.Document.class, doc).select("a"));
        org.junit.Assert.assertEquals("", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|absAttr()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|absAttr()|7", org.jsoup.select.Elements.class, one).attr("abs:href")));
        org.junit.Assert.assertEquals("https://jsoup.org", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|absAttr()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|absAttr()|9", org.jsoup.select.Elements.class, two).attr("abs:href")));
        org.junit.Assert.assertEquals("https://jsoup.org", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|absAttr()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|absAttr()|11", org.jsoup.select.Elements.class, both).attr("abs:href")));
    }

    @org.junit.Test
    public void classes() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|classes()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p class='mellow yellow'></p><p class='red green'></p>"));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|classes()|1", org.jsoup.nodes.Document.class, doc).select("p"));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|classes()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|3", org.jsoup.select.Elements.class, els).hasClass("red")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|classes()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|5", org.jsoup.select.Elements.class, els).hasClass("blue")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|8", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|7", org.jsoup.select.Elements.class, els).addClass("blue"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|10", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|9", org.jsoup.select.Elements.class, els).removeClass("yellow"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|12", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|11", org.jsoup.select.Elements.class, els).toggleClass("mellow"));
        org.junit.Assert.assertEquals("blue", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|classes()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|classes()|14", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|13", org.jsoup.select.Elements.class, els).get(0)).className()));
        org.junit.Assert.assertEquals("red green blue mellow", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|classes()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|classes()|17", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classes()|16", org.jsoup.select.Elements.class, els).get(1)).className()));
    }

    @org.junit.Test
    public void hasClassCaseInsensitive() {
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|1", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<p Class=One>One <p class=Two>Two <p CLASS=THREE>THREE")).select("p"));
        org.jsoup.nodes.Element one = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|3", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|2", org.jsoup.select.Elements.class, els).get(0));
        org.jsoup.nodes.Element two = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|5", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|4", org.jsoup.select.Elements.class, els).get(1));
        org.jsoup.nodes.Element thr = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|7", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|6", org.jsoup.select.Elements.class, els).get(2));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|8", org.jsoup.nodes.Element.class, one).hasClass("One")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|10", org.jsoup.nodes.Element.class, one).hasClass("ONE")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|12", org.jsoup.nodes.Element.class, two).hasClass("TWO")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|14", org.jsoup.nodes.Element.class, two).hasClass("Two")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|16", org.jsoup.nodes.Element.class, thr).hasClass("ThreE")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|hasClassCaseInsensitive()|18", org.jsoup.nodes.Element.class, thr).hasClass("three")));
    }

    @org.junit.Test
    public void text() {
        java.lang.String h = "<div><p>Hello<p>there<p>world</div>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|text()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|text()|0", h)));
        org.junit.Assert.assertEquals("Hello there world", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|text()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|text()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|text()|2", org.jsoup.nodes.Document.class, doc).select("div > *")).text()));
    }

    @org.junit.Test
    public void hasText() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasText()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><div><p></p></div>"));
        org.jsoup.select.Elements divs = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasText()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasText()|1", org.jsoup.nodes.Document.class, doc).select("div"));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasText()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasText()|3", org.jsoup.select.Elements.class, divs).hasText()));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|hasText()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|hasText()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|hasText()|5", org.jsoup.nodes.Document.class, doc).select("div + div")).hasText()));
    }

    @org.junit.Test
    public void html() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|html()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><div><p>There</p></div>"));
        org.jsoup.select.Elements divs = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|html()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|html()|1", org.jsoup.nodes.Document.class, doc).select("div"));
        org.junit.Assert.assertEquals("<p>Hello</p>\n<p>There</p>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|html()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|html()|3", org.jsoup.select.Elements.class, divs).html()));
    }

    @org.junit.Test
    public void outerHtml() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|outerHtml()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><div><p>There</p></div>"));
        org.jsoup.select.Elements divs = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|outerHtml()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|outerHtml()|1", org.jsoup.nodes.Document.class, doc).select("div"));
        org.junit.Assert.assertEquals("<div><p>Hello</p></div><div><p>There</p></div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|outerHtml()|5", org.jsoup.TextUtil.stripNewlines(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|outerHtml()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|outerHtml()|3", org.jsoup.select.Elements.class, divs).outerHtml()))));
    }

    @org.junit.Test
    public void setHtml() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|setHtml()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<p>One</p><p>Two</p><p>Three</p>"));
        org.jsoup.select.Elements ps = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|setHtml()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|setHtml()|1", org.jsoup.nodes.Document.class, doc).select("p"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|setHtml()|5", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|setHtml()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|setHtml()|3", org.jsoup.select.Elements.class, ps).prepend("<b>Bold</b>")).append("<i>Ital</i>"));
        org.junit.Assert.assertEquals("<p><b>Bold</b>Two<i>Ital</i></p>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|setHtml()|9", org.jsoup.TextUtil.stripNewlines(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|setHtml()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|setHtml()|7", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|setHtml()|6", org.jsoup.select.Elements.class, ps).get(1)).outerHtml()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|setHtml()|11", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|setHtml()|10", org.jsoup.select.Elements.class, ps).html("<span>Gone</span>"));
        org.junit.Assert.assertEquals("<p><span>Gone</span></p>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|setHtml()|15", org.jsoup.TextUtil.stripNewlines(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|setHtml()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|setHtml()|13", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|setHtml()|12", org.jsoup.select.Elements.class, ps).get(1)).outerHtml()))));
    }

    @org.junit.Test
    public void val() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|val()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<input value='one' /><textarea>two</textarea>"));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|val()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|val()|1", org.jsoup.nodes.Document.class, doc).select("input, textarea"));
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|val()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|val()|3", org.jsoup.select.Elements.class, els).size()));
        org.junit.Assert.assertEquals("one", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|val()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|val()|5", org.jsoup.select.Elements.class, els).val()));
        org.junit.Assert.assertEquals("two", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|val()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|val()|8", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|val()|7", org.jsoup.select.Elements.class, els).last()).val()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|val()|11", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|val()|10", org.jsoup.select.Elements.class, els).val("three"));
        org.junit.Assert.assertEquals("three", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|val()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|val()|13", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|val()|12", org.jsoup.select.Elements.class, els).first()).val()));
        org.junit.Assert.assertEquals("three", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|val()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|val()|16", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|val()|15", org.jsoup.select.Elements.class, els).last()).val()));
        org.junit.Assert.assertEquals("<textarea>three</textarea>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|val()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|val()|19", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|val()|18", org.jsoup.select.Elements.class, els).last()).outerHtml()));
    }

    @org.junit.Test
    public void before() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|before()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<p>This <a>is</a> <a>jsoup</a>.</p>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|before()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|before()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|before()|1", org.jsoup.nodes.Document.class, doc).select("a")).before("<span>foo</span>"));
        org.junit.Assert.assertEquals("<p>This <span>foo</span><a>is</a> <span>foo</span><a>jsoup</a>.</p>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|before()|7", org.jsoup.TextUtil.stripNewlines(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|before()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|before()|5", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|before()|4", org.jsoup.nodes.Document.class, doc).body()).html()))));
    }

    @org.junit.Test
    public void after() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|after()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<p>This <a>is</a> <a>jsoup</a>.</p>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|after()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|after()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|after()|1", org.jsoup.nodes.Document.class, doc).select("a")).after("<span>foo</span>"));
        org.junit.Assert.assertEquals("<p>This <a>is</a><span>foo</span> <a>jsoup</a><span>foo</span>.</p>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|after()|7", org.jsoup.TextUtil.stripNewlines(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|after()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|after()|5", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|after()|4", org.jsoup.nodes.Document.class, doc).body()).html()))));
    }

    @org.junit.Test
    public void wrap() {
        java.lang.String h = "<p><b>This</b> is <b>jsoup</b></p>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|wrap()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|wrap()|0", h)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|wrap()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|wrap()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|wrap()|2", org.jsoup.nodes.Document.class, doc).select("b")).wrap("<i></i>"));
        org.junit.Assert.assertEquals("<p><i><b>This</b></i> is <i><b>jsoup</b></i></p>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|wrap()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|wrap()|6", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|wrap()|5", org.jsoup.nodes.Document.class, doc).body()).html()));
    }

    @org.junit.Test
    public void wrapDiv() {
        java.lang.String h = "<p><b>This</b> is <b>jsoup</b>.</p> <p>How do you like it?</p>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|wrapDiv()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|wrapDiv()|0", h)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|wrapDiv()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|wrapDiv()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|wrapDiv()|2", org.jsoup.nodes.Document.class, doc).select("p")).wrap("<div></div>"));
        org.junit.Assert.assertEquals("<div><p><b>This</b> is <b>jsoup</b>.</p></div> <div><p>How do you like it?</p></div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|wrapDiv()|8", org.jsoup.TextUtil.stripNewlines(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|wrapDiv()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|wrapDiv()|6", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|wrapDiv()|5", org.jsoup.nodes.Document.class, doc).body()).html()))));
    }

    @org.junit.Test
    public void unwrap() {
        java.lang.String h = "<div><font>One</font> <font><a href=\"/\">Two</a></font></div";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|unwrap()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|unwrap()|0", h)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|unwrap()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|unwrap()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|unwrap()|2", org.jsoup.nodes.Document.class, doc).select("font")).unwrap());
        org.junit.Assert.assertEquals("<div>One <a href=\"/\">Two</a></div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|unwrap()|8", org.jsoup.TextUtil.stripNewlines(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|unwrap()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|unwrap()|6", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|unwrap()|5", org.jsoup.nodes.Document.class, doc).body()).html()))));
    }

    @org.junit.Test
    public void unwrapP() {
        java.lang.String h = "<p><a>One</a> Two</p> Three <i>Four</i> <p>Fix <i>Six</i></p>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|unwrapP()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|unwrapP()|0", h)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|unwrapP()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|unwrapP()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|unwrapP()|2", org.jsoup.nodes.Document.class, doc).select("p")).unwrap());
        org.junit.Assert.assertEquals("<a>One</a> Two Three <i>Four</i> Fix <i>Six</i>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|unwrapP()|8", org.jsoup.TextUtil.stripNewlines(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|unwrapP()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|unwrapP()|6", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|unwrapP()|5", org.jsoup.nodes.Document.class, doc).body()).html()))));
    }

    @org.junit.Test
    public void unwrapKeepsSpace() {
        java.lang.String h = "<p>One <span>two</span> <span>three</span> four</p>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|unwrapKeepsSpace()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|unwrapKeepsSpace()|0", h)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|unwrapKeepsSpace()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|unwrapKeepsSpace()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|unwrapKeepsSpace()|2", org.jsoup.nodes.Document.class, doc).select("span")).unwrap());
        org.junit.Assert.assertEquals("<p>One two three four</p>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|unwrapKeepsSpace()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|unwrapKeepsSpace()|6", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|unwrapKeepsSpace()|5", org.jsoup.nodes.Document.class, doc).body()).html()));
    }

    @org.junit.Test
    public void empty() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|empty()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello <b>there</b></p> <p>now!</p></div>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.select.ElementsTest|empty()|3", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.select.ElementsTest|empty()|2", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|empty()|1", org.jsoup.nodes.Document.class, doc).outputSettings()).prettyPrint(false));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|empty()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|empty()|5", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|empty()|4", org.jsoup.nodes.Document.class, doc).select("p")).empty());
        org.junit.Assert.assertEquals("<div><p></p> <p></p></div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|empty()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|empty()|8", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|empty()|7", org.jsoup.nodes.Document.class, doc).body()).html()));
    }

    @org.junit.Test
    public void remove() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|remove()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello <b>there</b></p> jsoup <p>now!</p></div>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.select.ElementsTest|remove()|3", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.select.ElementsTest|remove()|2", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|remove()|1", org.jsoup.nodes.Document.class, doc).outputSettings()).prettyPrint(false));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|remove()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|remove()|5", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|remove()|4", org.jsoup.nodes.Document.class, doc).select("p")).remove());
        org.junit.Assert.assertEquals("<div> jsoup </div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|remove()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|remove()|8", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|remove()|7", org.jsoup.nodes.Document.class, doc).body()).html()));
    }

    @org.junit.Test
    public void eq() {
        java.lang.String h = "<p>Hello<p>there<p>world";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eq()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eq()|0", h)));
        org.junit.Assert.assertEquals("there", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eq()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eq()|4", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eq()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eq()|2", org.jsoup.nodes.Document.class, doc).select("p")).eq(1)).text()));
        org.junit.Assert.assertEquals("there", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eq()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|eq()|8", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eq()|7", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eq()|6", org.jsoup.nodes.Document.class, doc).select("p")).get(1)).text()));
    }

    @org.junit.Test
    public void is() {
        java.lang.String h = "<p>Hello<p title=foo>there<p>world";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|is()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|is()|0", h)));
        org.jsoup.select.Elements ps = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|is()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|is()|2", org.jsoup.nodes.Document.class, doc).select("p"));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|is()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|is()|4", org.jsoup.select.Elements.class, ps).is("[title=foo]")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|is()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|is()|6", org.jsoup.select.Elements.class, ps).is("[title=bar]")));
    }

    @org.junit.Test
    public void parents() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|parents()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><p>There</p>"));
        org.jsoup.select.Elements parents = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|parents()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|parents()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|parents()|1", org.jsoup.nodes.Document.class, doc).select("p")).parents());
        org.junit.Assert.assertEquals(3, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|parents()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|parents()|4", org.jsoup.select.Elements.class, parents).size()));
        org.junit.Assert.assertEquals("div", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|parents()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|parents()|7", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|parents()|6", org.jsoup.select.Elements.class, parents).get(0)).tagName()));
        org.junit.Assert.assertEquals("body", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|parents()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|parents()|10", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|parents()|9", org.jsoup.select.Elements.class, parents).get(1)).tagName()));
        org.junit.Assert.assertEquals("html", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|parents()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|parents()|13", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|parents()|12", org.jsoup.select.Elements.class, parents).get(2)).tagName()));
    }

    @org.junit.Test
    public void not() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|not()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div id=1><p>One</p></div> <div id=2><p><span>Two</span></p></div>"));
        org.jsoup.select.Elements div1 = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|not()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|not()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|not()|1", org.jsoup.nodes.Document.class, doc).select("div")).not(":has(p > span)"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|not()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|not()|4", org.jsoup.select.Elements.class, div1).size()));
        org.junit.Assert.assertEquals("1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|not()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|not()|7", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|not()|6", org.jsoup.select.Elements.class, div1).first()).id()));
        org.jsoup.select.Elements div2 = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|not()|11", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|not()|10", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|not()|9", org.jsoup.nodes.Document.class, doc).select("div")).not("#1"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|not()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|not()|12", org.jsoup.select.Elements.class, div2).size()));
        org.junit.Assert.assertEquals("2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|not()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|not()|15", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|not()|14", org.jsoup.select.Elements.class, div2).first()).id()));
    }

    @org.junit.Test
    public void tagNameSet() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|tagNameSet()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<p>Hello <i>there</i> <i>now</i></p>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|tagNameSet()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|tagNameSet()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|tagNameSet()|1", org.jsoup.nodes.Document.class, doc).select("i")).tagName("em"));
        org.junit.Assert.assertEquals("<p>Hello <em>there</em> <em>now</em></p>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|tagNameSet()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|tagNameSet()|5", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|tagNameSet()|4", org.jsoup.nodes.Document.class, doc).body()).html()));
    }

    @org.junit.Test
    public void traverse() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|traverse()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>Hello</p></div><div>There</div>"));
        final java.lang.StringBuilder accum = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.ElementsTest|traverse()|1", java.lang.StringBuilder.class, new java.lang.StringBuilder());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|traverse()|13", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|traverse()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|traverse()|2", org.jsoup.nodes.Document.class, doc).select("div")).traverse(new org.jsoup.select.NodeVisitor() {
            public void head(org.jsoup.nodes.Node node, int depth) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.ElementsTest|traverse()|8", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.ElementsTest|traverse()|5", java.lang.StringBuilder.class, accum).append((("<" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|traverse()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.ElementsTest|traverse()|6", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
            }

            public void tail(org.jsoup.nodes.Node node, int depth) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.ElementsTest|traverse()|12", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.ElementsTest|traverse()|9", java.lang.StringBuilder.class, accum).append((("</" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|traverse()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.select.ElementsTest|traverse()|10", org.jsoup.nodes.Node.class, node).nodeName()))) + ">")));
            }
        }));
        org.junit.Assert.assertEquals("<div><p><#text></#text></p></div><div><#text></#text></div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|traverse()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.select.ElementsTest|traverse()|14", java.lang.StringBuilder.class, accum).toString()));
    }

    @org.junit.Test
    public void forms() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|forms()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<form id=1><input name=q></form><div /><form id=2><input name=f></form>"));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|forms()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|forms()|1", org.jsoup.nodes.Document.class, doc).select("*"));
        org.junit.Assert.assertEquals(9, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|forms()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|forms()|3", org.jsoup.select.Elements.class, els).size()));
        java.util.List<org.jsoup.nodes.FormElement> forms = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.jsoup.nodes.FormElement>>observeState("org.jsoup.select.ElementsTest|forms()|6", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|forms()|5", org.jsoup.select.Elements.class, els).forms());
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|forms()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.jsoup.nodes.FormElement>>observeState("org.jsoup.select.ElementsTest|forms()|7", java.util.List.class, forms).size()));
        org.junit.Assert.assertTrue(((eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.FormElement>observeState("org.jsoup.select.ElementsTest|forms()|10", org.jsoup.nodes.FormElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.jsoup.nodes.FormElement>>observeState("org.jsoup.select.ElementsTest|forms()|9", java.util.List.class, forms).get(0))) != null));
        org.junit.Assert.assertTrue(((eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.FormElement>observeState("org.jsoup.select.ElementsTest|forms()|12", org.jsoup.nodes.FormElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.jsoup.nodes.FormElement>>observeState("org.jsoup.select.ElementsTest|forms()|11", java.util.List.class, forms).get(1))) != null));
        org.junit.Assert.assertEquals("1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|forms()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.FormElement>observeState("org.jsoup.select.ElementsTest|forms()|14", org.jsoup.nodes.FormElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.jsoup.nodes.FormElement>>observeState("org.jsoup.select.ElementsTest|forms()|13", java.util.List.class, forms).get(0)).id()));
        org.junit.Assert.assertEquals("2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|forms()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.FormElement>observeState("org.jsoup.select.ElementsTest|forms()|17", org.jsoup.nodes.FormElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.jsoup.nodes.FormElement>>observeState("org.jsoup.select.ElementsTest|forms()|16", java.util.List.class, forms).get(1)).id()));
    }

    @org.junit.Test
    public void classWithHyphen() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|classWithHyphen()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<p class='tab-nav'>Check</p>"));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classWithHyphen()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|classWithHyphen()|1", org.jsoup.nodes.Document.class, doc).getElementsByClass("tab-nav"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|classWithHyphen()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classWithHyphen()|3", org.jsoup.select.Elements.class, els).size()));
        org.junit.Assert.assertEquals("Check", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|classWithHyphen()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|classWithHyphen()|5", org.jsoup.select.Elements.class, els).text()));
    }

    @org.junit.Test
    public void siblings() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|siblings()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>1<p>2<p>3<p>4<p>5<p>6</div><div><p>7<p>8<p>9<p>10<p>11<p>12</div>"));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|siblings()|1", org.jsoup.nodes.Document.class, doc).select("p:eq(3)"));// gets p4 and p10

        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|3", org.jsoup.select.Elements.class, els).size()));
        org.jsoup.select.Elements next = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|5", org.jsoup.select.Elements.class, els).next());
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|7", org.jsoup.select.Elements.class, next).size()));
        org.junit.Assert.assertEquals("5", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|10", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|9", org.jsoup.select.Elements.class, next).first()).text()));
        org.junit.Assert.assertEquals("11", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|13", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|12", org.jsoup.select.Elements.class, next).last()).text()));
        org.junit.Assert.assertEquals(0, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|16", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|15", org.jsoup.select.Elements.class, els).next("p:contains(6)")).size()));
        final org.jsoup.select.Elements nextF = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|19", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|18", org.jsoup.select.Elements.class, els).next("p:contains(5)"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|20", org.jsoup.select.Elements.class, nextF).size()));
        org.junit.Assert.assertEquals("5", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|23", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|22", org.jsoup.select.Elements.class, nextF).first()).text()));
        org.jsoup.select.Elements nextA = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|26", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|25", org.jsoup.select.Elements.class, els).nextAll());
        org.junit.Assert.assertEquals(4, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|27", org.jsoup.select.Elements.class, nextA).size()));
        org.junit.Assert.assertEquals("5", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|31", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|30", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|29", org.jsoup.select.Elements.class, nextA).first()).text()));
        org.junit.Assert.assertEquals("12", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|34", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|33", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|32", org.jsoup.select.Elements.class, nextA).last()).text()));
        org.jsoup.select.Elements nextAF = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|36", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|35", org.jsoup.select.Elements.class, els).nextAll("p:contains(6)"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|38", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|37", org.jsoup.select.Elements.class, nextAF).size()));
        org.junit.Assert.assertEquals("6", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|41", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|40", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|39", org.jsoup.select.Elements.class, nextAF).first()).text()));
        org.jsoup.select.Elements prev = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|43", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|42", org.jsoup.select.Elements.class, els).prev());
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|45", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|44", org.jsoup.select.Elements.class, prev).size()));
        org.junit.Assert.assertEquals("3", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|48", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|47", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|46", org.jsoup.select.Elements.class, prev).first()).text()));
        org.junit.Assert.assertEquals("9", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|51", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|50", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|49", org.jsoup.select.Elements.class, prev).last()).text()));
        org.junit.Assert.assertEquals(0, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|54", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|53", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|52", org.jsoup.select.Elements.class, els).prev("p:contains(1)")).size()));
        final org.jsoup.select.Elements prevF = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|56", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|55", org.jsoup.select.Elements.class, els).prev("p:contains(3)"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|58", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|57", org.jsoup.select.Elements.class, prevF).size()));
        org.junit.Assert.assertEquals("3", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|61", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|60", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|59", org.jsoup.select.Elements.class, prevF).first()).text()));
        org.jsoup.select.Elements prevA = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|63", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|62", org.jsoup.select.Elements.class, els).prevAll());
        org.junit.Assert.assertEquals(6, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|65", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|64", org.jsoup.select.Elements.class, prevA).size()));
        org.junit.Assert.assertEquals("3", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|68", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|67", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|66", org.jsoup.select.Elements.class, prevA).first()).text()));
        org.junit.Assert.assertEquals("7", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|71", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|70", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|69", org.jsoup.select.Elements.class, prevA).last()).text()));
        org.jsoup.select.Elements prevAF = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|73", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|72", org.jsoup.select.Elements.class, els).prevAll("p:contains(1)"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|75", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|74", org.jsoup.select.Elements.class, prevAF).size()));
        org.junit.Assert.assertEquals("1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|siblings()|78", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.select.ElementsTest|siblings()|77", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|siblings()|76", org.jsoup.select.Elements.class, prevAF).first()).text()));
    }

    @org.junit.Test
    public void eachText() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eachText()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><p>1<p>2<p>3<p>4<p>5<p>6</div><div><p>7<p>8<p>9<p>10<p>11<p>12<p></p></div>"));
        java.util.List<java.lang.String> divText = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|3", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eachText()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eachText()|1", org.jsoup.nodes.Document.class, doc).select("div")).eachText());
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|4", java.util.List.class, divText).size()));
        org.junit.Assert.assertEquals("1 2 3 4 5 6", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|6", java.util.List.class, divText).get(0)));
        org.junit.Assert.assertEquals("7 8 9 10 11 12", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|8", java.util.List.class, divText).get(1)));
        java.util.List<java.lang.String> pText = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|12", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eachText()|11", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eachText()|10", org.jsoup.nodes.Document.class, doc).select("p")).eachText());
        org.jsoup.select.Elements ps = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eachText()|14", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eachText()|13", org.jsoup.nodes.Document.class, doc).select("p"));
        org.junit.Assert.assertEquals(13, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eachText()|15", org.jsoup.select.Elements.class, ps).size()));
        org.junit.Assert.assertEquals(12, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|17", java.util.List.class, pText).size()));// not 13, as last doesn't have text

        org.junit.Assert.assertEquals("1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|19", java.util.List.class, pText).get(0)));
        org.junit.Assert.assertEquals("2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|21", java.util.List.class, pText).get(1)));
        org.junit.Assert.assertEquals("5", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|23", java.util.List.class, pText).get(4)));
        org.junit.Assert.assertEquals("7", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|25", java.util.List.class, pText).get(6)));
        org.junit.Assert.assertEquals("12", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachText()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachText()|27", java.util.List.class, pText).get(11)));
    }

    @org.junit.Test
    public void eachAttr() {
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eachAttr()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("<div><a href='/foo'>1</a><a href='http://example.com/bar'>2</a><a href=''>3</a><a>4</a>", "http://example.com"));
        java.util.List<java.lang.String> hrefAttrs = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|3", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eachAttr()|2", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eachAttr()|1", org.jsoup.nodes.Document.class, doc).select("a")).eachAttr("href"));
        org.junit.Assert.assertEquals(3, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|4", java.util.List.class, hrefAttrs).size()));
        org.junit.Assert.assertEquals("/foo", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|6", java.util.List.class, hrefAttrs).get(0)));
        org.junit.Assert.assertEquals("http://example.com/bar", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|8", java.util.List.class, hrefAttrs).get(1)));
        org.junit.Assert.assertEquals("", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|10", java.util.List.class, hrefAttrs).get(2)));
        org.junit.Assert.assertEquals(4, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eachAttr()|13", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eachAttr()|12", org.jsoup.nodes.Document.class, doc).select("a")).size()));
        java.util.List<java.lang.String> absAttrs = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|17", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.select.ElementsTest|eachAttr()|16", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.select.ElementsTest|eachAttr()|15", org.jsoup.nodes.Document.class, doc).select("a")).eachAttr("abs:href"));
        org.junit.Assert.assertEquals(3, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|18", java.util.List.class, absAttrs).size()));
        org.junit.Assert.assertEquals(3, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|20", java.util.List.class, absAttrs).size()));
        org.junit.Assert.assertEquals("http://example.com/foo", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|22", java.util.List.class, absAttrs).get(0)));
        org.junit.Assert.assertEquals("http://example.com/bar", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|25", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|24", java.util.List.class, absAttrs).get(1)));
        org.junit.Assert.assertEquals("http://example.com", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.select.ElementsTest|eachAttr()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.jsoup.select.ElementsTest|eachAttr()|26", java.util.List.class, absAttrs).get(2)));
    }
}

