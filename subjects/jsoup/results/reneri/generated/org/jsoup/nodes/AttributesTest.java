package org.jsoup.nodes;


/**
 * Tests for Attributes.
 *
 * @author Jonathan Hedley
 */
public class AttributesTest {
    @org.junit.Test
    public void html() {
        org.jsoup.nodes.Attributes a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|0", org.jsoup.nodes.Attributes.class, new org.jsoup.nodes.Attributes());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|2", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|1", org.jsoup.nodes.Attributes.class, a).put("Tot", "a&p"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|4", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|3", org.jsoup.nodes.Attributes.class, a).put("Hello", "There"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|6", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|5", org.jsoup.nodes.Attributes.class, a).put("data-name", "Jsoup"));
        org.junit.Assert.assertEquals(3, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|7", org.jsoup.nodes.Attributes.class, a).size()));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|9", org.jsoup.nodes.Attributes.class, a).hasKey("Tot")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|11", org.jsoup.nodes.Attributes.class, a).hasKey("Hello")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|13", org.jsoup.nodes.Attributes.class, a).hasKey("data-name")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|15", org.jsoup.nodes.Attributes.class, a).hasKey("tot")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|17", org.jsoup.nodes.Attributes.class, a).hasKeyIgnoreCase("tot")));
        org.junit.Assert.assertEquals("There", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|19", org.jsoup.nodes.Attributes.class, a).getIgnoreCase("hEllo")));
        java.util.Map<java.lang.String, java.lang.String> dataset = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Map<java.lang.String, java.lang.String>>observeState("org.jsoup.nodes.AttributesTest|html()|22", java.util.Map.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|21", org.jsoup.nodes.Attributes.class, a).dataset());
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Map<java.lang.String, java.lang.String>>observeState("org.jsoup.nodes.AttributesTest|html()|23", java.util.Map.class, dataset).size()));
        org.junit.Assert.assertEquals("Jsoup", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Map<java.lang.String, java.lang.String>>observeState("org.jsoup.nodes.AttributesTest|html()|25", java.util.Map.class, dataset).get("name")));
        org.junit.Assert.assertEquals("", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|27", org.jsoup.nodes.Attributes.class, a).get("tot")));
        org.junit.Assert.assertEquals("a&p", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|30", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|29", org.jsoup.nodes.Attributes.class, a).get("Tot")));
        org.junit.Assert.assertEquals("a&p", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|32", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|31", org.jsoup.nodes.Attributes.class, a).getIgnoreCase("tot")));
        org.junit.Assert.assertEquals(" Tot=\"a&amp;p\" Hello=\"There\" data-name=\"Jsoup\"", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|34", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|33", org.jsoup.nodes.Attributes.class, a).html()));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|36", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|35", org.jsoup.nodes.Attributes.class, a).html()), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|html()|38", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|html()|37", org.jsoup.nodes.Attributes.class, a).toString()));
    }

    @org.junit.Test
    public void testIteratorRemovable() {
        org.jsoup.nodes.Attributes a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|0", org.jsoup.nodes.Attributes.class, new org.jsoup.nodes.Attributes());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|2", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|1", org.jsoup.nodes.Attributes.class, a).put("Tot", "a&p"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|4", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|3", org.jsoup.nodes.Attributes.class, a).put("Hello", "There"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|6", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|5", org.jsoup.nodes.Attributes.class, a).put("data-name", "Jsoup"));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|7", org.jsoup.nodes.Attributes.class, a).hasKey("Tot")));
        java.util.Iterator<org.jsoup.nodes.Attribute> iterator = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|10", java.util.Iterator.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|9", org.jsoup.nodes.Attributes.class, a).iterator());
        org.jsoup.nodes.Attribute attr = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|12", org.jsoup.nodes.Attribute.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|11", java.util.Iterator.class, iterator).next());
        org.junit.Assert.assertEquals("Tot", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|13", org.jsoup.nodes.Attribute.class, attr).getKey()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|15", java.util.Iterator.class, iterator).remove();
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|16", org.jsoup.nodes.Attributes.class, a).size()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|19", org.jsoup.nodes.Attribute.class, (attr = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|18", java.util.Iterator.class, iterator).next()));
        org.junit.Assert.assertEquals("Hello", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|20", org.jsoup.nodes.Attribute.class, attr).getKey()));
        org.junit.Assert.assertEquals("There", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|22", org.jsoup.nodes.Attribute.class, attr).getValue()));
        // make sure that's flowing to the underlying attributes object
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|25", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|24", org.jsoup.nodes.Attributes.class, a).size()));
        org.junit.Assert.assertEquals("There", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|26", org.jsoup.nodes.Attributes.class, a).get("Hello")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|29", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorRemovable()|28", org.jsoup.nodes.Attributes.class, a).hasKey("Tot")));
    }

    @org.junit.Test
    public void testIteratorUpdateable() {
        org.jsoup.nodes.Attributes a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|0", org.jsoup.nodes.Attributes.class, new org.jsoup.nodes.Attributes());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|2", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|1", org.jsoup.nodes.Attributes.class, a).put("Tot", "a&p"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|4", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|3", org.jsoup.nodes.Attributes.class, a).put("Hello", "There"));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|5", org.jsoup.nodes.Attributes.class, a).hasKey("Foo")));
        java.util.Iterator<org.jsoup.nodes.Attribute> iterator = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|8", java.util.Iterator.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|7", org.jsoup.nodes.Attributes.class, a).iterator());
        org.jsoup.nodes.Attribute attr = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|10", org.jsoup.nodes.Attribute.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|9", java.util.Iterator.class, iterator).next());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|11", org.jsoup.nodes.Attribute.class, attr).setKey("Foo");
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|13", org.jsoup.nodes.Attribute.class, (attr = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|12", java.util.Iterator.class, iterator).next()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|14", org.jsoup.nodes.Attribute.class, attr).setKey("Bar");
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|15", org.jsoup.nodes.Attribute.class, attr).setValue("Qux"));
        org.junit.Assert.assertEquals("a&p", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|17", org.jsoup.nodes.Attributes.class, a).get("Foo")));
        org.junit.Assert.assertEquals("Qux", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|19", org.jsoup.nodes.Attributes.class, a).get("Bar")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|21", org.jsoup.nodes.Attributes.class, a).hasKey("Tot")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorUpdateable()|23", org.jsoup.nodes.Attributes.class, a).hasKey("Hello")));
    }

    @org.junit.Test
    public void testIteratorHasNext() {
        org.jsoup.nodes.Attributes a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|0", org.jsoup.nodes.Attributes.class, new org.jsoup.nodes.Attributes());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|2", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|1", org.jsoup.nodes.Attributes.class, a).put("Tot", "1"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|4", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|3", org.jsoup.nodes.Attributes.class, a).put("Hello", "2"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|6", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|5", org.jsoup.nodes.Attributes.class, a).put("data-name", "3"));
        int seen = 0;
        for (org.jsoup.nodes.Attribute attribute : eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|7", org.jsoup.nodes.Attributes.class, a)) {
            seen++;
            org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|9", java.lang.String.valueOf(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|8", seen))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|10", org.jsoup.nodes.Attribute.class, attribute).getValue()));
        }
        org.junit.Assert.assertEquals(3, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorHasNext()|12", seen));
    }

    @org.junit.Test
    public void testIterator() {
        org.jsoup.nodes.Attributes a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIterator()|0", org.jsoup.nodes.Attributes.class, new org.jsoup.nodes.Attributes());
        java.lang.String[][] datas = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[][]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|4", java.lang.String[][].class, new java.lang.String[][]{ eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|1", java.lang.String[].class, new java.lang.String[]{ "Tot", "raul" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|2", java.lang.String[].class, new java.lang.String[]{ "Hello", "pismuth" }), eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|3", java.lang.String[].class, new java.lang.String[]{ "data-name", "Jsoup" }) });
        for (java.lang.String[] atts : eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[][]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|5", java.lang.String[][].class, datas)) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIterator()|11", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIterator()|6", org.jsoup.nodes.Attributes.class, a).put(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|7", java.lang.String[].class, atts)[0]), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|9", java.lang.String[].class, atts)[1])));
        }
        java.util.Iterator<org.jsoup.nodes.Attribute> iterator = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIterator()|13", java.util.Iterator.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIterator()|12", org.jsoup.nodes.Attributes.class, a).iterator());
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIterator()|14", java.util.Iterator.class, iterator).hasNext()));
        int i = 0;
        for (org.jsoup.nodes.Attribute attribute : eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIterator()|16", org.jsoup.nodes.Attributes.class, a)) {
            org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|19", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[][]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|17", java.lang.String[][].class, datas)[eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|18", i)])[0]), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIterator()|21", org.jsoup.nodes.Attribute.class, attribute).getKey()));
            org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|25", java.lang.String[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[][]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|23", java.lang.String[][].class, datas)[eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|24", i)])[1]), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testIterator()|27", org.jsoup.nodes.Attribute.class, attribute).getValue()));
            i++;
        }
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|30", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[][]>observeState("org.jsoup.nodes.AttributesTest|testIterator()|29", java.lang.String[][].class, datas).length), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIterator()|31", i));
    }

    @org.junit.Test
    public void testIteratorEmpty() {
        org.jsoup.nodes.Attributes a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorEmpty()|0", org.jsoup.nodes.Attributes.class, new org.jsoup.nodes.Attributes());
        java.util.Iterator<org.jsoup.nodes.Attribute> iterator = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIteratorEmpty()|2", java.util.Iterator.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testIteratorEmpty()|1", org.jsoup.nodes.Attributes.class, a).iterator());
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testIteratorEmpty()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Iterator<org.jsoup.nodes.Attribute>>observeState("org.jsoup.nodes.AttributesTest|testIteratorEmpty()|3", java.util.Iterator.class, iterator).hasNext()));
    }

    @org.junit.Test
    public void removeCaseSensitive() {
        org.jsoup.nodes.Attributes a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|0", org.jsoup.nodes.Attributes.class, new org.jsoup.nodes.Attributes());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|2", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|1", org.jsoup.nodes.Attributes.class, a).put("Tot", "a&p"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|4", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|3", org.jsoup.nodes.Attributes.class, a).put("tot", "one"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|6", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|5", org.jsoup.nodes.Attributes.class, a).put("Hello", "There"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|8", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|7", org.jsoup.nodes.Attributes.class, a).put("hello", "There"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|10", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|9", org.jsoup.nodes.Attributes.class, a).put("data-name", "Jsoup"));
        org.junit.Assert.assertEquals(5, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|11", org.jsoup.nodes.Attributes.class, a).size()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|13", org.jsoup.nodes.Attributes.class, a).remove("Tot");
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|14", org.jsoup.nodes.Attributes.class, a).remove("Hello");
        org.junit.Assert.assertEquals(3, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|15", org.jsoup.nodes.Attributes.class, a).size()));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|17", org.jsoup.nodes.Attributes.class, a).hasKey("tot")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|removeCaseSensitive()|19", org.jsoup.nodes.Attributes.class, a).hasKey("Tot")));
    }

    @org.junit.Test
    public void testSetKeyConsistency() {
        org.jsoup.nodes.Attributes a = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testSetKeyConsistency()|0", org.jsoup.nodes.Attributes.class, new org.jsoup.nodes.Attributes());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testSetKeyConsistency()|2", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testSetKeyConsistency()|1", org.jsoup.nodes.Attributes.class, a).put("a", "a"));
        for (org.jsoup.nodes.Attribute at : eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testSetKeyConsistency()|3", org.jsoup.nodes.Attributes.class, a)) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.nodes.AttributesTest|testSetKeyConsistency()|4", org.jsoup.nodes.Attribute.class, at).setKey("b");
        }
        org.junit.Assert.assertFalse("Attribute 'a' not correctly removed", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testSetKeyConsistency()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testSetKeyConsistency()|5", org.jsoup.nodes.Attributes.class, a).hasKey("a")));
        org.junit.Assert.assertTrue("Attribute 'b' not present after renaming", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.AttributesTest|testSetKeyConsistency()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.nodes.AttributesTest|testSetKeyConsistency()|7", org.jsoup.nodes.Attributes.class, a).hasKey("b")));
    }
}

