package org.jsoup.nodes;


public class EntitiesTest {
    @org.junit.Test
    public void escape() {
        java.lang.String text = "Hello &<> Å å π 新 there ¾ © »";
        java.lang.String escapedAscii = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|5", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|0", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|4", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|2", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|1", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("ascii")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escape()|3", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.base)))));
        java.lang.String escapedAsciiFull = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|11", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|6", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|10", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|8", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|7", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("ascii")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escape()|9", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.extended)))));
        java.lang.String escapedAsciiXhtml = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|17", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|12", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|16", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|14", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|13", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("ascii")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escape()|15", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml)))));
        java.lang.String escapedUtfFull = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|23", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|18", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|22", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|20", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|19", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("UTF-8")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escape()|21", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.extended)))));
        java.lang.String escapedUtfMin = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|29", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|24", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|28", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|26", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escape()|25", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("UTF-8")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escape()|27", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml)))));
        org.junit.Assert.assertEquals("Hello &amp;&lt;&gt; &Aring; &aring; &#x3c0; &#x65b0; there &frac34; &copy; &raquo;", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|30", escapedAscii));
        org.junit.Assert.assertEquals("Hello &amp;&lt;&gt; &angst; &aring; &pi; &#x65b0; there &frac34; &copy; &raquo;", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|31", escapedAsciiFull));
        org.junit.Assert.assertEquals("Hello &amp;&lt;&gt; &#xc5; &#xe5; &#x3c0; &#x65b0; there &#xbe; &#xa9; &#xbb;", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|32", escapedAsciiXhtml));
        org.junit.Assert.assertEquals("Hello &amp;&lt;&gt; Å å π 新 there ¾ © »", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|33", escapedUtfFull));
        org.junit.Assert.assertEquals("Hello &amp;&lt;&gt; Å å π 新 there ¾ © »", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|34", escapedUtfMin));
        // odd that it's defined as aring in base but angst in full
        // round trip
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|35", text), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|37", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|36", escapedAscii))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|38", text), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|40", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|39", escapedAsciiFull))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|41", text), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|43", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|42", escapedAsciiXhtml))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|44", text), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|46", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|45", escapedUtfFull))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|47", text), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|49", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escape()|48", escapedUtfMin))));
    }

    @org.junit.Test
    public void escapedSupplemtary() {
        java.lang.String text = "\ud835\udd59";
        java.lang.String escapedAscii = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|5", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|0", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|4", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|2", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|1", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("ascii")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|3", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.base)))));
        org.junit.Assert.assertEquals("&#x1d559;", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|6", escapedAscii));
        java.lang.String escapedAsciiFull = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|12", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|7", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|11", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|9", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|8", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("ascii")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|10", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.extended)))));
        org.junit.Assert.assertEquals("&hopf;", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|13", escapedAsciiFull));
        java.lang.String escapedUtf = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|19", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|14", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|18", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|16", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|15", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("UTF-8")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|17", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.extended)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|20", text), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapedSupplemtary()|21", escapedUtf));
    }

    @org.junit.Test
    public void unescapeMultiChars() {
        java.lang.String text = "&NestedGreaterGreater; &nGg; &nGt; &nGtv; &Gt; &gg;";// gg is not combo, but 8811 could conflict with NestedGreaterGreater or others

        java.lang.String un = "≫ ⋙̸ ≫⃒ ≫̸ ≫ ≫";
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|0", un), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|2", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|1", text))));
        java.lang.String escaped = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|8", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|3", un), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|7", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|5", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|4", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("ascii")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|6", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.extended)))));
        org.junit.Assert.assertEquals("&Gt; &Gg;&#x338; &Gt;&#x20d2; &Gt;&#x338; &Gt; &Gt;", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|9", escaped));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|10", un), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|12", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescapeMultiChars()|11", escaped))));
    }

    @org.junit.Test
    public void xhtml() {
        java.lang.String text = "&amp; &gt; &lt; &quot;";
        org.junit.Assert.assertEquals(38, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|xhtml()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|xhtml()|0", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml).codepointForName("amp")));
        org.junit.Assert.assertEquals(62, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|xhtml()|3", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|xhtml()|2", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml).codepointForName("gt")));
        org.junit.Assert.assertEquals(60, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|xhtml()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|xhtml()|4", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml).codepointForName("lt")));
        org.junit.Assert.assertEquals(34, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|xhtml()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|xhtml()|6", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml).codepointForName("quot")));
        org.junit.Assert.assertEquals("amp", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|xhtml()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|xhtml()|8", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml).nameForCodepoint(38)));
        org.junit.Assert.assertEquals("gt", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|xhtml()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|xhtml()|10", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml).nameForCodepoint(62)));
        org.junit.Assert.assertEquals("lt", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|xhtml()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|xhtml()|12", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml).nameForCodepoint(60)));
        org.junit.Assert.assertEquals("quot", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|xhtml()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|xhtml()|14", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml).nameForCodepoint(34)));
    }

    @org.junit.Test
    public void getByName() {
        org.junit.Assert.assertEquals("≫⃒", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|getByName()|0", org.jsoup.nodes.Entities.getByName("nGt")));
        org.junit.Assert.assertEquals("fj", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|getByName()|1", org.jsoup.nodes.Entities.getByName("fjlig")));
        org.junit.Assert.assertEquals("≫", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|getByName()|2", org.jsoup.nodes.Entities.getByName("gg")));
        org.junit.Assert.assertEquals("©", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|getByName()|3", org.jsoup.nodes.Entities.getByName("copy")));
    }

    @org.junit.Test
    public void escapeSupplementaryCharacter() {
        java.lang.String text = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|1", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|0", char[].class, java.lang.Character.toChars(135361))));
        java.lang.String escapedAscii = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|7", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|2", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|6", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|4", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|3", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("ascii")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|5", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.base)))));
        org.junit.Assert.assertEquals("&#x210c1;", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|8", escapedAscii));
        java.lang.String escapedUtf = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|14", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|9", text), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|13", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|11", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|10", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("UTF-8")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|12", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.base)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|15", text), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapeSupplementaryCharacter()|16", escapedUtf));
    }

    @org.junit.Test
    public void notMissingMultis() {
        java.lang.String text = "&nparsl;";
        java.lang.String un = "\u2afd\u20e5";
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|notMissingMultis()|0", un), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|notMissingMultis()|2", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|notMissingMultis()|1", text))));
    }

    @org.junit.Test
    public void notMissingSupplementals() {
        java.lang.String text = "&npolint; &qfr;";
        java.lang.String un = "\u2a14 \ud835\udd2e";// 𝔮

        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|notMissingSupplementals()|0", un), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|notMissingSupplementals()|2", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|notMissingSupplementals()|1", text))));
    }

    @org.junit.Test
    public void unescape() {
        java.lang.String text = "Hello &AElig; &amp;&LT&gt; &reg &angst; &angst &#960; &#960 &#x65B0; there &! &frac34; &copy; &COPY;";
        org.junit.Assert.assertEquals("Hello Æ &<> ® Å &angst π π 新 there &! ¾ © ©", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescape()|1", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescape()|0", text))));
        org.junit.Assert.assertEquals("&0987654321; &unknown", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|unescape()|2", org.jsoup.nodes.Entities.unescape("&0987654321; &unknown")));
    }

    @org.junit.Test
    public void strictUnescape() {
        // for attributes, enforce strict unescaping (must look like &#xxx; , not just &#xxx)
        java.lang.String text = "Hello &amp= &amp;";
        org.junit.Assert.assertEquals("Hello &amp= &", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|strictUnescape()|1", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|strictUnescape()|0", text), true)));
        org.junit.Assert.assertEquals("Hello &= &", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|strictUnescape()|3", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|strictUnescape()|2", text))));
        org.junit.Assert.assertEquals("Hello &= &", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|strictUnescape()|5", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|strictUnescape()|4", text), false)));
    }

    @org.junit.Test
    public void caseSensitive() {
        java.lang.String unescaped = "Ü ü & &";
        org.junit.Assert.assertEquals("&Uuml; &uuml; &amp; &amp;", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|caseSensitive()|5", org.jsoup.nodes.Entities.escape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|caseSensitive()|0", unescaped), eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|caseSensitive()|4", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|caseSensitive()|2", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|caseSensitive()|1", org.jsoup.nodes.Document.OutputSettings.class, new org.jsoup.nodes.Document.OutputSettings()).charset("ascii")).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|caseSensitive()|3", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.extended))))));
        java.lang.String escaped = "&Uuml; &uuml; &amp; &AMP";
        org.junit.Assert.assertEquals("Ü ü & &", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|caseSensitive()|7", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|caseSensitive()|6", escaped))));
    }

    @org.junit.Test
    public void quoteReplacements() {
        java.lang.String escaped = "&#92; &#36;";
        java.lang.String unescaped = "\\ $";
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|quoteReplacements()|0", unescaped), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|quoteReplacements()|2", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|quoteReplacements()|1", escaped))));
    }

    @org.junit.Test
    public void letterDigitEntities() {
        java.lang.String html = "<p>&sup1;&sup2;&sup3;&frac14;&frac12;&frac34;</p>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|0", html)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|4", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|3", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|2", org.jsoup.nodes.Document.class, doc).outputSettings()).charset("ascii"));
        org.jsoup.nodes.Element p = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|7", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|5", org.jsoup.nodes.Document.class, doc).select("p")).first());
        org.junit.Assert.assertEquals("&sup1;&sup2;&sup3;&frac14;&frac12;&frac34;", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|8", org.jsoup.nodes.Element.class, p).html()));
        org.junit.Assert.assertEquals("¹²³¼½¾", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|10", org.jsoup.nodes.Element.class, p).text()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|14", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|13", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|12", org.jsoup.nodes.Document.class, doc).outputSettings()).charset("UTF-8"));
        org.junit.Assert.assertEquals("¹²³¼½¾", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.nodes.EntitiesTest|letterDigitEntities()|15", org.jsoup.nodes.Element.class, p).html()));
    }

    @org.junit.Test
    public void noSpuriousDecodes() {
        java.lang.String string = "http://www.foo.com?a=1&num_rooms=1&children=0&int=VA&b=2";
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|noSpuriousDecodes()|0", string), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|noSpuriousDecodes()|2", org.jsoup.nodes.Entities.unescape(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|noSpuriousDecodes()|1", string))));
    }

    @org.junit.Test
    public void escapesGtInXmlAttributesButNotInHtml() {
        // https://github.com/jhy/jsoup/issues/528 - < is OK in HTML attribute values, but not in XML
        java.lang.String docHtml = "<a title='<p>One</p>'>One</a>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|0", docHtml)));
        org.jsoup.nodes.Element element = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|4", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|2", org.jsoup.nodes.Document.class, doc).select("a")).first());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|8", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|6", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|5", org.jsoup.nodes.Document.class, doc).outputSettings()).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|7", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.base)));
        org.junit.Assert.assertEquals("<a title=\"<p>One</p>\">One</a>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|9", org.jsoup.nodes.Element.class, element).outerHtml()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|14", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document.OutputSettings>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|12", org.jsoup.nodes.Document.OutputSettings.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|11", org.jsoup.nodes.Document.class, doc).outputSettings()).escapeMode(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Entities.EscapeMode>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|13", org.jsoup.nodes.Entities.EscapeMode.class, org.jsoup.nodes.Entities.EscapeMode.xhtml)));
        org.junit.Assert.assertEquals("<a title=\"&lt;p>One&lt;/p>\">One</a>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.nodes.EntitiesTest|escapesGtInXmlAttributesButNotInHtml()|15", org.jsoup.nodes.Element.class, element).outerHtml()));
    }
}

