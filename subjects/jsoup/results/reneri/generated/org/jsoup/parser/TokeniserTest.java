package org.jsoup.parser;


public class TokeniserTest {
    @org.junit.Test
    public void bufferUpInAttributeVal() {
        // https://github.com/jhy/jsoup/issues/967
        // check each double, singlem, unquoted impls
        java.lang.String[] quotes = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|0", java.lang.String[].class, new java.lang.String[]{ "\"", "'", "" });
        for (java.lang.String quote : eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|1", java.lang.String[].class, quotes)) {
            java.lang.String preamble = "<img src=" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|2", quote));
            java.lang.String tail = "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb";
            java.lang.StringBuilder sb = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|4", java.lang.StringBuilder.class, new java.lang.StringBuilder(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|3", preamble)));
            final int charsToFillBuffer = (org.jsoup.parser.CharacterReader.maxBufferLen) - (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|6", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|5", preamble).length()));
            for (int i = 0; (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|7", i)) < (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|8", charsToFillBuffer)); i++) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|10", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|9", java.lang.StringBuilder.class, sb).append('a'));
            }
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|12", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|11", java.lang.StringBuilder.class, sb).append('X')// First character to cross character buffer boundary
            );
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|16", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|13", java.lang.StringBuilder.class, sb).append((((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|14", tail)) + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|15", quote))) + ">\n")));
            java.lang.String html = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|17", java.lang.StringBuilder.class, sb).toString());
            org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|20", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|19", html)));
            java.lang.String src = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|22", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|21", org.jsoup.nodes.Document.class, doc).select("img")).attr("src"));
            org.junit.Assert.assertTrue(("Handles for quote " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|24", quote))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|26", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|25", src).contains("X")));
            org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|29", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|27", src).contains(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|bufferUpInAttributeVal()|28", tail))));
        }
    }

    @org.junit.Test
    public void handleSuperLargeTagNames() {
        // unlikely, but valid. so who knows.
        java.lang.StringBuilder sb = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|0", java.lang.StringBuilder.class, new java.lang.StringBuilder(org.jsoup.parser.CharacterReader.maxBufferLen));
        do {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|4", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|3", java.lang.StringBuilder.class, sb).append("LargeTagName"));
        } while ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|2", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|1", java.lang.StringBuilder.class, sb).length())) < (org.jsoup.parser.CharacterReader.maxBufferLen) );
        java.lang.String tag = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|5", java.lang.StringBuilder.class, sb).toString());
        java.lang.String html = ((("<" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|7", tag))) + ">One</") + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|8", tag))) + ">";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|13", org.jsoup.nodes.Document.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.Parser>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|11", org.jsoup.parser.Parser.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.Parser>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|9", org.jsoup.parser.Parser.class, org.jsoup.parser.Parser.htmlParser()).settings(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.ParseSettings>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|10", org.jsoup.parser.ParseSettings.class, org.jsoup.parser.ParseSettings.preserveCase))).parseInput(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|12", html), ""));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|16", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|14", org.jsoup.nodes.Document.class, doc).select(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|15", tag)));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|17", org.jsoup.select.Elements.class, els).size()));
        org.jsoup.nodes.Element el = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|20", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|19", org.jsoup.select.Elements.class, els).first());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|21", org.jsoup.nodes.Element.class, el));
        org.junit.Assert.assertEquals("One", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|22", org.jsoup.nodes.Element.class, el).text()));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|24", tag), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeTagNames()|25", org.jsoup.nodes.Element.class, el).tagName()));
    }

    @org.junit.Test
    public void handleSuperLargeAttributeName() {
        java.lang.StringBuilder sb = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|0", java.lang.StringBuilder.class, new java.lang.StringBuilder(org.jsoup.parser.CharacterReader.maxBufferLen));
        do {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|4", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|3", java.lang.StringBuilder.class, sb).append("LargAttributeName"));
        } while ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|2", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|1", java.lang.StringBuilder.class, sb).length())) < (org.jsoup.parser.CharacterReader.maxBufferLen) );
        java.lang.String attrName = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|5", java.lang.StringBuilder.class, sb).toString());
        java.lang.String html = ("<p " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|7", attrName))) + "=foo>One</p>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|9", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|8", html)));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|12", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|10", org.jsoup.nodes.Document.class, doc).getElementsByAttribute(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|11", attrName)));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|13", org.jsoup.select.Elements.class, els).size()));
        org.jsoup.nodes.Element el = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|16", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|15", org.jsoup.select.Elements.class, els).first());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|17", org.jsoup.nodes.Element.class, el));
        org.junit.Assert.assertEquals("One", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|18", org.jsoup.nodes.Element.class, el).text()));
        org.jsoup.nodes.Attribute attribute = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|23", org.jsoup.nodes.Attribute.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.jsoup.nodes.Attribute>>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|22", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attributes>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|21", org.jsoup.nodes.Attributes.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|20", org.jsoup.nodes.Element.class, el).attributes()).asList()).get(0));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|25", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|24", attrName).toLowerCase()), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|26", org.jsoup.nodes.Attribute.class, attribute).getKey()));
        org.junit.Assert.assertEquals("foo", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|29", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Attribute>observeState("org.jsoup.parser.TokeniserTest|handleSuperLargeAttributeName()|28", org.jsoup.nodes.Attribute.class, attribute).getValue()));
    }

    @org.junit.Test
    public void handleLargeText() {
        java.lang.StringBuilder sb = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|0", java.lang.StringBuilder.class, new java.lang.StringBuilder(org.jsoup.parser.CharacterReader.maxBufferLen));
        do {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|4", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|3", java.lang.StringBuilder.class, sb).append("A Large Amount of Text"));
        } while ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeText()|2", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|1", java.lang.StringBuilder.class, sb).length())) < (org.jsoup.parser.CharacterReader.maxBufferLen) );
        java.lang.String text = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeText()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|5", java.lang.StringBuilder.class, sb).toString());
        java.lang.String html = ("<p>" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeText()|7", text))) + "</p>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|9", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeText()|8", html)));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|11", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|10", org.jsoup.nodes.Document.class, doc).select("p"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeText()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|12", org.jsoup.select.Elements.class, els).size()));
        org.jsoup.nodes.Element el = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|15", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|14", org.jsoup.select.Elements.class, els).first());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|16", org.jsoup.nodes.Element.class, el));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeText()|17", text), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeText()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeText()|18", org.jsoup.nodes.Element.class, el).text()));
    }

    @org.junit.Test
    public void handleLargeComment() {
        java.lang.StringBuilder sb = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|0", java.lang.StringBuilder.class, new java.lang.StringBuilder(org.jsoup.parser.CharacterReader.maxBufferLen));
        do {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|4", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|3", java.lang.StringBuilder.class, sb).append("Quite a comment "));
        } while ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeComment()|2", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|1", java.lang.StringBuilder.class, sb).length())) < (org.jsoup.parser.CharacterReader.maxBufferLen) );
        java.lang.String comment = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeComment()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|5", java.lang.StringBuilder.class, sb).toString());
        java.lang.String html = ("<p><!-- " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeComment()|7", comment))) + " --></p>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|9", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeComment()|8", html)));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|11", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|10", org.jsoup.nodes.Document.class, doc).select("p"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeComment()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|12", org.jsoup.select.Elements.class, els).size()));
        org.jsoup.nodes.Element el = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|15", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|14", org.jsoup.select.Elements.class, els).first());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|16", org.jsoup.nodes.Element.class, el));
        org.jsoup.nodes.Comment child = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Comment>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|18", org.jsoup.nodes.Comment.class, ((org.jsoup.nodes.Comment) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|17", org.jsoup.nodes.Element.class, el).childNode(0))));
        org.junit.Assert.assertEquals(((" " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeComment()|19", comment))) + " "), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeComment()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Comment>observeState("org.jsoup.parser.TokeniserTest|handleLargeComment()|20", org.jsoup.nodes.Comment.class, child).getData()));
    }

    @org.junit.Test
    public void handleLargeCdata() {
        java.lang.StringBuilder sb = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|0", java.lang.StringBuilder.class, new java.lang.StringBuilder(org.jsoup.parser.CharacterReader.maxBufferLen));
        do {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|4", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|3", java.lang.StringBuilder.class, sb).append("Quite a lot of CDATA <><><><>"));
        } while ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeCdata()|2", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|1", java.lang.StringBuilder.class, sb).length())) < (org.jsoup.parser.CharacterReader.maxBufferLen) );
        java.lang.String cdata = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeCdata()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|5", java.lang.StringBuilder.class, sb).toString());
        java.lang.String html = ("<p><![CDATA[" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeCdata()|7", cdata))) + "]]></p>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|9", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeCdata()|8", html)));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|11", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|10", org.jsoup.nodes.Document.class, doc).select("p"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeCdata()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|12", org.jsoup.select.Elements.class, els).size()));
        org.jsoup.nodes.Element el = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|15", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|14", org.jsoup.select.Elements.class, els).first());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|16", org.jsoup.nodes.Element.class, el));
        org.jsoup.nodes.TextNode child = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.TextNode>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|18", org.jsoup.nodes.TextNode.class, ((org.jsoup.nodes.TextNode) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|17", org.jsoup.nodes.Element.class, el).childNode(0))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeCdata()|19", cdata), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeCdata()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|20", org.jsoup.nodes.Element.class, el).text()));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeCdata()|22", cdata), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeCdata()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.TextNode>observeState("org.jsoup.parser.TokeniserTest|handleLargeCdata()|23", org.jsoup.nodes.TextNode.class, child).getWholeText()));
    }

    @org.junit.Test
    public void handleLargeTitle() {
        java.lang.StringBuilder sb = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|0", java.lang.StringBuilder.class, new java.lang.StringBuilder(org.jsoup.parser.CharacterReader.maxBufferLen));
        do {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|4", java.lang.StringBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|3", java.lang.StringBuilder.class, sb).append("Quite a long title"));
        } while ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|2", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|1", java.lang.StringBuilder.class, sb).length())) < (org.jsoup.parser.CharacterReader.maxBufferLen) );
        java.lang.String title = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.StringBuilder>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|5", java.lang.StringBuilder.class, sb).toString());
        java.lang.String html = ("<title>" + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|7", title))) + "</title>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|9", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|8", html)));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|11", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|10", org.jsoup.nodes.Document.class, doc).select("title"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|12", org.jsoup.select.Elements.class, els).size()));
        org.jsoup.nodes.Element el = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|15", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|14", org.jsoup.select.Elements.class, els).first());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|16", org.jsoup.nodes.Element.class, el));
        org.jsoup.nodes.TextNode child = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.TextNode>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|18", org.jsoup.nodes.TextNode.class, ((org.jsoup.nodes.TextNode) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|17", org.jsoup.nodes.Element.class, el).childNode(0))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|19", title), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|20", org.jsoup.nodes.Element.class, el).text()));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|22", title), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.TextNode>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|23", org.jsoup.nodes.TextNode.class, child).getWholeText()));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|25", title), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|handleLargeTitle()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|handleLargeTitle()|26", org.jsoup.nodes.Document.class, doc).title()));
    }

    @org.junit.Test
    public void cp1252Entities() {
        org.junit.Assert.assertEquals("\u20ac", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252Entities()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|cp1252Entities()|0", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("&#0128;")).text()));
        org.junit.Assert.assertEquals("\u201a", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252Entities()|3", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|cp1252Entities()|2", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("&#0130;")).text()));
        org.junit.Assert.assertEquals("\u20ac", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252Entities()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|cp1252Entities()|4", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse("&#x80;")).text()));
    }

    @org.junit.Test
    public void cp1252EntitiesProduceError() {
        org.jsoup.parser.Parser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.Parser>observeState("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|1", org.jsoup.parser.Parser.class, new org.jsoup.parser.Parser(eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.HtmlTreeBuilder>observeState("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|0", org.jsoup.parser.HtmlTreeBuilder.class, new org.jsoup.parser.HtmlTreeBuilder())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.Parser>observeState("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|3", org.jsoup.parser.Parser.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.Parser>observeState("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|2", org.jsoup.parser.Parser.class, parser).setTrackErrors(10));
        org.junit.Assert.assertEquals("\u20ac", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|5", org.jsoup.nodes.Document.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.Parser>observeState("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|4", org.jsoup.parser.Parser.class, parser).parseInput("<html><body>&#0128;</body></html>", "")).text()));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.ParseErrorList>observeState("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|8", org.jsoup.parser.ParseErrorList.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.parser.Parser>observeState("org.jsoup.parser.TokeniserTest|cp1252EntitiesProduceError()|7", org.jsoup.parser.Parser.class, parser).getErrors()).size()));
    }

    @org.junit.Test
    public void cp1252SubstitutionTable() throws java.io.UnsupportedEncodingException {
        for (int i = 0; (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|0", i)) < (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|2", eu.stamp_project.reneri.instrumentation.StateObserver.<int[]>observeState("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|1", int[].class, org.jsoup.parser.Tokeniser.win1252Extensions).length)); i++) {
            java.lang.String s = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|5", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|4", byte[].class, new byte[]{ ((byte) ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|3", i)) + (org.jsoup.parser.Tokeniser.win1252ExtensionsStart))) }), "Windows-1252"));
            org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|7", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|6", s).length()));
            // some of these characters are illegal
            if ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|9", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|8", s).charAt(0))) == '\ufffd') {
                continue;
            }
            org.junit.Assert.assertEquals(("At: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|10", i))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|12", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|11", s).charAt(0)), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<int[]>observeState("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|13", int[].class, org.jsoup.parser.Tokeniser.win1252Extensions)[eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserTest|cp1252SubstitutionTable()|14", i)]));
        }
    }
}

