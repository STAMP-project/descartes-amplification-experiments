package org.jsoup.parser;


public class TokeniserStateTest {
    final char[] whiteSpace = new char[]{ '\t', '\n', '\r', '\f', ' ' };

    final char[] quote = new char[]{ '\'', '"' };

    @org.junit.Test
    public void ensureSearchArraysAreSorted() {
        char[][] arrays = eu.stamp_project.reneri.instrumentation.StateObserver.<char[][]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|4", char[][].class, new char[][]{ eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|0", char[].class, org.jsoup.parser.TokeniserState.attributeSingleValueCharsSorted), eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|1", char[].class, org.jsoup.parser.TokeniserState.attributeDoubleValueCharsSorted), eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|2", char[].class, org.jsoup.parser.TokeniserState.attributeNameCharsSorted), eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|3", char[].class, org.jsoup.parser.TokeniserState.attributeValueUnquoted) });
        for (char[] array : eu.stamp_project.reneri.instrumentation.StateObserver.<char[][]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|5", char[][].class, arrays)) {
            char[] copy = eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|9", char[].class, java.util.Arrays.copyOf(eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|6", char[].class, array), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|7", char[].class, array).length)));
            java.util.Arrays.sort(eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|10", char[].class, array));
            org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|11", char[].class, array), eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|ensureSearchArraysAreSorted()|12", char[].class, copy));
        }
    }

    @org.junit.Test
    public void testCharacterReferenceInRcdata() {
        java.lang.String body = "<textarea>You&I</textarea>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testCharacterReferenceInRcdata()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testCharacterReferenceInRcdata()|0", body)));
        org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testCharacterReferenceInRcdata()|3", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testCharacterReferenceInRcdata()|2", org.jsoup.nodes.Document.class, doc).select("textarea"));
        org.junit.Assert.assertEquals("You&I", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testCharacterReferenceInRcdata()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testCharacterReferenceInRcdata()|4", org.jsoup.select.Elements.class, els).text()));
    }

    @org.junit.Test
    public void testBeforeTagName() {
        for (char c : eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|testBeforeTagName()|0", char[].class, whiteSpace)) {
            java.lang.String body = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testBeforeTagName()|2", java.lang.String.format("<div%c>test</div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testBeforeTagName()|1", c)));
            org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testBeforeTagName()|4", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testBeforeTagName()|3", body)));
            org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testBeforeTagName()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testBeforeTagName()|5", org.jsoup.nodes.Document.class, doc).select("div"));
            org.junit.Assert.assertEquals("test", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testBeforeTagName()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testBeforeTagName()|7", org.jsoup.select.Elements.class, els).text()));
        }
    }

    @org.junit.Test
    public void testEndTagOpen() {
        java.lang.String body;
        org.jsoup.nodes.Document doc;
        org.jsoup.select.Elements els;
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|0", (body = "<div>hello world</"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|2", org.jsoup.nodes.Document.class, (doc = org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|1", body))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|4", org.jsoup.select.Elements.class, (els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|3", org.jsoup.nodes.Document.class, doc).select("div")));
        org.junit.Assert.assertEquals("hello world</", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|5", org.jsoup.select.Elements.class, els).text()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|7", (body = "<div>hello world</div>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|9", org.jsoup.nodes.Document.class, (doc = org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|8", body))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|11", org.jsoup.select.Elements.class, (els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|10", org.jsoup.nodes.Document.class, doc).select("div")));
        org.junit.Assert.assertEquals("hello world", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|12", org.jsoup.select.Elements.class, els).text()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|14", (body = "<div>fake</></div>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|16", org.jsoup.nodes.Document.class, (doc = org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|15", body))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|18", org.jsoup.select.Elements.class, (els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|17", org.jsoup.nodes.Document.class, doc).select("div")));
        org.junit.Assert.assertEquals("fake", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|19", org.jsoup.select.Elements.class, els).text()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|21", (body = "<div>fake</?</div>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|23", org.jsoup.nodes.Document.class, (doc = org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|22", body))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|25", org.jsoup.select.Elements.class, (els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|24", org.jsoup.nodes.Document.class, doc).select("div")));
        org.junit.Assert.assertEquals("fake", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testEndTagOpen()|26", org.jsoup.select.Elements.class, els).text()));
    }

    @org.junit.Test
    public void testRcdataLessthanSign() {
        java.lang.String body;
        org.jsoup.nodes.Document doc;
        org.jsoup.select.Elements els;
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|0", (body = "<textarea><fake></textarea>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|2", org.jsoup.nodes.Document.class, (doc = org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|1", body))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|4", org.jsoup.select.Elements.class, (els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|3", org.jsoup.nodes.Document.class, doc).select("textarea")));
        org.junit.Assert.assertEquals("<fake>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|5", org.jsoup.select.Elements.class, els).text()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|7", (body = "<textarea><open"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|9", org.jsoup.nodes.Document.class, (doc = org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|8", body))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|11", org.jsoup.select.Elements.class, (els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|10", org.jsoup.nodes.Document.class, doc).select("textarea")));
        org.junit.Assert.assertEquals("", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|12", org.jsoup.select.Elements.class, els).text()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|14", (body = "<textarea>hello world</?fake</textarea>"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|16", org.jsoup.nodes.Document.class, (doc = org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|15", body))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|18", org.jsoup.select.Elements.class, (els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|17", org.jsoup.nodes.Document.class, doc).select("textarea")));
        org.junit.Assert.assertEquals("hello world</?fake", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testRcdataLessthanSign()|19", org.jsoup.select.Elements.class, els).text()));
    }

    @org.junit.Test
    public void testRCDATAEndTagName() {
        for (char c : eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|testRCDATAEndTagName()|0", char[].class, whiteSpace)) {
            java.lang.String body = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRCDATAEndTagName()|2", java.lang.String.format("<textarea>data</textarea%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRCDATAEndTagName()|1", c)));
            org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testRCDATAEndTagName()|4", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRCDATAEndTagName()|3", body)));
            org.jsoup.select.Elements els = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testRCDATAEndTagName()|6", org.jsoup.select.Elements.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testRCDATAEndTagName()|5", org.jsoup.nodes.Document.class, doc).select("textarea"));
            org.junit.Assert.assertEquals("data", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testRCDATAEndTagName()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.select.Elements>observeState("org.jsoup.parser.TokeniserStateTest|testRCDATAEndTagName()|7", org.jsoup.select.Elements.class, els).text()));
        }
    }

    @org.junit.Test
    public void testCommentEndCoverage() {
        java.lang.String html = "<html><head></head><body><img src=foo><!-- <table><tr><td></table> --! --- --><p>Hello</p></body></html>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|0", html)));
        org.jsoup.nodes.Element body = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|3", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|2", org.jsoup.nodes.Document.class, doc).body());
        org.jsoup.nodes.Comment comment = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Comment>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|5", org.jsoup.nodes.Comment.class, ((org.jsoup.nodes.Comment) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|4", org.jsoup.nodes.Element.class, body).childNode(1))));
        org.junit.Assert.assertEquals(" <table><tr><td></table> --! --- ", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Comment>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|6", org.jsoup.nodes.Comment.class, comment).getData()));
        org.jsoup.nodes.Element p = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|9", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|8", org.jsoup.nodes.Element.class, body).child(1));
        org.jsoup.nodes.TextNode text = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.TextNode>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|11", org.jsoup.nodes.TextNode.class, ((org.jsoup.nodes.TextNode) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|10", org.jsoup.nodes.Element.class, p).childNode(0))));
        org.junit.Assert.assertEquals("Hello", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.TextNode>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndCoverage()|12", org.jsoup.nodes.TextNode.class, text).getWholeText()));
    }

    @org.junit.Test
    public void testCommentEndBangCoverage() {
        java.lang.String html = "<html><head></head><body><img src=foo><!-- <table><tr><td></table> --!---!>--><p>Hello</p></body></html>";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|0", html)));
        org.jsoup.nodes.Element body = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|3", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|2", org.jsoup.nodes.Document.class, doc).body());
        org.jsoup.nodes.Comment comment = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Comment>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|5", org.jsoup.nodes.Comment.class, ((org.jsoup.nodes.Comment) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|4", org.jsoup.nodes.Element.class, body).childNode(1))));
        org.junit.Assert.assertEquals(" <table><tr><td></table> --!-", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|7", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Comment>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|6", org.jsoup.nodes.Comment.class, comment).getData()));
        org.jsoup.nodes.Element p = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|9", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|8", org.jsoup.nodes.Element.class, body).child(1));
        org.jsoup.nodes.TextNode text = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.TextNode>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|11", org.jsoup.nodes.TextNode.class, ((org.jsoup.nodes.TextNode) (eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|10", org.jsoup.nodes.Element.class, p).childNode(0))));
        org.junit.Assert.assertEquals("Hello", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.TextNode>observeState("org.jsoup.parser.TokeniserStateTest|testCommentEndBangCoverage()|12", org.jsoup.nodes.TextNode.class, text).getWholeText()));
    }

    @org.junit.Test
    public void testPublicIdentifiersWithWhitespace() {
        java.lang.String expectedOutput = "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0//EN\">";
        for (char q : eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|0", char[].class, quote)) {
            for (char ws : eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|1", char[].class, whiteSpace)) {
                java.lang.String[] htmls = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|26", java.lang.String[].class, new java.lang.String[]{ eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|5", java.lang.String.format("<!DOCTYPE html%cPUBLIC %c-//W3C//DTD HTML 4.0//EN%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|2", ws), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|3", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|4", q))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|9", java.lang.String.format("<!DOCTYPE html %cPUBLIC %c-//W3C//DTD HTML 4.0//EN%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|6", ws), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|7", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|8", q))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|13", java.lang.String.format("<!DOCTYPE html PUBLIC%c%c-//W3C//DTD HTML 4.0//EN%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|10", ws), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|11", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|12", q))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|17", java.lang.String.format("<!DOCTYPE html PUBLIC %c%c-//W3C//DTD HTML 4.0//EN%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|14", ws), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|15", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|16", q))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|21", java.lang.String.format("<!DOCTYPE html PUBLIC %c-//W3C//DTD HTML 4.0//EN%c%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|18", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|19", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|20", ws))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|25", java.lang.String.format("<!DOCTYPE html PUBLIC%c-//W3C//DTD HTML 4.0//EN%c%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|22", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|23", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|24", ws))) });
                for (java.lang.String html : eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|27", java.lang.String[].class, htmls)) {
                    org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|29", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|28", html)));
                    org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|30", expectedOutput), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|33", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|32", org.jsoup.nodes.Node.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testPublicIdentifiersWithWhitespace()|31", org.jsoup.nodes.Document.class, doc).childNode(0)).outerHtml()));
                }
            }
        }
    }

    @org.junit.Test
    public void testSystemIdentifiersWithWhitespace() {
        java.lang.String expectedOutput = "<!DOCTYPE html SYSTEM \"http://www.w3.org/TR/REC-html40/strict.dtd\">";
        for (char q : eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|0", char[].class, quote)) {
            for (char ws : eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|1", char[].class, whiteSpace)) {
                java.lang.String[] htmls = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|26", java.lang.String[].class, new java.lang.String[]{ eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|5", java.lang.String.format("<!DOCTYPE html%cSYSTEM %chttp://www.w3.org/TR/REC-html40/strict.dtd%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|2", ws), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|3", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|4", q))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|9", java.lang.String.format("<!DOCTYPE html %cSYSTEM %chttp://www.w3.org/TR/REC-html40/strict.dtd%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|6", ws), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|7", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|8", q))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|13", java.lang.String.format("<!DOCTYPE html SYSTEM%c%chttp://www.w3.org/TR/REC-html40/strict.dtd%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|10", ws), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|11", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|12", q))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|17", java.lang.String.format("<!DOCTYPE html SYSTEM %c%chttp://www.w3.org/TR/REC-html40/strict.dtd%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|14", ws), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|15", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|16", q))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|21", java.lang.String.format("<!DOCTYPE html SYSTEM %chttp://www.w3.org/TR/REC-html40/strict.dtd%c%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|18", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|19", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|20", ws))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|25", java.lang.String.format("<!DOCTYPE html SYSTEM%chttp://www.w3.org/TR/REC-html40/strict.dtd%c%c>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|22", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|23", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|24", ws))) });
                for (java.lang.String html : eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|27", java.lang.String[].class, htmls)) {
                    org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|29", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|28", html)));
                    org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|30", expectedOutput), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|33", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|32", org.jsoup.nodes.Node.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testSystemIdentifiersWithWhitespace()|31", org.jsoup.nodes.Document.class, doc).childNode(0)).outerHtml()));
                }
            }
        }
    }

    @org.junit.Test
    public void testPublicAndSystemIdentifiersWithWhitespace() {
        java.lang.String expectedOutput = "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0//EN\"" + " \"http://www.w3.org/TR/REC-html40/strict.dtd\">";
        for (char q : eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|0", char[].class, quote)) {
            for (char ws : eu.stamp_project.reneri.instrumentation.StateObserver.<char[]>observeState("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|1", char[].class, whiteSpace)) {
                java.lang.String[] htmls = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|13", java.lang.String[].class, new java.lang.String[]{ eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|7", java.lang.String.format(("<!DOCTYPE html PUBLIC %c-//W3C//DTD HTML 4.0//EN%c" + "%c%chttp://www.w3.org/TR/REC-html40/strict.dtd%c>"), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|2", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|3", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|4", ws), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|5", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|6", q))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|12", java.lang.String.format(("<!DOCTYPE html PUBLIC %c-//W3C//DTD HTML 4.0//EN%c" + "%chttp://www.w3.org/TR/REC-html40/strict.dtd%c>"), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|8", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|9", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|10", q), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|11", q))) });
                for (java.lang.String html : eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.String[]>observeState("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|14", java.lang.String[].class, htmls)) {
                    org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|16", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|15", html)));
                    org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|17", expectedOutput), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Node>observeState("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|19", org.jsoup.nodes.Node.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|testPublicAndSystemIdentifiersWithWhitespace()|18", org.jsoup.nodes.Document.class, doc).childNode(0)).outerHtml()));
                }
            }
        }
    }

    @org.junit.Test
    public void handlesLessInTagThanAsNewTag() {
        // out of spec, but clear author intent
        java.lang.String html = "<p\n<p<div id=one <span>Two";
        org.jsoup.nodes.Document doc = eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|handlesLessInTagThanAsNewTag()|1", org.jsoup.nodes.Document.class, org.jsoup.Jsoup.parse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|handlesLessInTagThanAsNewTag()|0", html)));
        org.junit.Assert.assertEquals("<p></p><p></p><div id=\"one\"><span>Two</span></div>", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|handlesLessInTagThanAsNewTag()|5", org.jsoup.TextUtil.stripNewlines(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.jsoup.parser.TokeniserStateTest|handlesLessInTagThanAsNewTag()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Element>observeState("org.jsoup.parser.TokeniserStateTest|handlesLessInTagThanAsNewTag()|3", org.jsoup.nodes.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.jsoup.nodes.Document>observeState("org.jsoup.parser.TokeniserStateTest|handlesLessInTagThanAsNewTag()|2", org.jsoup.nodes.Document.class, doc).body()).html()))));
    }
}

