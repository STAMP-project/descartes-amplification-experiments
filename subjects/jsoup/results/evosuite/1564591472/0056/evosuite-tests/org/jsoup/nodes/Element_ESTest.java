/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 17:44:17 GMT 2019
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Element element0 = new Element("#do}=ypJ");
      element0.childNodes = null;
      element0.parentNode = (Node) element0;
      element0.siblingIndex = 505;
      // Undeclared exception!
      try { 
        element0.previousSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Tag tag0 = mock(Tag.class, new ViolatedAssumptionAnswer());
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "3H4=J&1?DkN", attributes0);
      assertEquals("3H4=J&1?DkN", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Tag tag0 = mock(Tag.class, new ViolatedAssumptionAnswer());
      Element element0 = new Element(tag0, "!*d");
      assertEquals("!*d", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Element element0 = new Element("{wWL~b}7 #88");
      Document document0 = new Document("{wWL~b}7 #88");
      element0.parentNode = (Node) document0;
      element0.siblingIndex = 579;
      // Undeclared exception!
      try { 
        element0.previousSibling();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 578, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
