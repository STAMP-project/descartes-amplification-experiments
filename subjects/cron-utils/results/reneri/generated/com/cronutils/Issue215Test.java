/**
 *
 */
package com.cronutils;


public class Issue215Test {
    // test for https://github.com/jmrozanec/cron-utils/issues/215
    @org.junit.Test
    public void testWorkdayBugWithNextMonth() {
        testWorkdays8Quartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|0", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 7, 7, 10, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|1", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 7, 10, 8, 0)));
        testWorkdays8Quartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|2", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 8, 31, 10, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|3", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 9, 1, 8, 0)));
        testWorkdays8Quartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|4", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 6, 30, 10, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|5", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 7, 3, 8, 0)));
        testWorkdays8Quartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|6", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 9, 29, 10, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|7", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 10, 2, 8, 0)));
        testWorkdays8Cron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|8", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 7, 7, 10, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|9", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 7, 10, 8, 0)));// good

        testWorkdays8Cron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|10", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 8, 31, 10, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|11", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 9, 1, 8, 0)));// good

        testWorkdays8Cron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|12", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 6, 30, 10, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|13", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 7, 3, 8, 0)));// not good

        testWorkdays8Cron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|14", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 9, 29, 10, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdayBugWithNextMonth()|15", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, 10, 2, 8, 0)));// not good

    }

    @org.junit.Test
    public void testFridayToSaturday() {
        // cron4j and quartz have different monday day of week values, so test both
        testFridayToSaturdayQuartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|1", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|0", org.threeten.bp.Month.class, org.threeten.bp.Month.MARCH), 28, 0, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|3", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|2", org.threeten.bp.Month.class, org.threeten.bp.Month.MARCH), 31, 8, 0)));
        testFridayToSaturdayQuartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|5", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|4", org.threeten.bp.Month.class, org.threeten.bp.Month.MARCH), 31, 9, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|7", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|6", org.threeten.bp.Month.class, org.threeten.bp.Month.APRIL), 1, 8, 0)));
        testFridayToSaturdayCron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|9", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|8", org.threeten.bp.Month.class, org.threeten.bp.Month.MARCH), 28, 0, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|11", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|10", org.threeten.bp.Month.class, org.threeten.bp.Month.MARCH), 31, 8, 0)));
        testFridayToSaturdayCron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|13", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|12", org.threeten.bp.Month.class, org.threeten.bp.Month.MARCH), 31, 9, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|15", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|14", org.threeten.bp.Month.class, org.threeten.bp.Month.APRIL), 1, 8, 0)));
        testFridayToSaturdayQuartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|17", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|16", org.threeten.bp.Month.class, org.threeten.bp.Month.JULY), 10, 0, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|19", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|18", org.threeten.bp.Month.class, org.threeten.bp.Month.JULY), 14, 8, 0)));
        testFridayToSaturdayQuartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|21", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|20", org.threeten.bp.Month.class, org.threeten.bp.Month.JULY), 15, 0, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|23", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|22", org.threeten.bp.Month.class, org.threeten.bp.Month.JULY), 15, 8, 0)));
        testFridayToSaturdayCron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|25", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|24", org.threeten.bp.Month.class, org.threeten.bp.Month.JULY), 10, 0, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|27", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|26", org.threeten.bp.Month.class, org.threeten.bp.Month.JULY), 14, 8, 0)));
        testFridayToSaturdayCron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|29", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|28", org.threeten.bp.Month.class, org.threeten.bp.Month.JULY), 15, 0, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|31", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2017, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|30", org.threeten.bp.Month.class, org.threeten.bp.Month.JULY), 15, 8, 0)));
        testFridayToSaturdayQuartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|33", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2010, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|32", org.threeten.bp.Month.class, org.threeten.bp.Month.DECEMBER), 31, 0, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|35", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2010, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|34", org.threeten.bp.Month.class, org.threeten.bp.Month.DECEMBER), 31, 8, 0)));
        testFridayToSaturdayQuartz(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|37", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2010, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|36", org.threeten.bp.Month.class, org.threeten.bp.Month.DECEMBER), 31, 9, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|39", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2011, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|38", org.threeten.bp.Month.class, org.threeten.bp.Month.JANUARY), 1, 8, 0)));
        testFridayToSaturdayCron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|41", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2010, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|40", org.threeten.bp.Month.class, org.threeten.bp.Month.DECEMBER), 31, 0, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|43", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2010, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|42", org.threeten.bp.Month.class, org.threeten.bp.Month.DECEMBER), 31, 8, 0)));
        testFridayToSaturdayCron4j(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|45", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2010, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|44", org.threeten.bp.Month.class, org.threeten.bp.Month.DECEMBER), 31, 9, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|47", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2011, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.Month>observeState("com.cronutils.Issue215Test|testFridayToSaturday()|46", org.threeten.bp.Month.class, org.threeten.bp.Month.JANUARY), 1, 8, 0)));
    }

    private void testFridayToSaturdayQuartz(org.threeten.bp.LocalDateTime startDate, org.threeten.bp.LocalDateTime expectedNextExecution) {
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue215Test|testFridayToSaturdayQuartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|2", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.Issue215Test|testFridayToSaturdayQuartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|1", com.cronutils.model.definition.CronDefinition.class, com.cronutils.model.definition.CronDefinitionBuilder.instanceDefinitionFor(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.CronType>observeState("com.cronutils.Issue215Test|testFridayToSaturdayQuartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|0", com.cronutils.model.CronType.class, com.cronutils.model.CronType.QUARTZ)))));
        com.cronutils.model.Cron quartzCron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue215Test|testFridayToSaturdayQuartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|4", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue215Test|testFridayToSaturdayQuartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|3", com.cronutils.parser.CronParser.class, parser).parse("0 0 8 ? * FRI-SAT"));
        checkNextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturdayQuartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|5", org.threeten.bp.LocalDateTime.class, startDate), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturdayQuartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|6", org.threeten.bp.LocalDateTime.class, expectedNextExecution), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue215Test|testFridayToSaturdayQuartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|7", com.cronutils.model.Cron.class, quartzCron));
    }

    private void testFridayToSaturdayCron4j(org.threeten.bp.LocalDateTime startDate, org.threeten.bp.LocalDateTime expectedNextExecution) {
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue215Test|testFridayToSaturdayCron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|2", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.Issue215Test|testFridayToSaturdayCron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|1", com.cronutils.model.definition.CronDefinition.class, com.cronutils.model.definition.CronDefinitionBuilder.instanceDefinitionFor(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.CronType>observeState("com.cronutils.Issue215Test|testFridayToSaturdayCron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|0", com.cronutils.model.CronType.class, com.cronutils.model.CronType.CRON4J)))));
        com.cronutils.model.Cron quartzCron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue215Test|testFridayToSaturdayCron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|4", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue215Test|testFridayToSaturdayCron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|3", com.cronutils.parser.CronParser.class, parser).parse("0 8 * * FRI-SAT"));
        checkNextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturdayCron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|5", org.threeten.bp.LocalDateTime.class, startDate), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testFridayToSaturdayCron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|6", org.threeten.bp.LocalDateTime.class, expectedNextExecution), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue215Test|testFridayToSaturdayCron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|7", com.cronutils.model.Cron.class, quartzCron));
    }

    private void testWorkdays8Quartz(org.threeten.bp.LocalDateTime startDate, org.threeten.bp.LocalDateTime expectedNextExecution) {
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue215Test|testWorkdays8Quartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|2", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.Issue215Test|testWorkdays8Quartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|1", com.cronutils.model.definition.CronDefinition.class, com.cronutils.model.definition.CronDefinitionBuilder.instanceDefinitionFor(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.CronType>observeState("com.cronutils.Issue215Test|testWorkdays8Quartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|0", com.cronutils.model.CronType.class, com.cronutils.model.CronType.QUARTZ)))));
        com.cronutils.model.Cron quartzCron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue215Test|testWorkdays8Quartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|4", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue215Test|testWorkdays8Quartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|3", com.cronutils.parser.CronParser.class, parser).parse("0 0 8 ? * MON-FRI"));
        checkNextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdays8Quartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|5", org.threeten.bp.LocalDateTime.class, startDate), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdays8Quartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|6", org.threeten.bp.LocalDateTime.class, expectedNextExecution), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue215Test|testWorkdays8Quartz(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|7", com.cronutils.model.Cron.class, quartzCron));
    }

    private void testWorkdays8Cron4j(org.threeten.bp.LocalDateTime startDate, org.threeten.bp.LocalDateTime expectedNextExecution) {
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue215Test|testWorkdays8Cron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|2", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.Issue215Test|testWorkdays8Cron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|1", com.cronutils.model.definition.CronDefinition.class, com.cronutils.model.definition.CronDefinitionBuilder.instanceDefinitionFor(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.CronType>observeState("com.cronutils.Issue215Test|testWorkdays8Cron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|0", com.cronutils.model.CronType.class, com.cronutils.model.CronType.CRON4J)))));
        com.cronutils.model.Cron quartzCron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue215Test|testWorkdays8Cron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|4", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue215Test|testWorkdays8Cron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|3", com.cronutils.parser.CronParser.class, parser).parse("0 8 * * MON-FRI"));
        checkNextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdays8Cron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|5", org.threeten.bp.LocalDateTime.class, startDate), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|testWorkdays8Cron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|6", org.threeten.bp.LocalDateTime.class, expectedNextExecution), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue215Test|testWorkdays8Cron4j(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime)|7", com.cronutils.model.Cron.class, quartzCron));
    }

    private void checkNextExecution(org.threeten.bp.LocalDateTime startDate, org.threeten.bp.LocalDateTime expectedNextExecution, com.cronutils.model.Cron cron) {
        com.cronutils.model.time.ExecutionTime executionTime = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|1", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|0", com.cronutils.model.Cron.class, cron)));
        org.threeten.bp.ZonedDateTime zonedDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|4", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|2", org.threeten.bp.LocalDateTime.class, startDate), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneId>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|3", org.threeten.bp.ZoneId.class, org.threeten.bp.ZoneId.systemDefault())));
        com.google.common.base.Optional<org.threeten.bp.ZonedDateTime> next = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|7", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|5", com.cronutils.model.time.ExecutionTime.class, executionTime).nextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|6", org.threeten.bp.ZonedDateTime.class, zonedDateTime)));
        assert eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|9", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|8", com.google.common.base.Optional.class, next).isPresent());
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|12", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|10", org.threeten.bp.LocalDateTime.class, expectedNextExecution), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneId>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|11", org.threeten.bp.ZoneId.class, org.threeten.bp.ZoneId.systemDefault()))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|14", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.Issue215Test|checkNextExecution(org.threeten.bp.LocalDateTime,org.threeten.bp.LocalDateTime,com.cronutils.model.Cron)|13", com.google.common.base.Optional.class, next).get()));
    }
}

