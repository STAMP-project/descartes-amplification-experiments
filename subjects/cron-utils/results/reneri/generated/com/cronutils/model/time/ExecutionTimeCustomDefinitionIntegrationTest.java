package com.cronutils.model.time;


public class ExecutionTimeCustomDefinitionIntegrationTest {
    @org.junit.Test
    public void testCronExpressionAfterHalf() {
        com.cronutils.model.definition.CronDefinition cronDefinition = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|16", com.cronutils.model.definition.CronDefinition.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|15", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|14", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|13", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|12", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|11", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|10", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|9", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|8", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|7", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|6", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|5", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|4", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|3", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|2", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|1", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|0", com.cronutils.model.definition.CronDefinitionBuilder.class, com.cronutils.model.definition.CronDefinitionBuilder.defineCron()).withSeconds()).and()).withMinutes()).and()).withHours()).and()).withDayOfMonth()).and()).withMonth()).and()).withDayOfWeek()).withValidRange(0, 7)).withMondayDoWValue(1)).withIntMapping(7, 0)).and()).instance());
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|18", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|17", com.cronutils.model.definition.CronDefinition.class, cronDefinition)));
        com.cronutils.model.Cron cron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|20", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|19", com.cronutils.parser.CronParser.class, parser).parse("*/30 * * * * *"));
        org.threeten.bp.ZonedDateTime startDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|22", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(2015, 8, 28, 12, 5, 44, 0, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneOffset>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|21", org.threeten.bp.ZoneOffset.class, org.threeten.bp.ZoneOffset.UTC)));
        org.threeten.bp.ZonedDateTime expectedDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|24", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(2015, 8, 28, 12, 6, 0, 0, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneOffset>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|23", org.threeten.bp.ZoneOffset.class, org.threeten.bp.ZoneOffset.UTC)));
        com.cronutils.model.time.ExecutionTime executionTime = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|26", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|25", com.cronutils.model.Cron.class, cron)));
        org.threeten.bp.ZonedDateTime nextExecutionDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|30", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|29", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|27", com.cronutils.model.time.ExecutionTime.class, executionTime).nextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|28", org.threeten.bp.ZonedDateTime.class, startDateTime))).get());
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|31", org.threeten.bp.ZonedDateTime.class, expectedDateTime), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionAfterHalf()|32", org.threeten.bp.ZonedDateTime.class, nextExecutionDateTime));
    }

    @org.junit.Test
    public void testCronExpressionBeforeHalf() {
        com.cronutils.model.definition.CronDefinition cronDefinition = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|16", com.cronutils.model.definition.CronDefinition.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|15", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|14", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|13", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|12", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|11", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|10", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|9", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|8", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|7", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|6", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|5", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|4", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|3", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|2", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|1", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|0", com.cronutils.model.definition.CronDefinitionBuilder.class, com.cronutils.model.definition.CronDefinitionBuilder.defineCron()).withSeconds()).and()).withMinutes()).and()).withHours()).and()).withDayOfMonth()).and()).withMonth()).and()).withDayOfWeek()).withValidRange(0, 7)).withMondayDoWValue(1)).withIntMapping(7, 0)).and()).instance());
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|18", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|17", com.cronutils.model.definition.CronDefinition.class, cronDefinition)));
        com.cronutils.model.Cron cron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|20", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|19", com.cronutils.parser.CronParser.class, parser).parse("0/30 * * * * *"));
        org.threeten.bp.ZonedDateTime startDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|22", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(2015, 8, 28, 12, 5, 14, 0, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneOffset>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|21", org.threeten.bp.ZoneOffset.class, org.threeten.bp.ZoneOffset.UTC)));
        org.threeten.bp.ZonedDateTime expectedDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|24", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(2015, 8, 28, 12, 5, 30, 0, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneOffset>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|23", org.threeten.bp.ZoneOffset.class, org.threeten.bp.ZoneOffset.UTC)));
        com.cronutils.model.time.ExecutionTime executionTime = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|26", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|25", com.cronutils.model.Cron.class, cron)));
        org.threeten.bp.ZonedDateTime nextExecutionDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|30", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|29", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|27", com.cronutils.model.time.ExecutionTime.class, executionTime).nextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|28", org.threeten.bp.ZonedDateTime.class, startDateTime))).get());
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|31", org.threeten.bp.ZonedDateTime.class, expectedDateTime), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBeforeHalf()|32", org.threeten.bp.ZonedDateTime.class, nextExecutionDateTime));
    }

    /**
     * Test for issue #38
     * https://github.com/jmrozanec/cron-utils/issues/38
     * Reported case: lastExecution and nextExecution do not work properly
     * Expected: should return expected date
     */
    @org.junit.Test
    public void testCronExpressionEveryTwoHoursAsteriskSlash2() {
        com.cronutils.model.definition.CronDefinition cronDefinition = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|16", com.cronutils.model.definition.CronDefinition.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|15", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|14", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|13", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|12", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|11", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|10", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|9", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|8", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|7", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|6", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|5", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|4", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|3", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|2", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|1", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|0", com.cronutils.model.definition.CronDefinitionBuilder.class, com.cronutils.model.definition.CronDefinitionBuilder.defineCron()).withSeconds()).and()).withMinutes()).and()).withHours()).and()).withDayOfMonth()).and()).withMonth()).and()).withDayOfWeek()).withValidRange(0, 7)).withMondayDoWValue(1)).withIntMapping(7, 0)).and()).instance());
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|18", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|17", com.cronutils.model.definition.CronDefinition.class, cronDefinition)));
        com.cronutils.model.Cron cron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|20", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|19", com.cronutils.parser.CronParser.class, parser).parse("0 0 */2 * * *"));
        org.threeten.bp.ZonedDateTime startDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|21", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.parse("2015-08-28T12:05:14.000-03:00"));
        org.junit.Assert.assertTrue(((eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|22", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.parse("2015-08-28T14:00:00.000-03:00")).compareTo(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|27", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|26", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|24", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|23", com.cronutils.model.Cron.class, cron))).nextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursAsteriskSlash2()|25", org.threeten.bp.ZonedDateTime.class, startDateTime))).get())))) == 0));
    }

    /**
     * Test for issue #38
     * https://github.com/jmrozanec/cron-utils/issues/38
     * Reported case: lastExecution and nextExecution do not work properly
     * Expected: should return expected date
     */
    @org.junit.Test
    public void testCronExpressionEveryTwoHoursSlash2() {
        com.cronutils.model.definition.CronDefinition cronDefinition = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|16", com.cronutils.model.definition.CronDefinition.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|15", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|14", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|13", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|12", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|11", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|10", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|9", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|8", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|7", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|6", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|5", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|4", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|3", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|2", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|1", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|0", com.cronutils.model.definition.CronDefinitionBuilder.class, com.cronutils.model.definition.CronDefinitionBuilder.defineCron()).withSeconds()).and()).withMinutes()).and()).withHours()).and()).withDayOfMonth()).and()).withMonth()).and()).withDayOfWeek()).withValidRange(0, 7)).withMondayDoWValue(1)).withIntMapping(7, 0)).and()).instance());
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|18", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|17", com.cronutils.model.definition.CronDefinition.class, cronDefinition)));
        com.cronutils.model.Cron cron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|20", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|19", com.cronutils.parser.CronParser.class, parser).parse("0 0 /2 * * *"));
        org.threeten.bp.ZonedDateTime startDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|21", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.parse("2015-08-28T12:05:14.000-03:00"));
        org.junit.Assert.assertTrue(((eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|22", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.parse("2015-08-28T14:00:00.000-03:00")).compareTo(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|27", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|26", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|24", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|23", com.cronutils.model.Cron.class, cron))).nextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionEveryTwoHoursSlash2()|25", org.threeten.bp.ZonedDateTime.class, startDateTime))).get())))) == 0));
    }

    /**
     * Test for issue #57
     * https://github.com/jmrozanec/cron-utils/issues/57
     * Reported case: BetweenDayOfWeekValueGenerator does not work for the first day of a month in some cases.
     * Expected: first day of month should be returned ok
     */
    @org.junit.Test
    public void testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth() {
        com.cronutils.model.definition.CronDefinition cronDefinition = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|20", com.cronutils.model.definition.CronDefinition.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|19", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|18", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|17", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|16", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|15", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|14", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|13", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|12", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|11", com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|10", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|9", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|8", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|7", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|6", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|5", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|4", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|3", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|2", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|1", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|0", com.cronutils.model.definition.CronDefinitionBuilder.class, com.cronutils.model.definition.CronDefinitionBuilder.defineCron()).withMinutes()).and()).withHours()).and()).withDayOfMonth()).supportsL()).supportsW()).and()).withMonth()).and()).withDayOfWeek()).withMondayDoWValue(1)).withValidRange(1, 7)).supportsHash()).supportsL()).and()).withYear()).optional()).and()).instance());
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|22", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|21", com.cronutils.model.definition.CronDefinition.class, cronDefinition)));
        com.cronutils.model.Cron cron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|24", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|23", com.cronutils.parser.CronParser.class, parser).parse("30 3 * * MON-FRI"));
        org.threeten.bp.ZonedDateTime sameDayBeforeEventStartDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|25", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.parse("1970-01-01T00:00:00.000-03:00"));
        org.junit.Assert.assertEquals(1, eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|31", eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|30", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|29", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|27", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|26", com.cronutils.model.Cron.class, cron))).nextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|28", org.threeten.bp.ZonedDateTime.class, sameDayBeforeEventStartDateTime))).get()).getDayOfMonth()));
        org.threeten.bp.ZonedDateTime sameDayAfterEventStartDateTime = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|32", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.parse("1970-01-01T12:00:00.000-03:00"));
        org.junit.Assert.assertEquals(2, eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|38", eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|37", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|36", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|34", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|33", com.cronutils.model.Cron.class, cron))).nextExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth()|35", org.threeten.bp.ZonedDateTime.class, sameDayAfterEventStartDateTime))).get()).getDayOfMonth()));
    }

    /**
     * Issue #136: Bug exposed at PR #136
     * https://github.com/jmrozanec/cron-utils/pull/136
     * Reported case: when executing isMatch for a given range of dates,
     * if date is invalid, we get an exception, not a boolean as response.
     */
    @org.junit.Test
    public void testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing() {
        com.cronutils.model.definition.CronDefinition cronDefinition = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|9", com.cronutils.model.definition.CronDefinition.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|8", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|7", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|6", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|5", com.cronutils.model.field.definition.FieldDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|4", com.cronutils.model.definition.CronDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|3", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|2", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|1", com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinitionBuilder>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|0", com.cronutils.model.definition.CronDefinitionBuilder.class, com.cronutils.model.definition.CronDefinitionBuilder.defineCron()).withDayOfMonth()).supportsL()).supportsW()).and()).withMonth()).and()).withYear()).and()).instance());
        com.cronutils.parser.CronParser parser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|11", com.cronutils.parser.CronParser.class, new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|10", com.cronutils.model.definition.CronDefinition.class, cronDefinition)));
        com.cronutils.model.Cron cron = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|13", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|12", com.cronutils.parser.CronParser.class, parser).parse("05 05 2004"));
        com.cronutils.model.time.ExecutionTime executionTime = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|15", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|14", com.cronutils.model.Cron.class, cron)));
        org.threeten.bp.ZonedDateTime start = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|17", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(2004, 5, 5, 23, 55, 0, 0, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneId>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|16", org.threeten.bp.ZoneId.class, org.threeten.bp.ZoneId.of("UTC"))));
        org.threeten.bp.ZonedDateTime end = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|19", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(2004, 5, 6, 1, 0, 0, 0, eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneId>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|18", org.threeten.bp.ZoneId.class, org.threeten.bp.ZoneId.of("UTC"))));
        while ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|20", org.threeten.bp.ZonedDateTime.class, start).compareTo(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|21", org.threeten.bp.ZonedDateTime.class, end)))) < 0) {
            org.junit.Assert.assertTrue(((eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|25", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|23", com.cronutils.model.time.ExecutionTime.class, executionTime).isMatch(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|24", org.threeten.bp.ZonedDateTime.class, start)))) == ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|26", org.threeten.bp.ZonedDateTime.class, start).getDayOfMonth())) == 5)));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|29", org.threeten.bp.ZonedDateTime.class, (start = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest|testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing()|28", org.threeten.bp.ZonedDateTime.class, start).plusMinutes(1)));
        } 
    }
}

