package com.cronutils.model.time.generator;


public class BetweenDayOfWeekValueGeneratorTest {
    @org.junit.Test
    public void testGenerateCandidatesNotIncludingIntervalExtremes() throws java.lang.Exception {
        // cron expression: DoW 1-5,
        // on February 2016: 1-5, 8-12, 15-19, 22-26, 29
        com.cronutils.model.field.CronField cronField = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|6", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|0", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.DAY_OF_WEEK), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Between>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|3", com.cronutils.model.field.expression.Between.class, new com.cronutils.model.field.expression.Between(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|1", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(1)), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|2", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(5)))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|5", com.cronutils.model.field.constraint.FieldConstraints.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraintsBuilder>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|4", com.cronutils.model.field.constraint.FieldConstraintsBuilder.class, com.cronutils.model.field.constraint.FieldConstraintsBuilder.instance()).createConstraintsInstance())));
        com.cronutils.model.time.generator.BetweenDayOfWeekValueGenerator generator = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.generator.BetweenDayOfWeekValueGenerator>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|9", com.cronutils.model.time.generator.BetweenDayOfWeekValueGenerator.class, new com.cronutils.model.time.generator.BetweenDayOfWeekValueGenerator(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|7", com.cronutils.model.field.CronField.class, cronField), 2016, 2, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.mapper.WeekDay>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|8", com.cronutils.mapper.WeekDay.class, new com.cronutils.mapper.WeekDay(1, true))));
        java.util.List<java.lang.Integer> values = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.Integer>>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|11", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.generator.BetweenDayOfWeekValueGenerator>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|10", com.cronutils.model.time.generator.BetweenDayOfWeekValueGenerator.class, generator).generateCandidates(1, 29));
        validateInterval(1, 5, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.Integer>>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|12", java.util.List.class, values));
        validateInterval(8, 12, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.Integer>>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|13", java.util.List.class, values));
        validateInterval(15, 19, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.Integer>>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|14", java.util.List.class, values));
        validateInterval(22, 26, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.Integer>>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|15", java.util.List.class, values));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.Integer>>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|testGenerateCandidatesNotIncludingIntervalExtremes()|16", java.util.List.class, values).contains(29)));
    }

    private void validateInterval(int start, int end, java.util.List<java.lang.Integer> values) {
        for (int j = eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|validateInterval(int,int,java.util.List)|0", start); (eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|validateInterval(int,int,java.util.List)|1", j)) < ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|validateInterval(int,int,java.util.List)|2", end)) + 1); j++) {
            org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|validateInterval(int,int,java.util.List)|4", java.lang.String.format("%s not contained in values", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|validateInterval(int,int,java.util.List)|3", j))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|validateInterval(int,int,java.util.List)|7", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.Integer>>observeState("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|validateInterval(int,int,java.util.List)|5", java.util.List.class, values).contains(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.model.time.generator.BetweenDayOfWeekValueGeneratorTest|validateInterval(int,int,java.util.List)|6", j))));
        }
    }
}

