package com.cronutils.utils.descriptor;


/* Copyright 2015 jmrozanec
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */
public class CronDescriptorTest {
    private com.cronutils.descriptor.CronDescriptor descriptor;

    private com.cronutils.model.field.constraint.FieldConstraints nullFieldConstraints;

    @org.mockito.Mock
    private com.cronutils.model.definition.CronDefinition mockDefinition;

    @org.junit.Before
    public void setUp() throws java.lang.Exception {
        org.mockito.MockitoAnnotations.initMocks(this);
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|setUp()|1", com.cronutils.descriptor.CronDescriptor.class, (descriptor = com.cronutils.descriptor.CronDescriptor.instance(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Locale>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|setUp()|0", java.util.Locale.class, java.util.Locale.UK))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|setUp()|6", com.cronutils.model.field.constraint.FieldConstraints.class, (nullFieldConstraints = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraintsBuilder>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|setUp()|5", com.cronutils.model.field.constraint.FieldConstraintsBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraintsBuilder>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|setUp()|4", com.cronutils.model.field.constraint.FieldConstraintsBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraintsBuilder>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|setUp()|3", com.cronutils.model.field.constraint.FieldConstraintsBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraintsBuilder>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|setUp()|2", com.cronutils.model.field.constraint.FieldConstraintsBuilder.class, com.cronutils.model.field.constraint.FieldConstraintsBuilder.instance()).addHashSupport()).addLSupport()).addWSupport()).createConstraintsInstance()));
    }

    @org.junit.Test
    public void testDescribeEveryXTimeUnits() throws java.lang.Exception {
        int time = 3;
        com.cronutils.model.field.expression.Every expression = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Every>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|2", com.cronutils.model.field.expression.Every.class, new com.cronutils.model.field.expression.Every(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|1", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|0", time)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|4", java.lang.String.format("every %s seconds", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|3", time))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|5", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|13", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|6", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|12", java.util.List.class, com.google.common.collect.Lists.asList(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|10", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|7", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.SECOND), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Every>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|8", com.cronutils.model.field.expression.Every.class, expression), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|9", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField[]>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|11", com.cronutils.model.field.CronField[].class, new com.cronutils.model.field.CronField[]{  }))))))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|16", java.lang.String.format("every %s minutes", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|15", time))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|17", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|25", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|18", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|24", java.util.List.class, com.google.common.collect.Lists.asList(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|22", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|19", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Every>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|20", com.cronutils.model.field.expression.Every.class, expression), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|21", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField[]>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|23", com.cronutils.model.field.CronField[].class, new com.cronutils.model.field.CronField[]{  }))))))));
        java.util.List<com.cronutils.model.field.CronField> params = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|27", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|33", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|28", java.util.List.class, params).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|32", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|29", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Every>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|30", com.cronutils.model.field.expression.Every.class, expression), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|31", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|41", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|34", java.util.List.class, params).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|40", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|35", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|38", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|37", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|36", time))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|39", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|44", java.lang.String.format("every %s hours at minute %s", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|42", time), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|43", time))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|49", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|45", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|48", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|46", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXTimeUnits()|47", java.util.List.class, params))))));
    }

    @org.junit.Test
    public void testDescribeEveryXMinutesBetweenTime() throws java.lang.Exception {
        int hour = 11;
        int start = 0;
        int end = 10;
        com.cronutils.model.field.expression.Between expression = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Between>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|4", com.cronutils.model.field.expression.Between.class, new com.cronutils.model.field.expression.Between(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|1", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|0", start))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|3", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|2", end)))));
        java.util.List<com.cronutils.model.field.CronField> results = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|5", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|6", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|10", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|7", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Between>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|8", com.cronutils.model.field.expression.Between.class, expression), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|9", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|12", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|18", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|13", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|16", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|15", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|14", hour))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|17", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|24", java.lang.String.format("every minute between %s:%02d and %s:%02d", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|20", hour), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|21", start), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|22", hour), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|23", end))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|29", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|25", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|28", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|26", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeEveryXMinutesBetweenTime()|27", java.util.List.class, results))))));
    }

    @org.junit.Test
    public void testDescribeAtXTimeBetweenDaysOfWeek() throws java.lang.Exception {
        int hour = 11;
        int minute = 30;
        int start = 2;
        int end = 6;
        com.cronutils.model.field.expression.Between expression = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Between>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|4", com.cronutils.model.field.expression.Between.class, new com.cronutils.model.field.expression.Between(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|1", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|0", start))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|3", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|2", end)))));
        java.util.List<com.cronutils.model.field.CronField> results = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|5", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|6", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|12", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|7", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|10", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|9", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|8", hour))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|11", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|14", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|20", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|15", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|18", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|17", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|16", minute))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|19", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|22", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|26", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|23", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.DAY_OF_WEEK), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Between>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|24", com.cronutils.model.field.expression.Between.class, expression), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|25", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|30", java.lang.String.format("at %s:%s every day between Tuesday and Saturday", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|28", hour), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|29", minute))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|35", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|31", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|34", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|32", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXTimeBetweenDaysOfWeek()|33", java.util.List.class, results))))));
    }

    @org.junit.Test
    public void testDescribeAtXHours() throws java.lang.Exception {
        int hour = 11;
        java.util.List<com.cronutils.model.field.CronField> results = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|0", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|1", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|7", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|2", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|5", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|4", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|3", hour))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|6", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|9", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|13", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|10", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Always>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|11", com.cronutils.model.field.expression.Always.class, new com.cronutils.model.field.expression.Always()), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|12", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|15", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|19", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|16", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.SECOND), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Always>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|17", com.cronutils.model.field.expression.Always.class, new com.cronutils.model.field.expression.Always()), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|18", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|22", java.lang.String.format("at %s:00", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|21", hour))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|23", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|26", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|24", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testDescribeAtXHours()|25", java.util.List.class, results))))));
    }

    @org.junit.Test
    public void testEverySecondInMonth() throws java.lang.Exception {
        int month = 2;
        java.util.List<com.cronutils.model.field.CronField> results = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|0", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|1", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|5", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|2", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Always>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|3", com.cronutils.model.field.expression.Always.class, new com.cronutils.model.field.expression.Always()), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|4", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|7", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|11", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|8", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Always>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|9", com.cronutils.model.field.expression.Always.class, new com.cronutils.model.field.expression.Always()), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|10", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|13", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|17", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|14", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.SECOND), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Always>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|15", com.cronutils.model.field.expression.Always.class, new com.cronutils.model.field.expression.Always()), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|16", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|19", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|25", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|20", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MONTH), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|23", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|22", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|21", month))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|24", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals("every second at February month", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|31", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|27", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|30", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|28", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEverySecondInMonth()|29", java.util.List.class, results))))));
    }

    @org.junit.Test
    public void testEveryMinuteBetweenMonths() throws java.lang.Exception {
        int monthStart = 2;
        int monthEnd = 3;
        java.util.List<com.cronutils.model.field.CronField> results = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|0", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|1", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|5", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|2", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Always>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|3", com.cronutils.model.field.expression.Always.class, new com.cronutils.model.field.expression.Always()), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|4", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|7", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|11", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|8", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Always>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|9", com.cronutils.model.field.expression.Always.class, new com.cronutils.model.field.expression.Always()), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|10", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|13", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|21", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|14", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MONTH), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.Between>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|19", com.cronutils.model.field.expression.Between.class, new com.cronutils.model.field.expression.Between(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|16", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|15", monthStart))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|18", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|17", monthEnd))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|20", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals("every minute every month between February and March", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|23", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|26", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|24", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testEveryMinuteBetweenMonths()|25", java.util.List.class, results))))));
    }

    @org.junit.Test
    public void testLastDayOfWeekInMonth() throws java.lang.Exception {
        int dayOfWeek = 2;
        int hour = 10;
        int minute = 15;
        java.util.List<com.cronutils.model.field.CronField> results = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|0", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|1", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|7", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|2", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|5", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|4", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|3", hour))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|6", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|9", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|15", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|10", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|13", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|12", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|11", minute))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|14", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|17", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|25", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|18", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.DAY_OF_WEEK), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|23", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|20", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|19", dayOfWeek))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.SpecialCharFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|22", com.cronutils.model.field.value.SpecialCharFieldValue.class, new com.cronutils.model.field.value.SpecialCharFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.SpecialChar>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|21", com.cronutils.model.field.value.SpecialChar.class, com.cronutils.model.field.value.SpecialChar.L))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|24", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|29", java.lang.String.format("at %s:%s last Tuesday of every month", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|27", hour), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|28", minute))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|34", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|30", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|33", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|31", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfWeekInMonth()|32", java.util.List.class, results))))));
    }

    @org.junit.Test
    public void testNthDayOfWeekInMonth() throws java.lang.Exception {
        int dayOfWeek = 2;
        int hour = 10;
        int minute = 15;
        java.util.List<com.cronutils.model.field.CronField> results = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|0", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|1", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|7", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|2", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|5", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|4", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|3", hour))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|6", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|9", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|15", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|10", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|13", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|12", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|11", minute))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|14", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|17", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|27", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|18", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.DAY_OF_WEEK), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|25", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|20", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|19", dayOfWeek))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.SpecialCharFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|22", com.cronutils.model.field.value.SpecialCharFieldValue.class, new com.cronutils.model.field.value.SpecialCharFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.SpecialChar>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|21", com.cronutils.model.field.value.SpecialChar.class, com.cronutils.model.field.value.SpecialChar.HASH))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|24", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|23", dayOfWeek))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|26", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|32", java.lang.String.format("at %s:%s Tuesday %s of every month", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|29", hour), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|30", minute), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|31", dayOfWeek))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|37", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|33", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|36", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|34", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNthDayOfWeekInMonth()|35", java.util.List.class, results))))));
    }

    @org.junit.Test
    public void testLastDayOfMonth() throws java.lang.Exception {
        int hour = 10;
        int minute = 15;
        java.util.List<com.cronutils.model.field.CronField> results = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|0", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|1", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|7", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|2", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|5", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|4", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|3", hour))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|6", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|9", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|15", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|10", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|13", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|12", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|11", minute))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|14", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|17", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|23", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|18", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.DAY_OF_MONTH), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|21", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.SpecialCharFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|20", com.cronutils.model.field.value.SpecialCharFieldValue.class, new com.cronutils.model.field.value.SpecialCharFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.SpecialChar>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|19", com.cronutils.model.field.value.SpecialChar.class, com.cronutils.model.field.value.SpecialChar.L))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|22", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|27", java.lang.String.format("at %s:%s last day of month", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|25", hour), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|26", minute))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|32", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|28", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|31", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|29", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testLastDayOfMonth()|30", java.util.List.class, results))))));
    }

    @org.junit.Test
    public void testNearestWeekdayToNthOfMonth() throws java.lang.Exception {
        int dayOfMonth = 22;
        int hour = 10;
        int minute = 15;
        java.util.List<com.cronutils.model.field.CronField> results = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.ArrayList<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|0", java.util.ArrayList.class, com.google.common.collect.Lists.newArrayList());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|1", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|7", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|2", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.HOUR), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|5", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|4", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|3", hour))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|6", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|9", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|15", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|10", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.MINUTE), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|13", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|12", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|11", minute))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|14", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|17", java.util.List.class, results).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronField>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|25", com.cronutils.model.field.CronField.class, new com.cronutils.model.field.CronField(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.CronFieldName>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|18", com.cronutils.model.field.CronFieldName.class, com.cronutils.model.field.CronFieldName.DAY_OF_MONTH), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.expression.On>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|23", com.cronutils.model.field.expression.On.class, new com.cronutils.model.field.expression.On(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.IntegerFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|20", com.cronutils.model.field.value.IntegerFieldValue.class, new com.cronutils.model.field.value.IntegerFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|19", dayOfMonth))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.SpecialCharFieldValue>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|22", com.cronutils.model.field.value.SpecialCharFieldValue.class, new com.cronutils.model.field.value.SpecialCharFieldValue(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.value.SpecialChar>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|21", com.cronutils.model.field.value.SpecialChar.class, com.cronutils.model.field.value.SpecialChar.W))))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.field.constraint.FieldConstraints>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|24", com.cronutils.model.field.constraint.FieldConstraints.class, nullFieldConstraints)))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|30", java.lang.String.format("at %s:%s the nearest weekday to the %s of the month", eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|27", hour), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|28", minute), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|29", dayOfMonth))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|35", eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.descriptor.CronDescriptor>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|31", com.cronutils.descriptor.CronDescriptor.class, descriptor).describe(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|34", com.cronutils.model.Cron.class, new com.cronutils.model.Cron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|32", com.cronutils.model.definition.CronDefinition.class, mockDefinition), eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.cronutils.model.field.CronField>>observeState("com.cronutils.utils.descriptor.CronDescriptorTest|testNearestWeekdayToNthOfMonth()|33", java.util.List.class, results))))));
    }
}

