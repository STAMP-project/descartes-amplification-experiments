package com.cronutils;


public class Issue143Test {
    private com.cronutils.parser.CronParser parser;

    private org.threeten.bp.ZonedDateTime currentDateTime;

    @org.junit.Before
    public void setUp() throws java.lang.Exception {
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|setUp()|2", org.threeten.bp.ZonedDateTime.class, // Make sure that current date is before Dec-31
        (currentDateTime = org.threeten.bp.ZonedDateTime.of(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue143Test|setUp()|0", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2016, 12, 20, 12, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneId>observeState("com.cronutils.Issue143Test|setUp()|1", org.threeten.bp.ZoneId.class, org.threeten.bp.ZoneId.systemDefault()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue143Test|setUp()|5", com.cronutils.parser.CronParser.class, (parser = new com.cronutils.parser.CronParser(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.definition.CronDefinition>observeState("com.cronutils.Issue143Test|setUp()|4", com.cronutils.model.definition.CronDefinition.class, com.cronutils.model.definition.CronDefinitionBuilder.instanceDefinitionFor(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.CronType>observeState("com.cronutils.Issue143Test|setUp()|3", com.cronutils.model.CronType.class, com.cronutils.model.CronType.QUARTZ))))));
    }

    @org.junit.Test
    public void testCase1() {
        com.cronutils.model.time.ExecutionTime et = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue143Test|testCase1()|2", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue143Test|testCase1()|1", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue143Test|testCase1()|0", com.cronutils.parser.CronParser.class, parser).parse("0 0 12 31 12 ? *"))));
        org.threeten.bp.ZonedDateTime actual = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase1()|6", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.Issue143Test|testCase1()|5", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue143Test|testCase1()|3", com.cronutils.model.time.ExecutionTime.class, et).lastExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase1()|4", org.threeten.bp.ZonedDateTime.class, currentDateTime))).get());
        org.threeten.bp.ZonedDateTime expected = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase1()|9", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue143Test|testCase1()|7", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2015, 12, 31, 12, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneId>observeState("com.cronutils.Issue143Test|testCase1()|8", org.threeten.bp.ZoneId.class, org.threeten.bp.ZoneId.systemDefault())));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase1()|10", org.threeten.bp.ZonedDateTime.class, expected), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase1()|11", org.threeten.bp.ZonedDateTime.class, actual));
    }

    // @Test
    public void testCase2() {
        com.cronutils.model.time.ExecutionTime et = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue143Test|testCase2()|2", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue143Test|testCase2()|1", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue143Test|testCase2()|0", com.cronutils.parser.CronParser.class, parser).parse("0 0 12 ? 12 SAT#5 *"))));
        org.threeten.bp.ZonedDateTime actual = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase2()|6", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.Issue143Test|testCase2()|5", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue143Test|testCase2()|3", com.cronutils.model.time.ExecutionTime.class, et).lastExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase2()|4", org.threeten.bp.ZonedDateTime.class, currentDateTime))).get());
        org.threeten.bp.ZonedDateTime expected = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase2()|9", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue143Test|testCase2()|7", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2012, 12, 29, 12, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneId>observeState("com.cronutils.Issue143Test|testCase2()|8", org.threeten.bp.ZoneId.class, org.threeten.bp.ZoneId.systemDefault())));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase2()|10", org.threeten.bp.ZonedDateTime.class, expected), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase2()|11", org.threeten.bp.ZonedDateTime.class, actual));
    }

    // @Test
    public void testCase3() {
        com.cronutils.model.time.ExecutionTime et = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue143Test|testCase3()|2", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue143Test|testCase3()|1", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue143Test|testCase3()|0", com.cronutils.parser.CronParser.class, parser).parse("0 0 12 31 1/1 ? *"))));
        org.threeten.bp.ZonedDateTime actual = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase3()|6", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.Issue143Test|testCase3()|5", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue143Test|testCase3()|3", com.cronutils.model.time.ExecutionTime.class, et).lastExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase3()|4", org.threeten.bp.ZonedDateTime.class, currentDateTime))).get());
        org.threeten.bp.ZonedDateTime expected = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase3()|9", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue143Test|testCase3()|7", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2015, 12, 31, 12, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneId>observeState("com.cronutils.Issue143Test|testCase3()|8", org.threeten.bp.ZoneId.class, org.threeten.bp.ZoneId.systemDefault())));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase3()|10", org.threeten.bp.ZonedDateTime.class, expected), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase3()|11", org.threeten.bp.ZonedDateTime.class, actual));
    }

    // @Test
    public void testCase4() {
        com.cronutils.model.time.ExecutionTime et = eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue143Test|testCase4()|2", com.cronutils.model.time.ExecutionTime.class, com.cronutils.model.time.ExecutionTime.forCron(eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.Cron>observeState("com.cronutils.Issue143Test|testCase4()|1", com.cronutils.model.Cron.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.parser.CronParser>observeState("com.cronutils.Issue143Test|testCase4()|0", com.cronutils.parser.CronParser.class, parser).parse("0 0 12 ? 1/1 SAT#5 *"))));
        org.threeten.bp.ZonedDateTime actual = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase4()|6", org.threeten.bp.ZonedDateTime.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.base.Optional<org.threeten.bp.ZonedDateTime>>observeState("com.cronutils.Issue143Test|testCase4()|5", com.google.common.base.Optional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.cronutils.model.time.ExecutionTime>observeState("com.cronutils.Issue143Test|testCase4()|3", com.cronutils.model.time.ExecutionTime.class, et).lastExecution(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase4()|4", org.threeten.bp.ZonedDateTime.class, currentDateTime))).get());
        org.threeten.bp.ZonedDateTime expected = eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase4()|9", org.threeten.bp.ZonedDateTime.class, org.threeten.bp.ZonedDateTime.of(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.LocalDateTime>observeState("com.cronutils.Issue143Test|testCase4()|7", org.threeten.bp.LocalDateTime.class, org.threeten.bp.LocalDateTime.of(2016, 10, 29, 12, 0)), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZoneId>observeState("com.cronutils.Issue143Test|testCase4()|8", org.threeten.bp.ZoneId.class, org.threeten.bp.ZoneId.systemDefault())));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase4()|10", org.threeten.bp.ZonedDateTime.class, expected), eu.stamp_project.reneri.instrumentation.StateObserver.<org.threeten.bp.ZonedDateTime>observeState("com.cronutils.Issue143Test|testCase4()|11", org.threeten.bp.ZonedDateTime.class, actual));
    }
}

