package io.gsonfire.gson;


/**
 *
 *
 * @unknown joao
 */
public class ExcludeByValueTest {
    @org.junit.Test
    public void testNonExclusion() {
        io.gsonfire.GsonFireBuilder builder = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|1", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).enableExclusionByValue());
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|2", io.gsonfire.GsonFireBuilder.class, builder).createGson());
        io.gsonfire.gson.ExcludeByValueTest.A a = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|4", io.gsonfire.gson.ExcludeByValueTest.A.class, new io.gsonfire.gson.ExcludeByValueTest.A());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|6", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|5", io.gsonfire.gson.ExcludeByValueTest.A.class, a).str1 = "str1"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.B>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|8", io.gsonfire.gson.ExcludeByValueTest.B.class, (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|7", io.gsonfire.gson.ExcludeByValueTest.A.class, a).b = new io.gsonfire.gson.ExcludeByValueTest.B()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|11", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.B>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|10", io.gsonfire.gson.ExcludeByValueTest.B.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|9", io.gsonfire.gson.ExcludeByValueTest.A.class, a).b).str1 = "str1"));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|14", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.B>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|13", io.gsonfire.gson.ExcludeByValueTest.B.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|12", io.gsonfire.gson.ExcludeByValueTest.A.class, a).b).str2 = "str2"));
        com.google.gson.JsonObject obj = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|18", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|17", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|15", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|16", io.gsonfire.gson.ExcludeByValueTest.A.class, a))).getAsJsonObject());
        org.junit.Assert.assertEquals("str1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|20", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|19", com.google.gson.JsonObject.class, obj).get("str1")).getAsString()));
        org.junit.Assert.assertEquals("str1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|25", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|24", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|23", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|22", com.google.gson.JsonObject.class, obj).get("b")).getAsJsonObject()).get("str1")).getAsString()));
        org.junit.Assert.assertEquals("str2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|31", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|30", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|29", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|28", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testNonExclusion()|27", com.google.gson.JsonObject.class, obj).get("b")).getAsJsonObject()).get("str2")).getAsString()));
    }

    @org.junit.Test
    public void testExclusion() {
        io.gsonfire.GsonFireBuilder builder = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|1", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).enableExclusionByValue());
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|2", io.gsonfire.GsonFireBuilder.class, builder).createGson());
        io.gsonfire.gson.ExcludeByValueTest.A a = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|4", io.gsonfire.gson.ExcludeByValueTest.A.class, new io.gsonfire.gson.ExcludeByValueTest.A());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|6", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|5", io.gsonfire.gson.ExcludeByValueTest.A.class, a).str1 = ""));
        eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.B>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|8", io.gsonfire.gson.ExcludeByValueTest.B.class, (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|7", io.gsonfire.gson.ExcludeByValueTest.A.class, a).b = new io.gsonfire.gson.ExcludeByValueTest.B()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|11", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.B>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|10", io.gsonfire.gson.ExcludeByValueTest.B.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|9", io.gsonfire.gson.ExcludeByValueTest.A.class, a).b).str1 = ""));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|14", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.B>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|13", io.gsonfire.gson.ExcludeByValueTest.B.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|12", io.gsonfire.gson.ExcludeByValueTest.A.class, a).b).str2 = ""));
        com.google.gson.JsonObject obj = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|18", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|17", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|15", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.ExcludeByValueTest.A>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|16", io.gsonfire.gson.ExcludeByValueTest.A.class, a))).getAsJsonObject());
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|19", com.google.gson.JsonObject.class, obj).has("str1")));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|21", com.google.gson.JsonObject.class, obj).has("b")));
        org.junit.Assert.assertFalse(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|25", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|24", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|23", com.google.gson.JsonObject.class, obj).get("b")).getAsJsonObject()).has("str1")));
        org.junit.Assert.assertEquals("", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|31", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|30", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|29", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|28", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.ExcludeByValueTest|testExclusion()|27", com.google.gson.JsonObject.class, obj).get("b")).getAsJsonObject()).get("str2")).getAsString()));
    }

    private class A {
        @com.google.gson.annotations.Expose
        @io.gsonfire.annotations.ExcludeByValue(io.gsonfire.gson.ExcludeByValueTest.ExcludeEmptyStringsStrategy.class)
        public java.lang.String str1;

        @com.google.gson.annotations.Expose
        public io.gsonfire.gson.ExcludeByValueTest.B b;
    }

    private class B {
        @com.google.gson.annotations.Expose
        @io.gsonfire.annotations.ExcludeByValue(io.gsonfire.gson.ExcludeByValueTest.ExcludeEmptyStringsStrategy.class)
        public java.lang.String str1;

        @com.google.gson.annotations.Expose
        public java.lang.String str2;
    }

    public static class ExcludeEmptyStringsStrategy implements io.gsonfire.gson.ExclusionByValueStrategy<java.lang.String> {
        @java.lang.Override
        public boolean shouldSkipField(java.lang.String fieldValue) {
            return "".equals(fieldValue);
        }
    }
}

