package io.gsonfire.gson;


/**
 * Created by asanchez on 19/02/16.
 */
public class WrapTest {
    @org.junit.Test
    public void testWrap() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testWrap()|6", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.WrapTest|testWrap()|5", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.WrapTest|testWrap()|4", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.WrapTest|testWrap()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.WrapTest|testWrap()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).wrap(io.gsonfire.gson.WrapTest.A.class, new io.gsonfire.util.Mapper<io.gsonfire.gson.WrapTest.A, java.lang.String>() {
            @java.lang.Override
            public java.lang.String map(io.gsonfire.gson.WrapTest.A from) {
                return "aWrap";
            }
        })).wrap(io.gsonfire.gson.WrapTest.B.class, new io.gsonfire.util.Mapper<io.gsonfire.gson.WrapTest.B, java.lang.String>() {
            @java.lang.Override
            public java.lang.String map(io.gsonfire.gson.WrapTest.B from) {
                return "bWrap";
            }
        })).wrap(io.gsonfire.gson.WrapTest.D.class, "dWrap")).createGson());
        // Wrap A class
        io.gsonfire.gson.WrapTest.A a = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.A>observeState("io.gsonfire.gson.WrapTest|testWrap()|7", io.gsonfire.gson.WrapTest.A.class, new io.gsonfire.gson.WrapTest.A());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|9", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.A>observeState("io.gsonfire.gson.WrapTest|testWrap()|8", io.gsonfire.gson.WrapTest.A.class, a).str1 = "str1"));
        com.google.gson.JsonObject obj1 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|13", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|12", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testWrap()|10", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.A>observeState("io.gsonfire.gson.WrapTest|testWrap()|11", io.gsonfire.gson.WrapTest.A.class, a))).getAsJsonObject());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|15", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|14", com.google.gson.JsonObject.class, obj1).get("aWrap")));
        org.junit.Assert.assertEquals("str1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|19", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|18", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|17", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|16", com.google.gson.JsonObject.class, obj1).get("aWrap")).getAsJsonObject()).get("str1")).getAsString()));
        // Wrap B class
        io.gsonfire.gson.WrapTest.B b = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.B>observeState("io.gsonfire.gson.WrapTest|testWrap()|21", io.gsonfire.gson.WrapTest.B.class, new io.gsonfire.gson.WrapTest.B());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|23", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.B>observeState("io.gsonfire.gson.WrapTest|testWrap()|22", io.gsonfire.gson.WrapTest.B.class, b).str2 = "str2"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.A>observeState("io.gsonfire.gson.WrapTest|testWrap()|25", io.gsonfire.gson.WrapTest.A.class, (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.B>observeState("io.gsonfire.gson.WrapTest|testWrap()|24", io.gsonfire.gson.WrapTest.B.class, b).a = a));
        com.google.gson.JsonObject obj2 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|29", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|28", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testWrap()|26", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.B>observeState("io.gsonfire.gson.WrapTest|testWrap()|27", io.gsonfire.gson.WrapTest.B.class, b))).getAsJsonObject());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|31", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|30", com.google.gson.JsonObject.class, obj2).get("bWrap")));
        org.junit.Assert.assertEquals("str2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|36", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|35", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|34", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|33", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|32", com.google.gson.JsonObject.class, obj2).get("bWrap")).getAsJsonObject()).get("str2")).getAsString()));
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|40", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|39", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|38", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|37", com.google.gson.JsonObject.class, obj2).get("bWrap")).getAsJsonObject()).get("a")));
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|46", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|45", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|44", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|43", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|42", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|41", com.google.gson.JsonObject.class, obj2).get("bWrap")).getAsJsonObject()).get("a")).getAsJsonObject()).get("aWrap")));
        org.junit.Assert.assertEquals("str1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|55", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|54", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|53", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|52", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|51", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|50", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|49", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|48", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|47", com.google.gson.JsonObject.class, obj2).get("bWrap")).getAsJsonObject()).get("a")).getAsJsonObject()).get("aWrap")).getAsJsonObject()).get("str1")).getAsString()));
        // Wrap C class (it is not wrapped)
        io.gsonfire.gson.WrapTest.C c = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.C>observeState("io.gsonfire.gson.WrapTest|testWrap()|56", io.gsonfire.gson.WrapTest.C.class, new io.gsonfire.gson.WrapTest.C());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|58", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.C>observeState("io.gsonfire.gson.WrapTest|testWrap()|57", io.gsonfire.gson.WrapTest.C.class, c).str1 = "str1"));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|60", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.C>observeState("io.gsonfire.gson.WrapTest|testWrap()|59", io.gsonfire.gson.WrapTest.C.class, c).str2 = "str2"));
        com.google.gson.JsonObject obj3 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|64", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|63", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testWrap()|61", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.C>observeState("io.gsonfire.gson.WrapTest|testWrap()|62", io.gsonfire.gson.WrapTest.C.class, c))).getAsJsonObject());
        org.junit.Assert.assertEquals("str1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|67", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|66", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|65", com.google.gson.JsonObject.class, obj3).get("str1")).getAsString()));
        org.junit.Assert.assertEquals("str2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|70", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|69", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|68", com.google.gson.JsonObject.class, obj3).get("str2")).getAsString()));
        // Wrap D class
        io.gsonfire.gson.WrapTest.D d = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.D>observeState("io.gsonfire.gson.WrapTest|testWrap()|71", io.gsonfire.gson.WrapTest.D.class, new io.gsonfire.gson.WrapTest.D());
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|73", (eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.D>observeState("io.gsonfire.gson.WrapTest|testWrap()|72", io.gsonfire.gson.WrapTest.D.class, d).str1 = "str1"));
        com.google.gson.JsonObject obj4 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|77", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|76", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testWrap()|74", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.D>observeState("io.gsonfire.gson.WrapTest|testWrap()|75", io.gsonfire.gson.WrapTest.D.class, d))).getAsJsonObject());
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|79", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|78", com.google.gson.JsonObject.class, obj4).get("dWrap")));
        org.junit.Assert.assertEquals("str1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testWrap()|84", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|83", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|82", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testWrap()|81", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testWrap()|80", com.google.gson.JsonObject.class, obj4).get("dWrap")).getAsJsonObject()).get("str1")).getAsString()));
    }

    @org.junit.Test
    public void testUnwrap() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|6", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|5", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|4", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).wrap(io.gsonfire.gson.WrapTest.A.class, new io.gsonfire.util.Mapper<io.gsonfire.gson.WrapTest.A, java.lang.String>() {
            @java.lang.Override
            public java.lang.String map(io.gsonfire.gson.WrapTest.A from) {
                return "aWrap";
            }
        })).wrap(io.gsonfire.gson.WrapTest.B.class, new io.gsonfire.util.Mapper<io.gsonfire.gson.WrapTest.B, java.lang.String>() {
            @java.lang.Override
            public java.lang.String map(io.gsonfire.gson.WrapTest.B from) {
                return "bWrap";
            }
        })).wrap(io.gsonfire.gson.WrapTest.D.class, "dWrap")).createGson());
        // Unwrap A class
        com.google.gson.JsonParser jsonParser = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonParser>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|7", com.google.gson.JsonParser.class, new com.google.gson.JsonParser());
        final com.google.gson.JsonObject aJson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|10", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|9", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonParser>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|8", com.google.gson.JsonParser.class, jsonParser).parse(("{\n" + ((("    aWrap: {\n" + "      str1: \"v1\"\n") + "    }\n") + "}")))).getAsJsonObject());
        final io.gsonfire.gson.WrapTest.A a = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.A>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|13", io.gsonfire.gson.WrapTest.A.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|11", com.google.gson.Gson.class, gson).fromJson(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|12", com.google.gson.JsonObject.class, aJson), io.gsonfire.gson.WrapTest.A.class));
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.A>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|14", io.gsonfire.gson.WrapTest.A.class, a));
        org.junit.Assert.assertEquals("v1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testUnwrap()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.A>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|15", io.gsonfire.gson.WrapTest.A.class, a).str1));
        // Unwrap B class
        final com.google.gson.JsonObject bJson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|19", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|18", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonParser>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|17", com.google.gson.JsonParser.class, jsonParser).parse(("{\n" + (((((((("  bWrap: {\n" + "    a: {\n") + "      aWrap: {\n") + "        str1: \"v1\"\n") + "      }\n") + "    },\n") + "    str2: \"v2\"\n") + "  }\n") + "}")))).getAsJsonObject());
        final io.gsonfire.gson.WrapTest.B b = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.B>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|22", io.gsonfire.gson.WrapTest.B.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|20", com.google.gson.Gson.class, gson).fromJson(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|21", com.google.gson.JsonObject.class, bJson), io.gsonfire.gson.WrapTest.B.class));
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.B>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|23", io.gsonfire.gson.WrapTest.B.class, b));
        org.junit.Assert.assertEquals("v2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testUnwrap()|25", eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.B>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|24", io.gsonfire.gson.WrapTest.B.class, b).str2));
        org.junit.Assert.assertEquals("v1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testUnwrap()|28", eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.A>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|27", io.gsonfire.gson.WrapTest.A.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.B>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|26", io.gsonfire.gson.WrapTest.B.class, b).a).str1));
        // Unwrap C class (it is not unwrapped)
        final com.google.gson.JsonObject cJson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|31", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|30", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonParser>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|29", com.google.gson.JsonParser.class, jsonParser).parse(("{\n" + (("  str1: \"v1\",\n" + "  str2: \"v2\"\n") + "}")))).getAsJsonObject());
        final io.gsonfire.gson.WrapTest.C c = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.C>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|34", io.gsonfire.gson.WrapTest.C.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|32", com.google.gson.Gson.class, gson).fromJson(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|33", com.google.gson.JsonObject.class, cJson), io.gsonfire.gson.WrapTest.C.class));
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.C>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|35", io.gsonfire.gson.WrapTest.C.class, c));
        org.junit.Assert.assertEquals("v1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testUnwrap()|37", eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.C>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|36", io.gsonfire.gson.WrapTest.C.class, c).str1));
        org.junit.Assert.assertEquals("v2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testUnwrap()|39", eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.C>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|38", io.gsonfire.gson.WrapTest.C.class, c).str2));
        // Unwrap D class
        final com.google.gson.JsonObject dJson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|42", com.google.gson.JsonObject.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|41", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonParser>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|40", com.google.gson.JsonParser.class, jsonParser).parse(("{\n" + ((("  dWrap: {\n" + "    str1: \"v1\"\n") + "  }\n") + "}")))).getAsJsonObject());
        final io.gsonfire.gson.WrapTest.D d = eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.D>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|45", io.gsonfire.gson.WrapTest.D.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|43", com.google.gson.Gson.class, gson).fromJson(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|44", com.google.gson.JsonObject.class, dJson), io.gsonfire.gson.WrapTest.D.class));
        org.junit.Assert.assertNotNull(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.D>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|46", io.gsonfire.gson.WrapTest.D.class, d));
        org.junit.Assert.assertEquals("v1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.WrapTest|testUnwrap()|48", eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.gson.WrapTest.D>observeState("io.gsonfire.gson.WrapTest|testUnwrap()|47", io.gsonfire.gson.WrapTest.D.class, d).str1));
    }

    private class A {
        @com.google.gson.annotations.Expose
        public java.lang.String str1;
    }

    private class B {
        @com.google.gson.annotations.Expose
        public java.lang.String str2;

        @com.google.gson.annotations.Expose
        public io.gsonfire.gson.WrapTest.A a;
    }

    private class C {
        @com.google.gson.annotations.Expose
        public java.lang.String str1;

        @com.google.gson.annotations.Expose
        public java.lang.String str2;
    }

    private class D {
        @com.google.gson.annotations.Expose
        public java.lang.String str1;
    }
}

