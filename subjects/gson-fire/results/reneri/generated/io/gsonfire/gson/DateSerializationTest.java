package io.gsonfire.gson;


/**
 *
 *
 * @unknown julio
 */
public class DateSerializationTest {
    private static final java.util.TimeZone NY_TIMEZONE = java.util.TimeZone.getTimeZone("America/New_York");

    private static final java.util.TimeZone CCS_TIMEZONE = java.util.TimeZone.getTimeZone("America/Caracas");

    @org.junit.Test
    public void testUnixTimestampSeconds_serialize() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.unixTimeSeconds))).createGson());
        final java.util.Date date = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|4", java.util.Date.class, new java.util.Date());
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|7", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|5", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|6", java.util.Date.class, date)));
        org.junit.Assert.assertEquals(((eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|8", java.util.Date.class, date).getTime())) / 1000L), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize()|10", com.google.gson.JsonElement.class, element).getAsLong()));
    }

    @org.junit.Test
    public void testUnixTimestampSeconds_deserialize() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.unixTimeSeconds))).createGson());
        long timeNoMillis = (eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|4", java.lang.System.currentTimeMillis())) / 1000L;
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|6", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|5", timeNoMillis)));
        java.util.Date parsedDate = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|9", java.util.Date.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|7", com.google.gson.Gson.class, gson).fromJson(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|8", com.google.gson.JsonElement.class, element), java.util.Date.class));
        org.junit.Assert.assertEquals(((eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|10", timeNoMillis)) * 1000), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_deserialize()|11", java.util.Date.class, parsedDate).getTime()));
    }

    @org.junit.Test
    public void testUnixTimestampSeconds_serialize_negative() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.unixTimeSeconds))).createGson());
        final java.util.Date date = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|4", java.util.Date.class, new java.util.Date((-1)));
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|7", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|5", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|6", java.util.Date.class, date)));
        org.junit.Assert.assertEquals(((eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|8", java.util.Date.class, date).getTime())) / 1000L), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_negative()|10", com.google.gson.JsonElement.class, element).getAsLong()));
    }

    @org.junit.Test
    public void testUnixTimestampSeconds_serialize_no_negative() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.unixTimePositiveSeconds))).createGson());
        final java.util.Date date = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|4", java.util.Date.class, new java.util.Date((-1)));
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|7", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|5", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|6", java.util.Date.class, date)));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampSeconds_serialize_no_negative()|8", com.google.gson.JsonElement.class, element).isJsonNull()));
    }

    @org.junit.Test
    public void testUnixTimestampMillis_serialize() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.unixTimeMillis))).createGson());
        final java.util.Date date = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|4", java.util.Date.class, new java.util.Date());
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|7", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|5", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|6", java.util.Date.class, date)));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|8", java.util.Date.class, date).getTime()), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize()|10", com.google.gson.JsonElement.class, element).getAsLong()));
    }

    @org.junit.Test
    public void testUnixTimestampMillis_deserialize() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.unixTimeMillis))).createGson());
        long time = eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|4", java.lang.System.currentTimeMillis());
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|6", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|5", time)));
        java.util.Date parsedDate = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|9", java.util.Date.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|7", com.google.gson.Gson.class, gson).fromJson(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|8", com.google.gson.JsonElement.class, element), java.util.Date.class));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|10", time), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_deserialize()|11", java.util.Date.class, parsedDate).getTime()));
    }

    @org.junit.Test
    public void testUnixTimestampMillis_serialize_negative() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.unixTimeMillis))).createGson());
        final java.util.Date date = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|4", java.util.Date.class, new java.util.Date((-1)));
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|7", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|5", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|6", java.util.Date.class, date)));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|8", java.util.Date.class, date).getTime()), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_negative()|10", com.google.gson.JsonElement.class, element).getAsLong()));
    }

    @org.junit.Test
    public void testUnixTimestampMillis_serialize_no_negative() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|3", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.unixTimePositiveMillis))).createGson());
        final java.util.Date date = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|4", java.util.Date.class, new java.util.Date((-1)));
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|7", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|5", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|6", java.util.Date.class, date)));
        org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testUnixTimestampMillis_serialize_no_negative()|8", com.google.gson.JsonElement.class, element).isJsonNull()));
    }

    @org.junit.Test
    public void testRFC3339_serialize_NY() {
        java.util.TimeZone.setDefault(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.TimeZone>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|0", java.util.TimeZone.class, io.gsonfire.gson.DateSerializationTest.NY_TIMEZONE));
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|6", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|5", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|3", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|1", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|2", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.rfc3339))).serializeTimeZone(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.TimeZone>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|4", java.util.TimeZone.class, io.gsonfire.gson.DateSerializationTest.NY_TIMEZONE))).createGson());
        final java.util.Date date = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|7", java.util.Date.class, new java.util.Date(1360204148123L));
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|10", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|8", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|9", java.util.Date.class, date)));
        org.junit.Assert.assertEquals("2013-02-06T21:29:08.123-05:00", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_NY()|11", com.google.gson.JsonElement.class, element).getAsString()));
    }

    @org.junit.Test
    public void testRFC3339_deserialize_NY() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|5", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|4", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.rfc3339))).serializeTimeZone(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.TimeZone>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|3", java.util.TimeZone.class, io.gsonfire.gson.DateSerializationTest.NY_TIMEZONE))).createGson());
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|6", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive("2013-02-06T21:29:08.123-05:00"));
        java.util.Date parsedDate = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|9", java.util.Date.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|7", com.google.gson.Gson.class, gson).fromJson(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|8", com.google.gson.JsonElement.class, element), java.util.Date.class));
        final java.util.Date expected = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|10", java.util.Date.class, new java.util.Date(1360204148123L));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|11", java.util.Date.class, expected).getTime()), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_NY()|13", java.util.Date.class, parsedDate).getTime()));
    }

    @org.junit.Test
    public void testRFC3339_serialize_CCS() {
        java.util.TimeZone.setDefault(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.TimeZone>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|0", java.util.TimeZone.class, io.gsonfire.gson.DateSerializationTest.NY_TIMEZONE));
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|6", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|5", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|3", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|1", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|2", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.rfc3339))).serializeTimeZone(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.TimeZone>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|4", java.util.TimeZone.class, io.gsonfire.gson.DateSerializationTest.CCS_TIMEZONE))).createGson());
        final java.util.Date date = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|7", java.util.Date.class, new java.util.Date(1360204148123L));
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|10", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|8", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|9", java.util.Date.class, date)));
        org.junit.Assert.assertEquals("2013-02-06T21:59:08.123-04:30", eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_serialize_CCS()|11", com.google.gson.JsonElement.class, element).getAsString()));
    }

    @org.junit.Test
    public void testRFC3339_deserialize_CSS() {
        com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|5", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|4", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|2", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|0", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|1", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.rfc3339))).serializeTimeZone(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.TimeZone>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|3", java.util.TimeZone.class, io.gsonfire.gson.DateSerializationTest.CCS_TIMEZONE))).createGson());
        com.google.gson.JsonElement element = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|6", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive("2013-02-06T21:59:08.123-04:30"));
        java.util.Date parsedDate = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|9", java.util.Date.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|7", com.google.gson.Gson.class, gson).fromJson(eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|8", com.google.gson.JsonElement.class, element), java.util.Date.class));
        final java.util.Date expected = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|10", java.util.Date.class, new java.util.Date(1360204148123L));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|11", java.util.Date.class, expected).getTime()), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_deserialize_CSS()|13", java.util.Date.class, parsedDate).getTime()));
    }

    @org.junit.Test
    public void test_nullDeserialize() {
        for (io.gsonfire.DateSerializationPolicy policy : eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy[]>observeState("io.gsonfire.gson.DateSerializationTest|test_nullDeserialize()|0", io.gsonfire.DateSerializationPolicy[].class, io.gsonfire.DateSerializationPolicy.values())) {
            com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|test_nullDeserialize()|4", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|test_nullDeserialize()|3", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|test_nullDeserialize()|1", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|test_nullDeserialize()|2", io.gsonfire.DateSerializationPolicy.class, policy))).createGson());
            java.util.Date date = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|test_nullDeserialize()|6", java.util.Date.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|test_nullDeserialize()|5", com.google.gson.Gson.class, gson).fromJson("null", java.util.Date.class));
            org.junit.Assert.assertNull(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|test_nullDeserialize()|7", java.util.Date.class, date));
        }
    }

    @org.junit.Test
    public void test_nullSerialize() {
        for (io.gsonfire.DateSerializationPolicy policy : eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy[]>observeState("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|0", io.gsonfire.DateSerializationPolicy[].class, io.gsonfire.DateSerializationPolicy.values())) {
            com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|4", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|3", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|1", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|2", io.gsonfire.DateSerializationPolicy.class, policy))).createGson());
            java.util.Date date = null;
            com.google.gson.JsonElement jsonElement = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|7", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|5", com.google.gson.Gson.class, gson).toJsonTree(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|6", java.util.Date.class, date)));
            org.junit.Assert.assertTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("io.gsonfire.gson.DateSerializationTest|test_nullSerialize()|8", com.google.gson.JsonElement.class, jsonElement).isJsonNull()));
        }
    }

    @org.junit.Test
    public void testRFC3339_raceCondition() throws java.lang.InterruptedException {
        java.util.TimeZone.setDefault(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.TimeZone>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|0", java.util.TimeZone.class, io.gsonfire.gson.DateSerializationTest.NY_TIMEZONE));
        final com.google.gson.Gson gson = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|6", com.google.gson.Gson.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|5", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|3", io.gsonfire.GsonFireBuilder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.GsonFireBuilder>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|1", io.gsonfire.GsonFireBuilder.class, new io.gsonfire.GsonFireBuilder()).dateSerializationPolicy(eu.stamp_project.reneri.instrumentation.StateObserver.<io.gsonfire.DateSerializationPolicy>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|2", io.gsonfire.DateSerializationPolicy.class, io.gsonfire.DateSerializationPolicy.rfc3339))).serializeTimeZone(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.TimeZone>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|4", java.util.TimeZone.class, io.gsonfire.gson.DateSerializationTest.CCS_TIMEZONE))).createGson());
        final java.util.concurrent.atomic.AtomicBoolean active = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.concurrent.atomic.AtomicBoolean>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|7", java.util.concurrent.atomic.AtomicBoolean.class, new java.util.concurrent.atomic.AtomicBoolean(true));
        final java.util.Random random = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Random>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|8", java.util.Random.class, new java.util.Random());
        final java.util.concurrent.atomic.AtomicInteger successCount = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.concurrent.atomic.AtomicInteger>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|9", java.util.concurrent.atomic.AtomicInteger.class, new java.util.concurrent.atomic.AtomicInteger());
        final int threadCount = 50;
        for (int i = 0; (eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|10", i)) < (eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|11", threadCount)); i++) {
            new java.lang.Thread() {
                @java.lang.Override
                public void run() {
                    while (eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.concurrent.atomic.AtomicBoolean>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|13", java.util.concurrent.atomic.AtomicBoolean.class, active).get())) {
                        long timestamp = ((long) ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Random>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|15", java.util.Random.class, random).nextDouble())) + (java.lang.Long.MAX_VALUE)));
                        java.util.Date dateToSerialize = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|18", java.util.Date.class, new java.util.Date(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|17", timestamp)));
                        java.lang.String serialized = eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|19", com.google.gson.Gson.class, gson).toJson(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|20", java.util.Date.class, dateToSerialize)));
                        java.util.Date dateDeserialized = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|24", java.util.Date.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.Gson>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|22", com.google.gson.Gson.class, gson).fromJson(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|23", serialized), java.util.Date.class));
                        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|25", timestamp), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|27", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Date>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|26", java.util.Date.class, dateDeserialized).getTime()));
                    } 
                    eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|29", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.concurrent.atomic.AtomicInteger>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|28", java.util.concurrent.atomic.AtomicInteger.class, successCount).incrementAndGet());
                }
            }.start();
        }
        java.lang.Thread.sleep(500);
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.concurrent.atomic.AtomicBoolean>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|30", java.util.concurrent.atomic.AtomicBoolean.class, active).set(false);
        java.lang.Thread.sleep(100);
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|31", threadCount), eu.stamp_project.reneri.instrumentation.StateObserver.observe("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|33", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.concurrent.atomic.AtomicInteger>observeState("io.gsonfire.gson.DateSerializationTest|testRFC3339_raceCondition()|32", java.util.concurrent.atomic.AtomicInteger.class, successCount).get()));
    }
}

