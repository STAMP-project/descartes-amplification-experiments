package cn.jpush.api.push;


public class PushClientTest extends cn.jpush.api.BaseTest {
    protected static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(cn.jpush.api.push.PushClientTest.class);

    @org.junit.Test
    public void testSendPush() {
        cn.jiguang.common.ClientConfig clientConfig = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.ClientConfig>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|0", cn.jiguang.common.ClientConfig.class, cn.jiguang.common.ClientConfig.getInstance());
        cn.jpush.api.JPushClient jpushClient = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.JPushClient>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|2", cn.jpush.api.JPushClient.class, new cn.jpush.api.JPushClient(cn.jpush.api.BaseTest.MASTER_SECRET, cn.jpush.api.BaseTest.APP_KEY, null, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.ClientConfig>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|1", cn.jiguang.common.ClientConfig.class, clientConfig)));
        cn.jpush.api.push.model.PushPayload payload = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|3", cn.jpush.api.push.model.PushPayload.class, cn.jpush.api.push.PushClientTest.buildPushObject_all_alias_alert());
        try {
            cn.jpush.api.push.PushResult result = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushResult>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|6", cn.jpush.api.push.PushResult.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.JPushClient>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|4", cn.jpush.api.JPushClient.class, jpushClient).sendPush(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|5", cn.jpush.api.push.model.PushPayload.class, payload)));
            int status = eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPush()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushResult>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|7", cn.jpush.api.push.PushResult.class, result).getResponseCode());
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|9", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Got result - " + (eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushResult>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|10", cn.jpush.api.push.PushResult.class, result))));
        } catch (cn.jiguang.common.resp.APIConnectionException e) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|11", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).error("Connection error. Should retry later. ", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIConnectionException>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|12", cn.jiguang.common.resp.APIConnectionException.class, e));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|13", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).error(("Sendno: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPush()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|14", cn.jpush.api.push.model.PushPayload.class, payload).getSendno()))));
        } catch (cn.jiguang.common.resp.APIRequestException e) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|16", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).error("Error response from JPush server. Should review and fix it. ", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|17", cn.jiguang.common.resp.APIRequestException.class, e));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|18", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("HTTP Status: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPush()|20", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|19", cn.jiguang.common.resp.APIRequestException.class, e).getStatus()))));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|21", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Error Code: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPush()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|22", cn.jiguang.common.resp.APIRequestException.class, e).getErrorCode()))));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|24", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Error Message: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPush()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|25", cn.jiguang.common.resp.APIRequestException.class, e).getErrorMessage()))));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|27", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Msg ID: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPush()|29", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|28", cn.jiguang.common.resp.APIRequestException.class, e).getMsgId()))));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|30", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).error(("Sendno: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPush()|32", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|testSendPush()|31", cn.jpush.api.push.model.PushPayload.class, payload).getSendno()))));
        }
    }

    @org.junit.Test
    public void testSendPushWithCallback() {
        cn.jiguang.common.ClientConfig clientConfig = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.ClientConfig>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|0", cn.jiguang.common.ClientConfig.class, cn.jiguang.common.ClientConfig.getInstance());
        java.lang.String host = eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|2", ((java.lang.String) (eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.ClientConfig>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|1", cn.jiguang.common.ClientConfig.class, clientConfig).get(cn.jiguang.common.ClientConfig.PUSH_HOST_NAME))));
        final cn.jiguang.common.connection.NettyHttpClient client = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.connection.NettyHttpClient>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|5", cn.jiguang.common.connection.NettyHttpClient.class, new cn.jiguang.common.connection.NettyHttpClient(eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|3", cn.jiguang.common.ServiceHelper.getBasicAuthorization(cn.jpush.api.BaseTest.APP_KEY, cn.jpush.api.BaseTest.MASTER_SECRET)), null, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.ClientConfig>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|4", cn.jiguang.common.ClientConfig.class, clientConfig)));
        try {
            java.net.URI uri = eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URI>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|9", java.net.URI.class, new java.net.URI(((eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|6", host)) + (eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|8", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.ClientConfig>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|7", cn.jiguang.common.ClientConfig.class, clientConfig).get(cn.jiguang.common.ClientConfig.PUSH_PATH))))));
            cn.jpush.api.push.model.PushPayload payload = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|10", cn.jpush.api.push.model.PushPayload.class, cn.jpush.api.push.PushClientTest.buildPushObject_all_alias_alert());
            eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.connection.NettyHttpClient>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|11", cn.jiguang.common.connection.NettyHttpClient.class, client).sendRequest(eu.stamp_project.reneri.instrumentation.StateObserver.<io.netty.handler.codec.http.HttpMethod>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|12", io.netty.handler.codec.http.HttpMethod.class, io.netty.handler.codec.http.HttpMethod.POST), eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|13", cn.jpush.api.push.model.PushPayload.class, payload).toString()), eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URI>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|15", java.net.URI.class, uri), new cn.jiguang.common.connection.NettyHttpClient.BaseCallback() {
                @java.lang.Override
                public void onSucceed(cn.jiguang.common.resp.ResponseWrapper responseWrapper) {
                    eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|17", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Got result: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.ResponseWrapper>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|18", cn.jiguang.common.resp.ResponseWrapper.class, responseWrapper).responseContent))));
                }
            });
        } catch (java.net.URISyntaxException e) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URISyntaxException>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCallback()|20", java.net.URISyntaxException.class, e).printStackTrace();
        }
    }

    public static cn.jpush.api.push.model.PushPayload buildPushObject_all_alias_alert() {
        return eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|12", cn.jpush.api.push.model.PushPayload.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|11", cn.jpush.api.push.model.PushPayload.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|6", cn.jpush.api.push.model.PushPayload.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|4", cn.jpush.api.push.model.PushPayload.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|2", cn.jpush.api.push.model.PushPayload.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|0", cn.jpush.api.push.model.PushPayload.Builder.class, cn.jpush.api.push.model.PushPayload.newBuilder()).setPlatform(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|1", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()))).setAudience(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|3", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.registrationId(cn.jpush.api.BaseTest.REGISTRATION_ID3)))).setNotification(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.notification.Notification>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|5", cn.jpush.api.push.model.notification.Notification.class, cn.jpush.api.push.model.notification.Notification.alert(cn.jpush.api.BaseTest.ALERT)))).setOptions(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Options>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|10", cn.jpush.api.push.model.Options.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Options.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|9", cn.jpush.api.push.model.Options.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Options.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|8", cn.jpush.api.push.model.Options.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Options.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_all_alias_alert()|7", cn.jpush.api.push.model.Options.Builder.class, cn.jpush.api.push.model.Options.newBuilder()).setApnsProduction(false)).setTimeToLive(86000)).build()))).build());
    }

    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void test_invalid_json() {
        try {
            cn.jpush.api.push.PushClient pushClient = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushClient>observeState("cn.jpush.api.push.PushClientTest|test_invalid_json()|0", cn.jpush.api.push.PushClient.class, new cn.jpush.api.push.PushClient(cn.jpush.api.BaseTest.MASTER_SECRET, cn.jpush.api.BaseTest.APP_KEY));
            try {
                eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushResult>observeState("cn.jpush.api.push.PushClientTest|test_invalid_json()|2", cn.jpush.api.push.PushResult.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushClient>observeState("cn.jpush.api.push.PushClientTest|test_invalid_json()|1", cn.jpush.api.push.PushClient.class, pushClient).sendPush("{aaa:'a}"));
            } catch (cn.jiguang.common.resp.APIConnectionException e) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIConnectionException>observeState("cn.jpush.api.push.PushClientTest|test_invalid_json()|3", cn.jiguang.common.resp.APIConnectionException.class, e).printStackTrace();
            } catch (cn.jiguang.common.resp.APIRequestException e) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|test_invalid_json()|4", cn.jiguang.common.resp.APIRequestException.class, e).printStackTrace();
            }
        } catch (java.lang.IllegalArgumentException a1552641512745) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("cn.jpush.api.push.PushClientTest|test_invalid_json()|!", a1552641512745);
            throw a1552641512745;
        }
    }

    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void test_empty_string() {
        try {
            cn.jpush.api.push.PushClient pushClient = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushClient>observeState("cn.jpush.api.push.PushClientTest|test_empty_string()|0", cn.jpush.api.push.PushClient.class, new cn.jpush.api.push.PushClient(cn.jpush.api.BaseTest.MASTER_SECRET, cn.jpush.api.BaseTest.APP_KEY));
            try {
                eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushResult>observeState("cn.jpush.api.push.PushClientTest|test_empty_string()|2", cn.jpush.api.push.PushResult.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushClient>observeState("cn.jpush.api.push.PushClientTest|test_empty_string()|1", cn.jpush.api.push.PushClient.class, pushClient).sendPush(""));
            } catch (cn.jiguang.common.resp.APIConnectionException e) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIConnectionException>observeState("cn.jpush.api.push.PushClientTest|test_empty_string()|3", cn.jiguang.common.resp.APIConnectionException.class, e).printStackTrace();
            } catch (cn.jiguang.common.resp.APIRequestException e) {
                eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|test_empty_string()|4", cn.jiguang.common.resp.APIRequestException.class, e).printStackTrace();
            }
        } catch (java.lang.IllegalArgumentException a1552641512745) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("cn.jpush.api.push.PushClientTest|test_empty_string()|!", a1552641512745);
            throw a1552641512745;
        }
    }

    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void test_empty_password() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.connection.HttpProxy>observeState("cn.jpush.api.push.PushClientTest|test_empty_password()|0", cn.jiguang.common.connection.HttpProxy.class, new cn.jiguang.common.connection.HttpProxy("127.0.0.1", 8080, "", null));
        } catch (java.lang.IllegalArgumentException a1552641512744) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("cn.jpush.api.push.PushClientTest|test_empty_password()|!", a1552641512744);
            throw a1552641512744;
        }
    }

    @org.junit.Test
    public void test_validate() {
        cn.jpush.api.push.PushClient pushClient = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushClient>observeState("cn.jpush.api.push.PushClientTest|test_validate()|0", cn.jpush.api.push.PushClient.class, new cn.jpush.api.push.PushClient(cn.jpush.api.BaseTest.MASTER_SECRET, cn.jpush.api.BaseTest.APP_KEY));
        try {
            cn.jpush.api.push.PushResult result = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushResult>observeState("cn.jpush.api.push.PushClientTest|test_validate()|3", cn.jpush.api.push.PushResult.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushClient>observeState("cn.jpush.api.push.PushClientTest|test_validate()|1", cn.jpush.api.push.PushClient.class, pushClient).sendPushValidate(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|test_validate()|2", cn.jpush.api.push.model.PushPayload.class, cn.jpush.api.push.model.PushPayload.alertAll("alert"))));
            org.junit.Assert.assertTrue("", eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|test_validate()|5", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushResult>observeState("cn.jpush.api.push.PushClientTest|test_validate()|4", cn.jpush.api.push.PushResult.class, result).isResultOK()));
        } catch (cn.jiguang.common.resp.APIRequestException e) {
            org.junit.Assert.fail("Should not fail");
        } catch (cn.jiguang.common.resp.APIConnectionException e) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIConnectionException>observeState("cn.jpush.api.push.PushClientTest|test_validate()|6", cn.jiguang.common.resp.APIConnectionException.class, e).printStackTrace();
        }
    }

    @org.junit.Test
    public void testGetCidList() {
        cn.jpush.api.JPushClient jPushClient = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.JPushClient>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|0", cn.jpush.api.JPushClient.class, new cn.jpush.api.JPushClient(cn.jpush.api.BaseTest.MASTER_SECRET, cn.jpush.api.BaseTest.APP_KEY));
        try {
            cn.jpush.api.push.CIDResult result = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.CIDResult>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|2", cn.jpush.api.push.CIDResult.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.JPushClient>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|1", cn.jpush.api.JPushClient.class, jPushClient).getCidList(3, "push"));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|3", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Got result - " + (eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.CIDResult>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|4", cn.jpush.api.push.CIDResult.class, result))));
        } catch (cn.jiguang.common.resp.APIConnectionException e) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|5", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).error("Connection error. Should retry later. ", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIConnectionException>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|6", cn.jiguang.common.resp.APIConnectionException.class, e));
        } catch (cn.jiguang.common.resp.APIRequestException e) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|7", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).error("Error response from JPush server. Should review and fix it. ", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|8", cn.jiguang.common.resp.APIRequestException.class, e));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|9", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("HTTP Status: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testGetCidList()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|10", cn.jiguang.common.resp.APIRequestException.class, e).getStatus()))));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|12", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Error Code: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testGetCidList()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|13", cn.jiguang.common.resp.APIRequestException.class, e).getErrorCode()))));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|15", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Error Message: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testGetCidList()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testGetCidList()|16", cn.jiguang.common.resp.APIRequestException.class, e).getErrorMessage()))));
        }
    }

    @org.junit.Test
    public void testSendPushWithCid() {
        cn.jpush.api.JPushClient jPushClient = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.JPushClient>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|0", cn.jpush.api.JPushClient.class, new cn.jpush.api.JPushClient(cn.jpush.api.BaseTest.MASTER_SECRET, cn.jpush.api.BaseTest.APP_KEY));
        cn.jpush.api.push.model.PushPayload pushPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|1", cn.jpush.api.push.model.PushPayload.class, cn.jpush.api.push.PushClientTest.buildPushObject_android_cid());
        try {
            cn.jpush.api.push.PushResult result = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushResult>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|4", cn.jpush.api.push.PushResult.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.JPushClient>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|2", cn.jpush.api.JPushClient.class, jPushClient).sendPush(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|3", cn.jpush.api.push.model.PushPayload.class, pushPayload)));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|5", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Got result - " + (eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.PushResult>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|6", cn.jpush.api.push.PushResult.class, result))));
        } catch (cn.jiguang.common.resp.APIConnectionException e) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|7", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).error("Connection error. Should retry later. ", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIConnectionException>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|8", cn.jiguang.common.resp.APIConnectionException.class, e));
        } catch (cn.jiguang.common.resp.APIRequestException e) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|9", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).error("Error response from JPush server. Should review and fix it. ", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|10", cn.jiguang.common.resp.APIRequestException.class, e));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|11", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("HTTP Status: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|12", cn.jiguang.common.resp.APIRequestException.class, e).getStatus()))));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|14", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Error Code: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|16", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|15", cn.jiguang.common.resp.APIRequestException.class, e).getErrorCode()))));
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.slf4j.Logger>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|17", org.slf4j.Logger.class, cn.jpush.api.push.PushClientTest.LOG).info(("Error Message: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|19", eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jiguang.common.resp.APIRequestException>observeState("cn.jpush.api.push.PushClientTest|testSendPushWithCid()|18", cn.jiguang.common.resp.APIRequestException.class, e).getErrorMessage()))));
        }
    }

    public static cn.jpush.api.push.model.PushPayload buildPushObject_android_cid() {
        return eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_android_cid()|8", cn.jpush.api.push.model.PushPayload.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_android_cid()|7", cn.jpush.api.push.model.PushPayload.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_android_cid()|6", cn.jpush.api.push.model.PushPayload.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_android_cid()|4", cn.jpush.api.push.model.PushPayload.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_android_cid()|2", cn.jpush.api.push.model.PushPayload.Builder.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload.Builder>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_android_cid()|0", cn.jpush.api.push.model.PushPayload.Builder.class, cn.jpush.api.push.model.PushPayload.newBuilder()).setPlatform(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_android_cid()|1", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.android()))).setAudience(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_android_cid()|3", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.registrationId("18071adc030dcba91c0")))).setNotification(eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.notification.Notification>observeState("cn.jpush.api.push.PushClientTest|buildPushObject_android_cid()|5", cn.jpush.api.push.model.notification.Notification.class, cn.jpush.api.push.model.notification.Notification.alert(cn.jpush.api.BaseTest.ALERT)))).setCid("d4ee2375846bc30fa51334f5-21f305e0-4a52-42f3-a3dd-d2e49bdf0499")).build());
    }
}

