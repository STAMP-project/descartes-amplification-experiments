package cn.jpush.api.push.mock;


public class ResponseErrorTest extends cn.jpush.api.push.mock.BaseMockTest {
    // @Test
    // public void appKeyNotExist() {
    // _mockServer.enqueue(new MockResponse()
    // .setResponseCode(400)
    // .setBody(getResponseError(111, 222, 1011, "appKey does not exist.")));
    // 
    // String appKey = "dd1066407b044738b6479274";
    // JPushClient client = new JPushClient(masterSecret, appKey);
    // PushPayload payload = PushPayload.alertAll(ALERT);
    // PushResult result = client.sendPush(payload);
    // assertEquals(APPKEY_NOT_EXIST, result.getErrorCode());
    // }
    // 
    // @Test
    // public void authenticationFail() {
    // String masterSecret = "2b38ce69b1de2a7fa95706e2";
    // JPushClient client = new JPushClient(masterSecret, appKey);
    // PushPayload payload = PushPayload.alertAll(ALERT);
    // PushResult result = client.sendPush(payload);
    // assertEquals(AUTHENTICATION_FAIL, result.getErrorCode());
    // }
    @org.junit.Test
    public void tooBig() {
        java.lang.String msgContent = "深圳制造厂的朋友告诉我，过去的一年，他们服务了几十家小型创业公司，代工智能手表。不过，今年这些创业公司已经找不到了，庆幸的是，代工厂都是先付款再生产，也就没有损失。可穿戴设备、硬件创新，大潮初起，泥沙俱下，浪潮过后，却是遍地狼藉。国内的智能手环、手表们，如土曼、果壳，在 Jawbone、Google Glass 们引领下，纷纷推出“划时代”的产品，一时间，国内宣称要做可穿戴设备的公司，如过江之鲫。2013 年，不说句硬件创新，不戴款智能手环，都不好意思说自己是站在人文与科技的十字路口。2013 年，身边的朋友纷纷佩戴上了 Jawbone，幸运的人也会戴上传说中的智能手表。不过，现在越来越多的朋友开始放弃这些所谓的可穿戴式设备。";
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|tooBig()|2", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.PushPayload>observeState("cn.jpush.api.push.mock.ResponseErrorTest|tooBig()|1", cn.jpush.api.push.model.PushPayload.class, cn.jpush.api.push.model.PushPayload.messageAll(eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|tooBig()|0", msgContent))).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|tooBig()|3", (_expectedErrorCode = 1005));
    }

    // ---------------- invalid params
    @org.junit.Test
    public void invalidParams_platform() throws java.lang.Exception {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|2", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive("all_platform")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|3", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|5", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|4", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|6", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|8", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.notification.Notification>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|7", cn.jpush.api.push.model.notification.Notification.class, cn.jpush.api.push.model.notification.Notification.alert(cn.jpush.api.push.mock.IMockTest.ALERT)).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|9", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|10", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|13", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|12", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_platform()|14", (_expectedErrorCode = 1003));
    }

    @org.junit.Test
    public void invalidParams_audience() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|5", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive("all_audience")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|6", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|8", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.notification.Notification>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|7", cn.jpush.api.push.model.notification.Notification.class, cn.jpush.api.push.model.notification.Notification.alert(cn.jpush.api.push.mock.IMockTest.ALERT)).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|9", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|10", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|13", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|12", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_audience()|14", (_expectedErrorCode = 1003));
    }

    @org.junit.Test
    public void invalidParams_notification() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|7", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|8", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive(cn.jpush.api.push.mock.IMockTest.ALERT)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|9", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|10", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|13", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|12", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification()|14", (_expectedErrorCode = 1003));
    }

    @org.junit.Test
    public void invalidParams_notification_android() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|8", com.google.gson.JsonObject.class, notification).add("android", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|9", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive(cn.jpush.api.push.mock.IMockTest.ALERT)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|10", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|11", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|12", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|13", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|16", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|15", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android()|17", (_expectedErrorCode = 1003));
    }

    @org.junit.Test
    public void invalidParams_notification_ios() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|8", com.google.gson.JsonObject.class, notification).add("ios", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|9", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive(cn.jpush.api.push.mock.IMockTest.ALERT)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|10", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|11", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|12", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|13", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|16", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|15", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_ios()|17", (_expectedErrorCode = 1003));
    }

    @org.junit.Test
    public void invalidParams_notification_winphone() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|8", com.google.gson.JsonObject.class, notification).add("winphone", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|9", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive(cn.jpush.api.push.mock.IMockTest.ALERT)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|10", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|11", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|12", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|13", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|16", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|15", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_winphone()|17", (_expectedErrorCode = 1003));
    }

    @org.junit.Test
    public void invalidParams_notification_android_builderidNotNumber() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        com.google.gson.JsonObject android = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|8", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|9", com.google.gson.JsonObject.class, android).add("builder_id", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|10", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive("builder_id_string")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|11", com.google.gson.JsonObject.class, notification).add("android", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|12", com.google.gson.JsonObject.class, android));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|13", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|14", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|15", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|16", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|19", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|18", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|invalidParams_notification_android_builderidNotNumber()|20", (_expectedErrorCode = 1003));
    }

    // ------------------------ lack of params
    @org.junit.Test
    public void lackOfParams_platform() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|1", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|2", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|4", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.notification.Notification>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|5", cn.jpush.api.push.model.notification.Notification.class, cn.jpush.api.push.model.notification.Notification.alert(cn.jpush.api.push.mock.IMockTest.ALERT)).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|7", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|8", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|11", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|10", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_platform()|12", (_expectedErrorCode = 1002));
    }

    @org.junit.Test
    public void lackOfParams_audience() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|4", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.notification.Notification>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|5", cn.jpush.api.push.model.notification.Notification.class, cn.jpush.api.push.model.notification.Notification.alert(cn.jpush.api.push.mock.IMockTest.ALERT)).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|7", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|8", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|11", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|10", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_audience()|12", (_expectedErrorCode = 1002));
    }

    @org.junit.Test
    public void lackOfParams_messageAndNotificaiton() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|7", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|9", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|8", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|11", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|10", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_messageAndNotificaiton()|12", (_expectedErrorCode = 1002));
    }

    @org.junit.Test
    public void lackOfParams_notification_android_empty() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        com.google.gson.JsonObject android = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|8", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|9", com.google.gson.JsonObject.class, notification).add("android", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|10", com.google.gson.JsonObject.class, android));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|11", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|12", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|13", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|14", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|17", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|16", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_empty()|18", (_expectedErrorCode = 1002));
    }

    @org.junit.Test
    public void lackOfParams_notification_ios_empty() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        com.google.gson.JsonObject ios = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|8", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|9", com.google.gson.JsonObject.class, notification).add("ios", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|10", com.google.gson.JsonObject.class, ios));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|11", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|12", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|13", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|14", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|17", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|16", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_empty()|18", (_expectedErrorCode = 1002));
    }

    @org.junit.Test
    public void lackOfParams_notification_winphone_empty() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        com.google.gson.JsonObject winphone = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|8", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|9", com.google.gson.JsonObject.class, notification).add("winphone", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|10", com.google.gson.JsonObject.class, winphone));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|11", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|12", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|13", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|15", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|14", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|17", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|16", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_empty()|18", (_expectedErrorCode = 1002));
    }

    @org.junit.Test
    public void lackOfParams_notification_android_noalert() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        com.google.gson.JsonObject android = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|8", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|9", com.google.gson.JsonObject.class, android).add("title", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|10", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive("title")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|11", com.google.gson.JsonObject.class, notification).add("android", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|12", com.google.gson.JsonObject.class, android));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|13", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|14", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|15", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|16", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|19", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|18", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_android_noalert()|20", (_expectedErrorCode = 1002));
    }

    @org.junit.Test
    public void lackOfParams_notification_ios_noalert() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        com.google.gson.JsonObject ios = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|8", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|9", com.google.gson.JsonObject.class, ios).add("badge", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|10", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive(11)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|11", com.google.gson.JsonObject.class, notification).add("ios", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|12", com.google.gson.JsonObject.class, ios));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|13", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|14", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|15", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|16", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|19", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|18", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_ios_noalert()|20", (_expectedErrorCode = 1002));
    }

    @org.junit.Test
    public void lackOfParams_notification_winphone_noalert() {
        com.google.gson.JsonObject payload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|0", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|1", com.google.gson.JsonObject.class, payload).add("platform", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|3", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.Platform>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|2", cn.jpush.api.push.model.Platform.class, cn.jpush.api.push.model.Platform.all()).toJSON()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|4", com.google.gson.JsonObject.class, payload).add("audience", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonElement>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|6", com.google.gson.JsonElement.class, eu.stamp_project.reneri.instrumentation.StateObserver.<cn.jpush.api.push.model.audience.Audience>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|5", cn.jpush.api.push.model.audience.Audience.class, cn.jpush.api.push.model.audience.Audience.all()).toJSON()));
        com.google.gson.JsonObject notification = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|7", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        com.google.gson.JsonObject winphone = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|8", com.google.gson.JsonObject.class, new com.google.gson.JsonObject());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|9", com.google.gson.JsonObject.class, winphone).add("title", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonPrimitive>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|10", com.google.gson.JsonPrimitive.class, new com.google.gson.JsonPrimitive("title")));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|11", com.google.gson.JsonObject.class, notification).add("winphone", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|12", com.google.gson.JsonObject.class, winphone));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|13", com.google.gson.JsonObject.class, payload).add("notification", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|14", com.google.gson.JsonObject.class, notification));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.PrintStream>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|15", java.io.PrintStream.class, java.lang.System.out).println(("json string: " + (eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|16", com.google.gson.JsonObject.class, payload).toString()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|19", (_currentPayload = eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.gson.JsonObject>observeState("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|18", com.google.gson.JsonObject.class, payload).toString()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("cn.jpush.api.push.mock.ResponseErrorTest|lackOfParams_notification_winphone_noalert()|20", (_expectedErrorCode = 1002));
    }
}

