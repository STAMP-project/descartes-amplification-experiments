CodeWriter.java,com.squareup.javapoet.CodeWriter,null,emit,222,KILLED,com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,emit,218,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,emitAndIndent,458,KILLED,com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,emitAnnotations,160,KILLED,com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,emitComment,136,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,emitIndentation,496,KILLED,com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,emitJavadoc,147,KILLED,com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,emitLiteral,343,KILLED,com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,emitModifiers,181,KILLED,com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,emitModifiers,172,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,false,emitStaticImportMember,329,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,true,emitStaticImportMember,329,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,emitTypeVariables,189,KILLED,com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,emitWrappingSpace,314,KILLED,com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,"",extractMemberName,319,KILLED,com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,"A",extractMemberName,319,KILLED,com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,extractMemberName,319,KILLED,com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,importableType,403,KILLED,com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,indent,95,KILLED,com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,indent,99,KILLED,com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,"",lookupName,364,KILLED,com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,"A",lookupName,364,KILLED,com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,lookupName,364,KILLED,com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,popPackage,120,SURVIVED,none
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,popType,131,KILLED,com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,void,popTypeVariables,210,KILLED,com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,pushPackage,114,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,pushType,126,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,resolve,421,KILLED,com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,stackClassName,445,KILLED,com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,suggestedImports,506,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,unindent,104,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter,null,unindent,108,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addAnnotation,335,KILLED,com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addAnnotation,340,KILLED,com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addAnnotation,345,KILLED,com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addAnnotations,327,KILLED,com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addCode,443,KILLED,com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addCode,433,KILLED,com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addComment,448,NO_COVERAGE,none
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addException,424,KILLED,com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addException,429,KILLED,com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addExceptions,416,KILLED,com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addJavadoc,322,NO_COVERAGE,none
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addJavadoc,317,KILLED,com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addModifiers,355,KILLED,com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addModifiers,349,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addNamedCode,438,NO_COVERAGE,none
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addParameter,394,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addParameter,399,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addParameter,403,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addParameters,386,KILLED,com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addStatement,500,NO_COVERAGE,none
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addStatement,495,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addTypeVariable,371,KILLED,com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,addTypeVariables,363,KILLED,com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,beginControlFlow,467,KILLED,com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,build,505,KILLED,com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,defaultValue,457,KILLED,com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,defaultValue,453,KILLED,com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,endControlFlow,481,KILLED,com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,endControlFlow,490,KILLED,com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,nextControlFlow,476,KILLED,com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,returns,376,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,returns,382,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec$Builder,null,varargs,407,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addAnnotation,439,KILLED,com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addAnnotation,445,KILLED,com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addAnnotation,449,KILLED,com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addAnnotations,431,KILLED,com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addEnumConstant,508,KILLED,com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addEnumConstant,512,KILLED,com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addField,529,KILLED,com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addField,540,KILLED,com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addField,544,KILLED,com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addFields,521,KILLED,com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addInitializerBlock,553,KILLED,com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addJavadoc,426,KILLED,com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addJavadoc,421,KILLED,com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addMethod,573,KILLED,com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addMethods,565,KILLED,com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addModifiers,453,KILLED,com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addOriginatingElement,611,KILLED,com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addStaticBlock,548,KILLED,com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addSuperinterface,498,KILLED,com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addSuperinterface,504,KILLED,com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addSuperinterfaces,490,KILLED,com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addType,603,KILLED,com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addTypeVariable,471,KILLED,com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addTypeVariables,462,KILLED,com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,addTypes,595,KILLED,com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,build,616,KILLED,com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,superclass,477,KILLED,com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec$Builder,null,superclass,486,NO_COVERAGE,none
TypeName.java,com.squareup.javapoet.TypeName,null,annotated,116,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,annotated,112,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,arrayComponent,373,NO_COVERAGE,none
TypeName.java,com.squareup.javapoet.TypeName,null,asArray,380,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,box,162,KILLED,com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName,null,concatAnnotations,125,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,emit,223,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,emitAnnotations,233,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,false,equals,196,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,true,equals,196,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,get,323,KILLED,com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,get,327,KILLED,com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,get,243,KILLED,com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName,null,get,248,KILLED,com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName,false,isAnnotated,131,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,true,isAnnotated,131,KILLED,com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,false,isBoxedPrimitive,147,KILLED,com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,true,isBoxedPrimitive,147,KILLED,com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,false,isPrimitive,139,KILLED,com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,true,isPrimitive,139,KILLED,com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,list,360,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,list,364,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)
TypeName.java,com.squareup.javapoet.TypeName,null,unbox,182,KILLED,com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName,null,withoutAnnotations,121,NO_COVERAGE,none
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,add,412,KILLED,com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,add,239,KILLED,com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,void,addArgument,319,KILLED,com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,addNamed,182,KILLED,com.squareup.javapoet.CodeBlockTest.lowerCaseNamed(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,addStatement,408,KILLED,com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,addStatement,401,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,"",argToName,339,KILLED,com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,"A",argToName,339,KILLED,com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,argToName,339,KILLED,com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,"",argToString,352,KILLED,com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,"A",argToString,352,KILLED,com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,argToString,352,KILLED,com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,argToType,356,KILLED,com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,beginControlFlow,368,KILLED,com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,build,428,KILLED,com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,endControlFlow,385,KILLED,com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,endControlFlow,395,KILLED,com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,indent,418,KILLED,com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,false,isNoArgPlaceholder,315,KILLED,com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,true,isNoArgPlaceholder,315,KILLED,com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,nextControlFlow,378,KILLED,com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$Builder,null,unindent,423,KILLED,com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)
ClassName.java,com.squareup.javapoet.ClassName,null,annotated,63,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,bestGuess,183,KILLED,com.squareup.javapoet.ClassNameTest.bestGuessNonAscii(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,0,compareTo,238,KILLED,com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)
ClassName.java,com.squareup.javapoet.ClassName,1,compareTo,238,KILLED,com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)
ClassName.java,com.squareup.javapoet.ClassName,null,emit,242,KILLED,com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,enclosingClasses,281,KILLED,com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,get,150,KILLED,com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,get,206,KILLED,com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,get,215,KILLED,com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,false,isAnnotated,76,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)
ClassName.java,com.squareup.javapoet.ClassName,true,isAnnotated,76,KILLED,com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,nestedClass,133,KILLED,com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,peerClass,125,KILLED,com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,"",reflectionName,105,KILLED,com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,"A",reflectionName,105,KILLED,com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,reflectionName,105,KILLED,com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,simpleNames,111,KILLED,com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,topLevelClassName,100,KILLED,com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)
ClassName.java,com.squareup.javapoet.ClassName,null,withoutAnnotations,68,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,annotated,53,KILLED,com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,emit,83,KILLED,com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,get,89,KILLED,com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,get,94,KILLED,com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,get,99,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,get,149,NO_COVERAGE,none
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,get,155,KILLED,com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,get,136,KILLED,com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,get,104,KILLED,com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,get,117,KILLED,com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,of,77,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,withBounds,69,KILLED,com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,withBounds,65,NO_COVERAGE,none
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,withBounds,61,KILLED,com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)
TypeVariableName.java,com.squareup.javapoet.TypeVariableName,null,withoutAnnotations,57,NO_COVERAGE,none
Util.java,com.squareup.javapoet.Util,"",characterLiteralWithoutSingleQuotes,91,KILLED,com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)
Util.java,com.squareup.javapoet.Util,"A",characterLiteralWithoutSingleQuotes,91,KILLED,com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)
Util.java,com.squareup.javapoet.Util,null,characterLiteralWithoutSingleQuotes,91,KILLED,com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)
Util.java,com.squareup.javapoet.Util,void,checkArgument,53,KILLED,com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)
Util.java,com.squareup.javapoet.Util,null,checkNotNull,57,KILLED,com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)
Util.java,com.squareup.javapoet.Util,void,checkState,62,KILLED,com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)
Util.java,com.squareup.javapoet.Util,null,immutableList,66,KILLED,com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)
Util.java,com.squareup.javapoet.Util,null,immutableMap,49,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
Util.java,com.squareup.javapoet.Util,null,immutableMultimap,40,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)
Util.java,com.squareup.javapoet.Util,null,immutableSet,70,KILLED,com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)
Util.java,com.squareup.javapoet.Util,void,requireExactlyOneOf,81,SURVIVED,none
Util.java,com.squareup.javapoet.Util,"",stringLiteralWithDoubleQuotes,107,KILLED,com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)
Util.java,com.squareup.javapoet.Util,"A",stringLiteralWithDoubleQuotes,107,KILLED,com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)
Util.java,com.squareup.javapoet.Util,null,stringLiteralWithDoubleQuotes,107,KILLED,com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)
Util.java,com.squareup.javapoet.Util,null,union,74,KILLED,com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,annotationBuilder,150,KILLED,com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,annotationBuilder,146,KILLED,com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,anonymousClassBuilder,142,KILLED,com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,anonymousClassBuilder,136,KILLED,com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,classBuilder,116,KILLED,com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,classBuilder,112,KILLED,com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,void,emit,174,KILLED,com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,enumBuilder,132,KILLED,com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,enumBuilder,128,KILLED,com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,false,equals,331,KILLED,com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,true,equals,331,SURVIVED,none
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,interfaceBuilder,124,KILLED,com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,interfaceBuilder,120,KILLED,com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)
TypeSpec.java,com.squareup.javapoet.TypeSpec,null,toBuilder,154,KILLED,com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,null,constructorBuilder,192,KILLED,com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,void,emit,85,KILLED,com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,false,equals,166,KILLED,com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,true,equals,166,SURVIVED,none
MethodSpec.java,com.squareup.javapoet.MethodSpec,false,isConstructor,162,KILLED,com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,true,isConstructor,162,KILLED,com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,null,javadocWithParameters,144,KILLED,com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,false,lastParameterIsArray,79,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,true,lastParameterIsArray,79,SURVIVED,none
MethodSpec.java,com.squareup.javapoet.MethodSpec,null,methodBuilder,188,KILLED,com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,null,overriding,205,KILLED,com.squareup.javapoet.MethodSpecTest.overrideInvalidModifiers(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,null,overriding,259,KILLED,com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)
MethodSpec.java,com.squareup.javapoet.MethodSpec,null,toBuilder,280,KILLED,com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,null,clone,163,KILLED,com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,"",get,147,KILLED,com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,"A",get,147,KILLED,com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,null,get,147,KILLED,com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,"",newName,100,KILLED,com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,"A",newName,100,KILLED,com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,null,newName,100,KILLED,com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,"",newName,109,KILLED,com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,"A",newName,109,KILLED,com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,null,newName,109,KILLED,com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,"",toJavaIdentifier,129,KILLED,com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,"A",toJavaIdentifier,129,KILLED,com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)
NameAllocator.java,com.squareup.javapoet.NameAllocator,null,toJavaIdentifier,129,KILLED,com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,annotated,43,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,emit,51,KILLED,com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,emit,55,KILLED,com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,emitBrackets,67,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,emitLeafType,60,KILLED,com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,get,103,NO_COVERAGE,none
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,get,107,SURVIVED,none
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,get,93,NO_COVERAGE,none
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,get,98,KILLED,com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,of,83,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,of,88,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)
ArrayTypeName.java,com.squareup.javapoet.ArrayTypeName,null,withoutAnnotations,47,NO_COVERAGE,none
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,annotated,57,NO_COVERAGE,none
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,emit,65,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,get,121,NO_COVERAGE,none
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,get,125,NO_COVERAGE,none
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,get,101,NO_COVERAGE,none
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,get,107,KILLED,com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,subtypeOf,80,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,subtypeOf,84,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,supertypeOf,92,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,supertypeOf,97,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)
WildcardTypeName.java,com.squareup.javapoet.WildcardTypeName,null,withoutAnnotations,61,NO_COVERAGE,none
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,null,builder,155,KILLED,com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,null,builder,160,KILLED,com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,void,emit,54,KILLED,com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,void,emitAnnotationValues,89,KILLED,com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,false,equals,172,KILLED,com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,true,equals,172,SURVIVED,none
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,null,get,109,KILLED,com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,null,get,113,KILLED,com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,null,get,143,KILLED,com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec,null,toBuilder,164,KILLED,com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)
JavaFile.java,com.squareup.javapoet.JavaFile,null,builder,202,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
JavaFile.java,com.squareup.javapoet.JavaFile,void,emit,127,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
JavaFile.java,com.squareup.javapoet.JavaFile,false,equals,162,NO_COVERAGE,none
JavaFile.java,com.squareup.javapoet.JavaFile,true,equals,162,NO_COVERAGE,none
JavaFile.java,com.squareup.javapoet.JavaFile,null,toBuilder,208,NO_COVERAGE,none
JavaFile.java,com.squareup.javapoet.JavaFile,null,toJavaFileObject,183,KILLED,com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)
JavaFile.java,com.squareup.javapoet.JavaFile,void,writeTo,104,KILLED,com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)
JavaFile.java,com.squareup.javapoet.JavaFile,void,writeTo,75,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
JavaFile.java,com.squareup.javapoet.JavaFile,void,writeTo,86,KILLED,com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)
JavaFile.java,com.squareup.javapoet.JavaFile,void,writeTo,109,KILLED,com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,addAnnotation,142,KILLED,com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,addAnnotation,147,NO_COVERAGE,none
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,addAnnotation,152,NO_COVERAGE,none
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,addAnnotations,134,KILLED,com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,addJavadoc,129,NO_COVERAGE,none
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,addJavadoc,124,KILLED,com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,addModifiers,156,KILLED,com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,build,171,KILLED,com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,initializer,165,KILLED,com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec$Builder,null,initializer,161,KILLED,com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec,null,builder,102,KILLED,com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec,null,builder,109,KILLED,com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec,void,emit,53,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec,false,equals,64,KILLED,com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec,true,equals,64,SURVIVED,none
ParameterSpec.java,com.squareup.javapoet.ParameterSpec,null,get,86,KILLED,com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec,null,parametersOf,94,KILLED,com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec,null,toBuilder,113,NO_COVERAGE,none
ParameterSpec.java,com.squareup.javapoet.ParameterSpec,null,toBuilder,117,KILLED,com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)
ParameterizedTypeName.java,com.squareup.javapoet.ParameterizedTypeName,null,annotated,57,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)
ParameterizedTypeName.java,com.squareup.javapoet.ParameterizedTypeName,null,emit,68,KILLED,com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)
ParameterizedTypeName.java,com.squareup.javapoet.ParameterizedTypeName,null,get,114,KILLED,com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)
ParameterizedTypeName.java,com.squareup.javapoet.ParameterizedTypeName,null,get,119,KILLED,com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)
ParameterizedTypeName.java,com.squareup.javapoet.ParameterizedTypeName,null,get,124,NO_COVERAGE,none
ParameterizedTypeName.java,com.squareup.javapoet.ParameterizedTypeName,null,get,129,KILLED,com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)
ParameterizedTypeName.java,com.squareup.javapoet.ParameterizedTypeName,null,nestedClass,97,NO_COVERAGE,none
ParameterizedTypeName.java,com.squareup.javapoet.ParameterizedTypeName,null,nestedClass,107,KILLED,com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)
ParameterizedTypeName.java,com.squareup.javapoet.ParameterizedTypeName,null,withoutAnnotations,63,NO_COVERAGE,none
ParameterSpec.java,com.squareup.javapoet.ParameterSpec$Builder,null,addAnnotation,155,KILLED,com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec$Builder,null,addAnnotation,160,KILLED,com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec$Builder,null,addAnnotation,165,NO_COVERAGE,none
ParameterSpec.java,com.squareup.javapoet.ParameterSpec$Builder,null,addAnnotations,147,KILLED,com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec$Builder,null,addJavadoc,142,NO_COVERAGE,none
ParameterSpec.java,com.squareup.javapoet.ParameterSpec$Builder,null,addJavadoc,137,KILLED,com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec$Builder,null,addModifiers,174,KILLED,com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec$Builder,null,addModifiers,169,KILLED,com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)
ParameterSpec.java,com.squareup.javapoet.ParameterSpec$Builder,null,build,185,KILLED,com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock,null,builder,149,KILLED,com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock,false,equals,84,KILLED,com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock,true,equals,84,SURVIVED,none
CodeBlock.java,com.squareup.javapoet.CodeBlock,null,join,114,KILLED,com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock,null,joining,123,KILLED,com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock,null,joining,137,KILLED,com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock,null,of,105,KILLED,com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock,null,toBuilder,153,KILLED,com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)
TypeName.java,com.squareup.javapoet.TypeName$1,null,defaultAction,316,KILLED,com.squareup.javapoet.TypesEclipseTest.getNullTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName$1,null,visitArray,299,KILLED,com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName$1,null,visitDeclared,273,KILLED,com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName$1,null,visitNoType,311,KILLED,com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName$1,null,visitPrimitive,250,KILLED,com.squareup.javapoet.TypesEclipseTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName$1,null,visitTypeVariable,303,KILLED,com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)
TypeName.java,com.squareup.javapoet.TypeName$1,null,visitWildcard,307,KILLED,com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec,null,builder,90,KILLED,com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec,null,builder,97,KILLED,com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec,void,emit,56,KILLED,com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec,false,equals,68,KILLED,com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)
FieldSpec.java,com.squareup.javapoet.FieldSpec,true,equals,68,SURVIVED,none
FieldSpec.java,com.squareup.javapoet.FieldSpec,null,toBuilder,101,NO_COVERAGE,none
JavaFile.java,com.squareup.javapoet.JavaFile$Builder,null,addFileComment,229,KILLED,com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)
JavaFile.java,com.squareup.javapoet.JavaFile$Builder,null,addStaticImport,242,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
JavaFile.java,com.squareup.javapoet.JavaFile$Builder,null,addStaticImport,238,KILLED,com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)
JavaFile.java,com.squareup.javapoet.JavaFile$Builder,null,addStaticImport,234,KILLED,com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)
JavaFile.java,com.squareup.javapoet.JavaFile$Builder,null,build,271,KILLED,com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)
LineWrapper.java,com.squareup.javapoet.LineWrapper,void,append,57,KILLED,com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)
LineWrapper.java,com.squareup.javapoet.LineWrapper,void,close,104,KILLED,com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)
LineWrapper.java,com.squareup.javapoet.LineWrapper,void,flush,110,KILLED,com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)
LineWrapper.java,com.squareup.javapoet.LineWrapper,void,wrappingSpace,84,KILLED,com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)
LineWrapper.java,com.squareup.javapoet.LineWrapper,void,zeroWidthSpace,94,KILLED,com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec$Builder,null,addMember,206,KILLED,com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec$Builder,null,addMember,202,KILLED,com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec$Builder,null,addMemberForValue,219,KILLED,com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec$Builder,null,build,241,KILLED,com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec$Visitor,null,visitAnnotation,261,KILLED,com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec$Visitor,null,visitArray,273,KILLED,com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec$Visitor,null,visitEnumConstant,265,KILLED,com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)
AnnotationSpec.java,com.squareup.javapoet.AnnotationSpec$Visitor,null,visitType,269,KILLED,com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)
ClassName.java,com.squareup.javapoet.ClassName$1,null,defaultAction,232,NO_COVERAGE,none
ClassName.java,com.squareup.javapoet.ClassName$1,null,visitPackage,220,KILLED,com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)
ClassName.java,com.squareup.javapoet.ClassName$1,null,visitType,224,KILLED,com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)
ClassName.java,com.squareup.javapoet.ClassName$1,null,visitUnknown,228,KILLED,com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter$Multiset,void,add,516,KILLED,com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter$Multiset,false,contains,529,KILLED,com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter$Multiset,true,contains,529,KILLED,com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)
CodeWriter.java,com.squareup.javapoet.CodeWriter$Multiset,void,remove,521,KILLED,com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$CodeBlockJoiner,null,add,443,KILLED,com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)
CodeBlock.java,com.squareup.javapoet.CodeBlock$CodeBlockJoiner,null,merge,453,NO_COVERAGE,none
JavaFile.java,com.squareup.javapoet.JavaFile$2,null,openInputStream,193,KILLED,com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)
