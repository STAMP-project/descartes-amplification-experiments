{"methods":[{"name":"emitModifiers","description":"(Ljava/util/Set;Ljava/util/Set;)V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":172,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":34,"tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"emitModifiers","description":"(Ljava/util/Set;)V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":181,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":11,"tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"pushType","description":"(Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":126,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"emitStaticImportMember","description":"(Ljava/lang/String;Ljava/lang/String;)Z","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":329,"classification":"tested","detected":["true","false"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"pushPackage","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":114,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"popType","description":"()Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":131,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":19,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"unindent","description":"()Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":104,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"resolve","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":421,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":35,"tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"unindent","description":"(I)Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":108,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"emitIndentation","description":"()V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":496,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"popTypeVariables","description":"(Ljava/util/List;)V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":210,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":43,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"extractMemberName","description":"(Ljava/lang/String;)Ljava/lang/String;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":319,"classification":"tested","detected":["null","\"\"","\"A\""],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":3,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"\"","tests-run":3,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"A\"","tests-run":3,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"stackClassName","description":"(ILjava/lang/String;)Lcom/squareup/javapoet/ClassName;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":445,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"emitComment","description":"(Lcom/squareup/javapoet/CodeBlock;)V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":136,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"emitAndIndent","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":458,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"importableType","description":"(Lcom/squareup/javapoet/ClassName;)V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":403,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":37,"tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"indent","description":"(I)Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":99,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"emitWrappingSpace","description":"()Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":314,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"lookupName","description":"(Lcom/squareup/javapoet/ClassName;)Ljava/lang/String;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":364,"classification":"tested","detected":["null","\"A\"","\"\""],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"popPackage","description":"()Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":120,"classification":"pseudo-tested","detected":[],"not-detected":["null"],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"SURVIVED","mutator":"null","tests-run":104,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":[],"succeeding-tests":[]}]},{"name":"emitAnnotations","description":"(Ljava/util/List;Z)V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":160,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":13,"tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":218,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":3,"tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"indent","description":"()Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":95,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"emitJavadoc","description":"(Lcom/squareup/javapoet/CodeBlock;)V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":147,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":57,"tests":["com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"suggestedImports","description":"()Ljava/util/Map;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":506,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"emitLiteral","description":"(Ljava/lang/Object;)V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":343,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":2,"tests":["com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeWriter;","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":222,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"emitTypeVariables","description":"(Ljava/util/List;)V","class":"CodeWriter","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":189,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":21,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"returns","description":"(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":376,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addTypeVariable","description":"(Lcom/squareup/javapoet/TypeVariableName;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":371,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"defaultValue","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":453,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addNamedCode","description":"(Ljava/lang/String;Ljava/util/Map;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":438,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"returns","description":"(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":382,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addTypeVariables","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":363,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"addJavadoc","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":322,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"addCode","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":433,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"nextControlFlow","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":476,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addParameter","description":"(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":403,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addCode","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":443,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addComment","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":448,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":335,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addJavadoc","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":317,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"defaultValue","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":457,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addAnnotations","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":327,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"addParameter","description":"(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":399,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addParameter","description":"(Lcom/squareup/javapoet/ParameterSpec;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":394,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"addParameters","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":386,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"addExceptions","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":416,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"endControlFlow","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":490,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addStatement","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":500,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"addStatement","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":495,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":340,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addException","description":"(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":429,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addModifiers","description":"([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":349,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"build","description":"()Lcom/squareup/javapoet/MethodSpec;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":505,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"succeeding-tests":[]}]},{"name":"varargs","description":"()Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":407,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"addModifiers","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":355,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Ljava/lang/Class;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":345,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"endControlFlow","description":"()Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":481,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addException","description":"(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":424,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"beginControlFlow","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec$Builder","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":467,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addOriginatingElement","description":"(Ljavax/lang/model/element/Element;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":611,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)"],"succeeding-tests":[]}]},{"name":"addJavadoc","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":426,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Ljava/lang/Class;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":449,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addField","description":"(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":540,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addType","description":"(Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":603,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addMethods","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":565,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addTypeVariable","description":"(Lcom/squareup/javapoet/TypeVariableName;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":471,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addSuperinterface","description":"(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":498,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":445,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addField","description":"(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":544,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addJavadoc","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":421,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"succeeding-tests":[]}]},{"name":"addMethod","description":"(Lcom/squareup/javapoet/MethodSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":573,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"succeeding-tests":[]}]},{"name":"addField","description":"(Lcom/squareup/javapoet/FieldSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":529,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":439,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addTypeVariables","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":462,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addFields","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":521,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addInitializerBlock","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":553,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addEnumConstant","description":"(Ljava/lang/String;Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":512,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addTypes","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":595,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addSuperinterfaces","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":490,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addEnumConstant","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":508,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"superclass","description":"(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":477,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addStaticBlock","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":548,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addModifiers","description":"([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":453,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"superclass","description":"(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":486,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"addSuperinterface","description":"(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":504,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addAnnotations","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":431,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"build","description":"()Lcom/squareup/javapoet/TypeSpec;","class":"TypeSpec$Builder","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":616,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)"],"succeeding-tests":[]}]},{"name":"list","description":"([Ljava/lang/reflect/Type;)Ljava/util/List;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":360,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/type/TypeMirror;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":248,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.getNullTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getNullTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getVoidTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getNullTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getNullTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getVoidTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/Type;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":327,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":196,"classification":"tested","detected":["true","false"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"annotated","description":"(Ljava/util/List;)Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":116,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"isAnnotated","description":"()Z","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":131,"classification":"tested","detected":["false","true"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"false","tests-run":13,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"true","tests-run":2,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"box","description":"()Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":162,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"annotated","description":"([Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":112,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"arrayComponent","description":"(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":373,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":323,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"concatAnnotations","description":"(Ljava/util/List;)Ljava/util/List;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":125,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"emitAnnotations","description":"(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":233,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":223,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":6,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"withoutAnnotations","description":"()Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":121,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"asArray","description":"(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/ArrayTypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":380,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":3,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"unbox","description":"()Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":182,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/type/TypeMirror;)Lcom/squareup/javapoet/TypeName;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":243,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.getNullTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getNullTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getVoidTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getNullTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getNullTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getVoidTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"isBoxedPrimitive","description":"()Z","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":147,"classification":"tested","detected":["false","true"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"list","description":"([Ljava/lang/reflect/Type;Ljava/util/Map;)Ljava/util/List;","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":364,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"isPrimitive","description":"()Z","class":"TypeName","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":139,"classification":"tested","detected":["true","false"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"endControlFlow","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":395,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"argToString","description":"(Ljava/lang/Object;)Ljava/lang/String;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":352,"classification":"tested","detected":["null","\"A\"","\"\""],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"beginControlFlow","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":368,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"isNoArgPlaceholder","description":"(C)Z","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":315,"classification":"tested","detected":["false","true"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.indexButNoArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexTooHigh(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tooFewArguments(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementBeginningCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.deindentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsZero(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementEndingCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementBeginningCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.deindentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexButNoArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsZero(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexTooHigh(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementEndingCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tooFewArguments(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"true","tests-run":5,"tests":["com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementBeginningCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.deindentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexButNoArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsZero(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexTooHigh(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementEndingCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tooFewArguments(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"argToType","description":"(Ljava/lang/Object;)Lcom/squareup/javapoet/TypeName;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":356,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"argToName","description":"(Ljava/lang/Object;)Ljava/lang/String;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":339,"classification":"tested","detected":["\"A\"","null","\"\""],"not-detected":[],"tests":["com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"addArgument","description":"(Ljava/lang/String;CLjava/lang/Object;)V","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":319,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"add","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":412,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"addStatement","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":408,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"indent","description":"()Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":418,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"endControlFlow","description":"()Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":385,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"build","description":"()Lcom/squareup/javapoet/CodeBlock;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":428,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"addNamed","description":"(Ljava/lang/String;Ljava/util/Map;)Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":182,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.lowerCaseNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.missingNamedArgument(com.squareup.javapoet.CodeBlockTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.lowerCaseNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.missingNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.lowerCaseNamed(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"unindent","description":"()Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":423,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addStatement","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":401,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"nextControlFlow","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":378,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"add","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock$Builder","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":239,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.indexButNoArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexTooHigh(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tooFewArguments(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementBeginningCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.deindentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.CodeBlockTest.isEmpty(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsZero(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementEndingCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.isEmpty(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementBeginningCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.deindentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexButNoArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsZero(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexTooHigh(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementEndingCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tooFewArguments(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":242,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"simpleNames","description":"()Ljava/util/List;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":111,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"reflectionName","description":"()Ljava/lang/String;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":105,"classification":"tested","detected":["\"A\"","null","\"\""],"not-detected":[],"tests":["com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)"],"mutations":[{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"annotated","description":"(Ljava/util/List;)Lcom/squareup/javapoet/ClassName;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":63,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"bestGuess","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":183,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessNonAscii(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_confusingInput(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.bestGuessNonAscii(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_confusingInput(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.bestGuessNonAscii(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"enclosingClasses","description":"()Ljava/util/List;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":281,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":206,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"nestedClass","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":133,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"peerClass","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":125,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"isAnnotated","description":"()Z","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":76,"classification":"tested","detected":["true","false"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"true","tests-run":2,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"false","tests-run":12,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"compareTo","description":"(Lcom/squareup/javapoet/ClassName;)I","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":238,"classification":"tested","detected":["0","1"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"0","tests-run":8,"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"1","tests-run":8,"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"topLevelClassName","description":"()Lcom/squareup/javapoet/ClassName;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":100,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/Class;)Lcom/squareup/javapoet/ClassName;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":150,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.fromClassRejectionTypes(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.fromClassRejectionTypes(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"withoutAnnotations","description":"()Lcom/squareup/javapoet/ClassName;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":68,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/element/TypeElement;)Lcom/squareup/javapoet/ClassName;","class":"ClassName","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":215,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":83,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"withBounds","description":"(Ljava/util/List;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":69,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/type/TypeVariable;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":104,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/type/TypeVariable;Ljava/util/Map;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":117,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"of","description":"(Ljava/lang/String;Ljava/util/List;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":77,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/TypeVariable;Ljava/util/Map;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":155,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/TypeVariable;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":149,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/String;[Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":99,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/String;[Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":94,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"annotated","description":"(Ljava/util/List;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":53,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"withBounds","description":"([Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":61,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/element/TypeParameterElement;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":136,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":89,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"withoutAnnotations","description":"()Lcom/squareup/javapoet/TypeName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":57,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"withBounds","description":"([Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeVariableName;","class":"TypeVariableName","package":"com/squareup/javapoet","file-name":"TypeVariableName.java","line-number":65,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"checkNotNull","description":"(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":57,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullIsNotAValidMethodName(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.overrideFinalClassMethod(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithoutLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideInvalidModifiers(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.fromClassRejectionTypes(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":38,"tests":["com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithoutLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullIsNotAValidMethodName(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.fromClassRejectionTypes(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideInvalidModifiers(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideFinalClassMethod(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)"],"succeeding-tests":[]}]},{"name":"checkState","description":"(ZLjava/lang/String;[Ljava/lang/Object;)V","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":62,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"characterLiteralWithoutSingleQuotes","description":"(C)Ljava/lang/String;","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":91,"classification":"tested","detected":["\"A\"","\"\"","null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)"],"succeeding-tests":[]}]},{"name":"immutableSet","description":"(Ljava/util/Collection;)Ljava/util/Set;","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":70,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":5,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)"],"succeeding-tests":[]}]},{"name":"stringLiteralWithDoubleQuotes","description":"(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":107,"classification":"tested","detected":["\"A\"","\"\"","null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)"],"succeeding-tests":[]}]},{"name":"immutableMap","description":"(Ljava/util/Map;)Ljava/util/Map;","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":49,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":5,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"checkArgument","description":"(ZLjava/lang/String;[Ljava/lang/Object;)V","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":53,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexButNoArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_confusingInput(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.CodeBlockTest.indentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexTooHigh(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tooFewArguments(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementBeginningCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.fromClassRejectionTypes(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.CodeBlockTest.missingNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessNonAscii(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.lowerCaseNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.deindentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsZero(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementEndingCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.lowerCaseNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementBeginningCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.deindentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexButNoArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsZero(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexTooHigh(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.missingNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementEndingCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessNonAscii(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tooFewArguments(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.fromClassRejectionTypes(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_confusingInput(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"union","description":"(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":74,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":44,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"immutableList","description":"(Ljava/util/Collection;)Ljava/util/List;","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":66,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_confusingInput(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessNonAscii(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":4,"tests":["com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessNonAscii(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.canonicalName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_confusingInput(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"immutableMultimap","description":"(Ljava/util/Map;)Ljava/util/Map;","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":40,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":6,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"requireExactlyOneOf","description":"(Ljava/util/Set;[Ljavax/lang/model/element/Modifier;)V","class":"Util","package":"com/squareup/javapoet","file-name":"Util.java","line-number":81,"classification":"pseudo-tested","detected":[],"not-detected":["void"],"tests":["com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"SURVIVED","mutator":"void","tests-run":5,"tests":["com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":[],"succeeding-tests":[]}]},{"name":"interfaceBuilder","description":"(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":124,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"enumBuilder","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":128,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"anonymousClassBuilder","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":136,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;Ljava/lang/String;Ljava/util/Set;)V","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":174,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"interfaceBuilder","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":120,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":331,"classification":"partially-tested","detected":["false"],"not-detected":["true"],"tests":["com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"SURVIVED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":[],"succeeding-tests":[]},{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"enumBuilder","description":"(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":132,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"classBuilder","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":112,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"toBuilder","description":"()Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":154,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"annotationBuilder","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":146,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"classBuilder","description":"(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":116,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"annotationBuilder","description":"(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":150,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"anonymousClassBuilder","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;","class":"TypeSpec","package":"com/squareup/javapoet","file-name":"TypeSpec.java","line-number":142,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"overriding","description":"(Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/type/DeclaredType;Ljavax/lang/model/util/Types;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":259,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"constructorBuilder","description":"()Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":192,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"lastParameterIsArray","description":"(Ljava/util/List;)Z","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":79,"classification":"partially-tested","detected":["false"],"not-detected":["true"],"tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]},{"status":"SURVIVED","mutator":"true","tests-run":4,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":[],"succeeding-tests":[]}]},{"name":"toBuilder","description":"()Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":280,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"methodBuilder","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":188,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullIsNotAValidMethodName(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullIsNotAValidMethodName(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"overriding","description":"(Ljavax/lang/model/element/ExecutableElement;)Lcom/squareup/javapoet/MethodSpec$Builder;","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":205,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideFinalClassMethod(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideInvalidModifiers(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.overrideInvalidModifiers(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideFinalClassMethod(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.overrideInvalidModifiers(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"javadocWithParameters","description":"()Lcom/squareup/javapoet/CodeBlock;","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":144,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"isConstructor","description":"()Z","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":162,"classification":"tested","detected":["true","false"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"false","tests-run":8,"tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":166,"classification":"partially-tested","detected":["false"],"not-detected":["true"],"tests":["com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]},{"status":"SURVIVED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":[],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;Ljava/lang/String;Ljava/util/Set;)V","class":"MethodSpec","package":"com/squareup/javapoet","file-name":"MethodSpec.java","line-number":85,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/Object;)Ljava/lang/String;","class":"NameAllocator","package":"com/squareup/javapoet","file-name":"NameAllocator.java","line-number":147,"classification":"tested","detected":["\"A\"","null","\"\""],"not-detected":[],"tests":["com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)"],"mutations":[{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]}]},{"name":"clone","description":"()Lcom/squareup/javapoet/NameAllocator;","class":"NameAllocator","package":"com/squareup/javapoet","file-name":"NameAllocator.java","line-number":163,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]}]},{"name":"toJavaIdentifier","description":"(Ljava/lang/String;)Ljava/lang/String;","class":"NameAllocator","package":"com/squareup/javapoet","file-name":"NameAllocator.java","line-number":129,"classification":"tested","detected":["\"A\"","\"\"","null"],"not-detected":[],"tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)"],"mutations":[{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]}]},{"name":"newName","description":"(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;","class":"NameAllocator","package":"com/squareup/javapoet","file-name":"NameAllocator.java","line-number":109,"classification":"tested","detected":["\"\"","null","\"A\""],"not-detected":[],"tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)"],"mutations":[{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSubstitute(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingSurrogate(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.javaKeyword(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollisionWithTag(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.tagReuseForbidden(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.usage(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartIsInvalidPart(com.squareup.javapoet.NameAllocatorTest)","com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]}]},{"name":"newName","description":"(Ljava/lang/String;)Ljava/lang/String;","class":"NameAllocator","package":"com/squareup/javapoet","file-name":"NameAllocator.java","line-number":100,"classification":"tested","detected":["\"\"","\"A\"","null"],"not-detected":[],"tests":["com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"mutations":[{"status":"KILLED","mutator":"\"\"","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"\"A\"","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"killing-tests":["com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/GenericArrayType;)Lcom/squareup/javapoet/ArrayTypeName;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":103,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/type/ArrayType;Ljava/util/Map;)Lcom/squareup/javapoet/ArrayTypeName;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":98,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"of","description":"(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/ArrayTypeName;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":88,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"withoutAnnotations","description":"()Lcom/squareup/javapoet/TypeName;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":47,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"emitBrackets","description":"(Lcom/squareup/javapoet/CodeWriter;Z)Lcom/squareup/javapoet/CodeWriter;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":67,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":3,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;Z)Lcom/squareup/javapoet/CodeWriter;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":55,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"of","description":"(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/ArrayTypeName;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":83,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/type/ArrayType;)Lcom/squareup/javapoet/ArrayTypeName;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":93,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"emitLeafType","description":"(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":60,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":51,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/GenericArrayType;Ljava/util/Map;)Lcom/squareup/javapoet/ArrayTypeName;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":107,"classification":"pseudo-tested","detected":[],"not-detected":["null"],"tests":["com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)"],"mutations":[{"status":"SURVIVED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)"],"killing-tests":[],"succeeding-tests":[]}]},{"name":"annotated","description":"(Ljava/util/List;)Lcom/squareup/javapoet/ArrayTypeName;","class":"ArrayTypeName","package":"com/squareup/javapoet","file-name":"ArrayTypeName.java","line-number":43,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":65,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"subtypeOf","description":"(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/WildcardTypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":84,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/WildcardType;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":125,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"supertypeOf","description":"(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/WildcardTypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":92,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"withoutAnnotations","description":"()Lcom/squareup/javapoet/TypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":61,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/type/WildcardType;)Lcom/squareup/javapoet/TypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":101,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/WildcardType;)Lcom/squareup/javapoet/TypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":121,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"supertypeOf","description":"(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/WildcardTypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":97,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"subtypeOf","description":"(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/WildcardTypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":80,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"annotated","description":"(Ljava/util/List;)Lcom/squareup/javapoet/WildcardTypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":57,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/type/WildcardType;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;","class":"WildcardTypeName","package":"com/squareup/javapoet","file-name":"WildcardTypeName.java","line-number":107,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/annotation/Annotation;)Lcom/squareup/javapoet/AnnotationSpec;","class":"AnnotationSpec","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":109,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"emitAnnotationValues","description":"(Lcom/squareup/javapoet/CodeWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V","class":"AnnotationSpec","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":89,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"builder","description":"(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":155,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;Z)V","class":"AnnotationSpec","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":54,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"toBuilder","description":"()Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":164,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"builder","description":"(Ljava/lang/Class;)Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":160,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/element/AnnotationMirror;)Lcom/squareup/javapoet/AnnotationSpec;","class":"AnnotationSpec","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":143,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/annotation/Annotation;Z)Lcom/squareup/javapoet/AnnotationSpec;","class":"AnnotationSpec","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":113,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"AnnotationSpec","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":172,"classification":"partially-tested","detected":["false"],"not-detected":["true"],"tests":["com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]},{"status":"SURVIVED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":[],"succeeding-tests":[]}]},{"name":"writeTo","description":"(Ljavax/annotation/processing/Filer;)V","class":"JavaFile","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":109,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)"],"killing-tests":["com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)"],"succeeding-tests":[]}]},{"name":"writeTo","description":"(Ljava/io/File;)V","class":"JavaFile","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":104,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)"],"killing-tests":["com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)"],"succeeding-tests":[]}]},{"name":"builder","description":"(Ljava/lang/String;Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/JavaFile$Builder;","class":"JavaFile","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":202,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"toJavaFileObject","description":"()Ljavax/tools/JavaFileObject;","class":"JavaFile","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":183,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)"],"succeeding-tests":[]}]},{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"JavaFile","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":162,"classification":"not-covered","detected":[],"not-detected":["true","false"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"true","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]},{"status":"NO_COVERAGE","mutator":"false","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"writeTo","description":"(Ljava/nio/file/Path;)V","class":"JavaFile","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":86,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)"],"killing-tests":["com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)"],"succeeding-tests":[]}]},{"name":"writeTo","description":"(Ljava/lang/Appendable;)V","class":"JavaFile","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":75,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"toBuilder","description":"()Lcom/squareup/javapoet/JavaFile$Builder;","class":"JavaFile","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":208,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;)V","class":"JavaFile","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":127,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addModifiers","description":"([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":156,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)"],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Ljava/lang/Class;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":152,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"build","description":"()Lcom/squareup/javapoet/FieldSpec;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":171,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)"],"succeeding-tests":[]}]},{"name":"initializer","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":161,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"initializer","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":165,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addJavadoc","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":129,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":147,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":142,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addJavadoc","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":124,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addAnnotations","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec$Builder","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":134,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)"],"killing-tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)"],"succeeding-tests":[]}]},{"name":"toBuilder","description":"()Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":113,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"get","description":"(Ljavax/lang/model/element/VariableElement;)Lcom/squareup/javapoet/ParameterSpec;","class":"ParameterSpec","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":86,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;Z)V","class":"ParameterSpec","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":53,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":2,"tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"toBuilder","description":"(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":117,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"ParameterSpec","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":64,"classification":"partially-tested","detected":["false"],"not-detected":["true"],"tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)"],"mutations":[{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)"],"killing-tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)"],"succeeding-tests":[]},{"status":"SURVIVED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)"],"killing-tests":[],"succeeding-tests":[]}]},{"name":"builder","description":"(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":109,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)"],"succeeding-tests":[]}]},{"name":"parametersOf","description":"(Ljavax/lang/model/element/ExecutableElement;)Ljava/util/List;","class":"ParameterSpec","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":94,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"builder","description":"(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":102,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)"],"succeeding-tests":[]}]},{"name":"nestedClass","description":"(Ljava/lang/String;Ljava/util/List;)Lcom/squareup/javapoet/ParameterizedTypeName;","class":"ParameterizedTypeName","package":"com/squareup/javapoet","file-name":"ParameterizedTypeName.java","line-number":107,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/ParameterizedTypeName;","class":"ParameterizedTypeName","package":"com/squareup/javapoet","file-name":"ParameterizedTypeName.java","line-number":119,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/ParameterizedType;Ljava/util/Map;)Lcom/squareup/javapoet/ParameterizedTypeName;","class":"ParameterizedTypeName","package":"com/squareup/javapoet","file-name":"ParameterizedTypeName.java","line-number":129,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"withoutAnnotations","description":"()Lcom/squareup/javapoet/TypeName;","class":"ParameterizedTypeName","package":"com/squareup/javapoet","file-name":"ParameterizedTypeName.java","line-number":63,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;","class":"ParameterizedTypeName","package":"com/squareup/javapoet","file-name":"ParameterizedTypeName.java","line-number":68,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":2,"tests":["com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)"],"succeeding-tests":[]}]},{"name":"get","description":"(Ljava/lang/reflect/ParameterizedType;)Lcom/squareup/javapoet/ParameterizedTypeName;","class":"ParameterizedTypeName","package":"com/squareup/javapoet","file-name":"ParameterizedTypeName.java","line-number":124,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"get","description":"(Lcom/squareup/javapoet/ClassName;[Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/ParameterizedTypeName;","class":"ParameterizedTypeName","package":"com/squareup/javapoet","file-name":"ParameterizedTypeName.java","line-number":114,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"annotated","description":"(Ljava/util/List;)Lcom/squareup/javapoet/ParameterizedTypeName;","class":"ParameterizedTypeName","package":"com/squareup/javapoet","file-name":"ParameterizedTypeName.java","line-number":57,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"nestedClass","description":"(Ljava/lang/String;)Lcom/squareup/javapoet/ParameterizedTypeName;","class":"ParameterizedTypeName","package":"com/squareup/javapoet","file-name":"ParameterizedTypeName.java","line-number":97,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"addJavadoc","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec$Builder","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":142,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec$Builder","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":160,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Ljava/lang/Class;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec$Builder","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":165,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"addJavadoc","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec$Builder","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":137,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)"],"succeeding-tests":[]}]},{"name":"addModifiers","description":"([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec$Builder","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":169,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)"],"succeeding-tests":[]}]},{"name":"addModifiers","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec$Builder","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":174,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)"],"succeeding-tests":[]}]},{"name":"addAnnotations","description":"(Ljava/lang/Iterable;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec$Builder","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":147,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)"],"killing-tests":["com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)"],"succeeding-tests":[]}]},{"name":"addAnnotation","description":"(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/ParameterSpec$Builder;","class":"ParameterSpec$Builder","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":155,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"build","description":"()Lcom/squareup/javapoet/ParameterSpec;","class":"ParameterSpec$Builder","package":"com/squareup/javapoet","file-name":"ParameterSpec.java","line-number":185,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)"],"succeeding-tests":[]}]},{"name":"joining","description":"(Ljava/lang/String;)Ljava/util/stream/Collector;","class":"CodeBlock","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":123,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"of","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock;","class":"CodeBlock","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":105,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"CodeBlock","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":84,"classification":"partially-tested","detected":["false"],"not-detected":["true"],"tests":["com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)"],"mutations":[{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]},{"status":"SURVIVED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)"],"killing-tests":[],"succeeding-tests":[]}]},{"name":"join","description":"(Ljava/lang/Iterable;Ljava/lang/String;)Lcom/squareup/javapoet/CodeBlock;","class":"CodeBlock","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":114,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"joining","description":"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Collector;","class":"CodeBlock","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":137,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"builder","description":"()Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":149,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexButNoArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexTooHigh(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullIsNotAValidMethodName(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tooFewArguments(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.statementBeginningCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.missingNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.lowerCaseNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.deindentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.isEmpty(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.indexIsZero(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementEndingCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.isEmpty(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.lowerCaseNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementBeginningCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.deindentCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexButNoArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsZero(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexTooHigh(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexWithoutFormatTypeNotAtStringEnd(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.missingNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementEndingCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.indexIsNegative(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.statementExitWithoutStatementEnter(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.danglingNamed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.addModifiersVarargsShouldNotBeNull(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumConstantsRequired(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tooFewArguments(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.nullIsNotAValidMethodName(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.originatingElementsIncludesThoseOfNestedTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullInSuperinterfaceIterableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromUnsupportedType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsRelative(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.unusedArgumentsIndexed(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullModifiersAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullSingleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nullTypesAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"toBuilder","description":"()Lcom/squareup/javapoet/CodeBlock$Builder;","class":"CodeBlock","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":153,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"succeeding-tests":[]}]},{"name":"visitTypeVariable","description":"(Ljavax/lang/model/type/TypeVariable;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;","class":"TypeName$1","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":303,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"visitDeclared","description":"(Ljavax/lang/model/type/DeclaredType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;","class":"TypeName$1","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":273,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"visitPrimitive","description":"(Ljavax/lang/model/type/PrimitiveType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;","class":"TypeName$1","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":250,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"visitWildcard","description":"(Ljavax/lang/model/type/WildcardType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;","class":"TypeName$1","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":307,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"visitArray","description":"(Ljavax/lang/model/type/ArrayType;Ljava/lang/Void;)Lcom/squareup/javapoet/ArrayTypeName;","class":"TypeName$1","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":299,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"visitNoType","description":"(Ljavax/lang/model/type/NoType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;","class":"TypeName$1","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":311,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getVoidTypeMirror(com.squareup.javapoet.TypesTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getVoidTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"defaultAction","description":"(Ljavax/lang/model/type/TypeMirror;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;","class":"TypeName$1","package":"com/squareup/javapoet","file-name":"TypeName.java","line-number":316,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.getNullTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getNullTypeMirror(com.squareup.javapoet.TypesTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getNullTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getNullTypeMirror(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getNullTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"builder","description":"(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":97,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)"],"succeeding-tests":[]}]},{"name":"emit","description":"(Lcom/squareup/javapoet/CodeWriter;Ljava/util/Set;)V","class":"FieldSpec","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":56,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":2,"tests":["com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"toBuilder","description":"()Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":101,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"builder","description":"(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;","class":"FieldSpec","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":90,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"killing-tests":["com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)"],"succeeding-tests":[]}]},{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"FieldSpec","package":"com/squareup/javapoet","file-name":"FieldSpec.java","line-number":68,"classification":"partially-tested","detected":["false"],"not-detected":["true"],"tests":["com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)"],"mutations":[{"status":"SURVIVED","mutator":"true","tests-run":1,"tests":["com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)"],"killing-tests":[],"succeeding-tests":[]},{"status":"KILLED","mutator":"false","tests-run":1,"tests":["com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)"],"killing-tests":["com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)"],"succeeding-tests":[]}]},{"name":"build","description":"()Lcom/squareup/javapoet/JavaFile;","class":"JavaFile$Builder","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":271,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNotDirectory(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)"],"succeeding-tests":[]}]},{"name":"addStaticImport","description":"(Ljava/lang/Class;[Ljava/lang/String;)Lcom/squareup/javapoet/JavaFile$Builder;","class":"JavaFile$Builder","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":238,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addStaticImport","description":"(Lcom/squareup/javapoet/ClassName;[Ljava/lang/String;)Lcom/squareup/javapoet/JavaFile$Builder;","class":"JavaFile$Builder","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":242,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addFileComment","description":"(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/JavaFile$Builder;","class":"JavaFile$Builder","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":229,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addStaticImport","description":"(Ljava/lang/Enum;)Lcom/squareup/javapoet/JavaFile$Builder;","class":"JavaFile$Builder","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":234,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"append","description":"(Ljava/lang/String;)V","class":"LineWrapper","package":"com/squareup/javapoet","file-name":"LineWrapper.java","line-number":57,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithoutLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithoutLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.repeatedNamedArgument(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.stringFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.noImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.pathDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.JavaFileTest.topOfFileComment(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.pathNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.filerNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.FileWritingTest.fileNestedClasses(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileIsUtf8(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.FileWritingTest.fileDefaultPackage(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromCharSequence(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromNull(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.classToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationDeclarationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.stringFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nameFromMethod(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.nameFromParameter(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.literalFromAnything(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.arrayType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationWithFields(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForMemberInterfacesAndEnums(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)"],"succeeding-tests":[]}]},{"name":"wrappingSpace","description":"(I)V","class":"LineWrapper","package":"com/squareup/javapoet","file-name":"LineWrapper.java","line-number":84,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)"],"succeeding-tests":[]}]},{"name":"close","description":"()V","class":"LineWrapper","package":"com/squareup/javapoet","file-name":"LineWrapper.java","line-number":104,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithoutLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":10,"tests":["com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithoutLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)"],"killing-tests":["com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)"],"succeeding-tests":[]}]},{"name":"flush","description":"(Lcom/squareup/javapoet/LineWrapper$FlushType;)V","class":"LineWrapper","package":"com/squareup/javapoet","file-name":"LineWrapper.java","line-number":110,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingSpace(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepost(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.multipleWrite(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapMultipleNewlines(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)"],"succeeding-tests":[]}]},{"name":"zeroWidthSpace","description":"(I)V","class":"LineWrapper","package":"com/squareup/javapoet","file-name":"LineWrapper.java","line-number":94,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":2,"tests":["com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.nospaceWrapMax(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.LineWrapperTest.wrapEmbeddedNewlines_ZeroWidth(com.squareup.javapoet.LineWrapperTest)","com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotation(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.withoutParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceDefaultMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceStaticMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleMethodAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrappingWithZeroWidthSpace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.ifElse(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)"],"succeeding-tests":[]}]},{"name":"addMember","description":"(Ljava/lang/String;Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec$Builder","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":206,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"build","description":"()Lcom/squareup/javapoet/AnnotationSpec;","class":"AnnotationSpec$Builder","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":241,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":6,"tests":["com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)"],"succeeding-tests":[]}]},{"name":"addMember","description":"(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec$Builder","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":202,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.requiresValidMemberName(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"addMemberForValue","description":"(Ljava/lang/String;Ljava/lang/Object;)Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec$Builder","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":219,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"visitType","description":"(Ljavax/lang/model/type/TypeMirror;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec$Visitor","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":269,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"visitArray","description":"(Ljava/util/List;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec$Visitor","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":273,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"visitAnnotation","description":"(Ljavax/lang/model/element/AnnotationMirror;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec$Visitor","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":261,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"visitEnumConstant","description":"(Ljavax/lang/model/element/VariableElement;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;","class":"AnnotationSpec$Visitor","package":"com/squareup/javapoet","file-name":"AnnotationSpec.java","line-number":265,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)"],"succeeding-tests":[]}]},{"name":"visitType","description":"(Ljavax/lang/model/element/TypeElement;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;","class":"ClassName$1","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":224,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"defaultAction","description":"(Ljavax/lang/model/element/Element;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;","class":"ClassName$1","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":232,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"visitPackage","description":"(Ljavax/lang/model/element/PackageElement;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;","class":"ClassName$1","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":220,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"visitUnknown","description":"(Ljavax/lang/model/element/Element;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;","class":"ClassName$1","package":"com/squareup/javapoet","file-name":"ClassName.java","line-number":228,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)"],"succeeding-tests":[]}]},{"name":"remove","description":"(Ljava/lang/Object;)V","class":"CodeWriter$Multiset","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":521,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":2,"tests":["com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"contains","description":"(Ljava/lang/Object;)Z","class":"CodeWriter$Multiset","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":529,"classification":"tested","detected":["true","false"],"not-detected":[],"tests":["com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)"],"mutations":[{"status":"KILLED","mutator":"true","tests-run":39,"tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]},{"status":"KILLED","mutator":"false","tests-run":82,"tests":["com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeClassName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.namedNewline(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.TypeNameTest.innerClassInGenericType(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.sameIndexCanBeUsedWithDifferentFormats(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.typeFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedTwice(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEnclosingAndNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedInnerMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayElementType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithExtends(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedEquivalence(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotated(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingChildName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingParentName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassFirst(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.nestedClassAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.packageClassConflictsWithSuperlass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArgumentOfParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotationIsNestedClass(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.singleImport(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeInVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)","com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticNone(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticReadmeExample(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticTwice(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.FileWritingTest.filerClassesWithTabIndent(com.squareup.javapoet.FileWritingTest)","com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.parameterizedType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsObject(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.getBasicTypeMirror(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardExtendsType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesEclipseTest.arrayType(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.TypesTest.wildcardSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.wildcardExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeName(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.fieldToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.createNestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.simpleNamesConflictInThisAndOtherPackage(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getArrayTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.parameterizedType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_nestedClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_defaultPackage(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleFieldAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.AnnotationSpecTest.emptyArray(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotationToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.ClassNameTest.bestGuessForString_simpleClass(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesTest.unbox(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.arrayType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.box(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsInAnnotations(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.invalidSuperClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleSuperinterfaceAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumImplements(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.interfaceExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nativeMethods(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardExtendsObject(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.interestingTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeFromReflectType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsExtends(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializerBlockInRightPlace(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.typeVariable(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.annotationsAndJavaLangTypes(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.classImplementsNestedClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.basic(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStrings(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleAnnotationAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlockToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.constructorToString(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.inlineIndent(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nestedClasses(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.referencedAndDeclaredSimpleNamesConflict(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithAnnotatedValues(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.enumWithMembersButNoConstructorCall(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.lineWrapping(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.innerAnnotationInAnnotationDeclaration(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.tryCatch(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.anonymousInnerClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.indexedElseIf(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.nullStringLiteral(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.membersOrdering(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multilineStatementWithAnonymousClass(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorExtendsType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.enumWithSubclassing(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.staticCodeBlock(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.AnnotationSpecTest.reflectAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypeSpecTest.defaultModifiersForInterfaceMembers(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.varargs(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.codeBlocks(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.wildcardMirrorSuperType(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeMirror(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getBasicTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypesTest.getParameterizedTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.TypeSpecTest.typeFromTypeElement(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypesTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesTest)","com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationToBuilder(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.FileReadingTest.compileJavaFile(com.squareup.javapoet.FileReadingTest)","com.squareup.javapoet.ClassNameTest.classNameFromTypeElementDoesntUseGetKind(com.squareup.javapoet.ClassNameTest)","com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)","com.squareup.javapoet.AnnotationSpecTest.defaultAnnotation(com.squareup.javapoet.AnnotationSpecTest)","com.squareup.javapoet.TypesTest.errorTypes(com.squareup.javapoet.TypesTest)"],"killing-tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)"],"succeeding-tests":[]}]},{"name":"add","description":"(Ljava/lang/Object;)V","class":"CodeWriter$Multiset","package":"com/squareup/javapoet","file-name":"CodeWriter.java","line-number":516,"classification":"tested","detected":["void"],"not-detected":[],"tests":["com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)"],"mutations":[{"status":"KILLED","mutator":"void","tests-run":1,"tests":["com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)","com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.TypeSpecTest.intersectionType(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.typeVariables(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.TypeSpecTest.multipleTypeVariableAddition(com.squareup.javapoet.TypeSpecTest)","com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)","com.squareup.javapoet.MethodSpecTest.overrideEverything(com.squareup.javapoet.MethodSpecTest)"],"killing-tests":["com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)"],"succeeding-tests":[]}]},{"name":"merge","description":"(Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;)Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;","class":"CodeBlock$CodeBlockJoiner","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":453,"classification":"not-covered","detected":[],"not-detected":["null"],"tests":[],"mutations":[{"status":"NO_COVERAGE","mutator":"null","tests-run":0,"tests":[],"killing-tests":[],"succeeding-tests":[]}]},{"name":"add","description":"(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;","class":"CodeBlock$CodeBlockJoiner","package":"com/squareup/javapoet","file-name":"CodeBlock.java","line-number":443,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joining(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)","com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)"],"killing-tests":["com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)"],"succeeding-tests":[]}]},{"name":"openInputStream","description":"()Ljava/io/InputStream;","class":"JavaFile$2","package":"com/squareup/javapoet","file-name":"JavaFile.java","line-number":193,"classification":"tested","detected":["null"],"not-detected":[],"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)"],"mutations":[{"status":"KILLED","mutator":"null","tests-run":1,"tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)"],"killing-tests":["com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)"],"succeeding-tests":[]}]}],"analysis":{"time":303792,"mutators":["void","null","empty","true","false","0","1","(short)0","(short)1","(byte)0","(byte)1","0L","1L","0.0","1.0","0.0f","1.0f","'\\40'","'A'","\"\"","\"A\""]}}