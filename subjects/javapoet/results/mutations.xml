<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>222</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>218</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitAndIndent</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>458</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitAnnotations</mutatedMethod><methodDescription>(Ljava/util/List;Z)V</methodDescription><lineNumber>160</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitComment</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)V</methodDescription><lineNumber>136</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitIndentation</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>496</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='57'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitJavadoc</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)V</methodDescription><lineNumber>147</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitLiteral</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>343</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.literalFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitModifiers</mutatedMethod><methodDescription>(Ljava/util/Set;)V</methodDescription><lineNumber>181</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitModifiers</mutatedMethod><methodDescription>(Ljava/util/Set;Ljava/util/Set;)V</methodDescription><lineNumber>172</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitStaticImportMember</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>329</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitStaticImportMember</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>329</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitTypeVariables</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>189</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>emitWrappingSpace</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>314</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>extractMemberName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>319</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>extractMemberName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>319</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>extractMemberName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>319</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='37'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>importableType</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)V</methodDescription><lineNumber>403</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.skipJavaLangImportsWithConflictingClassLast(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>indent</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>95</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>indent</mutatedMethod><methodDescription>(I)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>99</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.namedAndNoArgFormat(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>lookupName</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Ljava/lang/String;</methodDescription><lineNumber>364</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>lookupName</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Ljava/lang/String;</methodDescription><lineNumber>364</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>lookupName</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Ljava/lang/String;</methodDescription><lineNumber>364</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='104'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>popPackage</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>120</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>popType</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>131</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingNameOutOfScope(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>popTypeVariables</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>210</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>pushPackage</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>114</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>pushType</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>126</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>resolve</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>421</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>stackClassName</mutatedMethod><methodDescription>(ILjava/lang/String;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>445</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>suggestedImports</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>506</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>unindent</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>104</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter</mutatedClass><mutatedMethod>unindent</mutatedMethod><methodDescription>(I)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>108</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>335</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.retrofitStyleInterface(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>340</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>345</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.methodToString(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addAnnotations</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>327</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.nullAnnotationsAddition(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addCode</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>443</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultMethods(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addCode</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>433</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.defaultPackage(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addComment</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>448</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addException</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>424</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addException</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>429</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.methodThrows(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addExceptions</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>416</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.nullExceptionsAddition(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addJavadoc</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>322</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addJavadoc</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>317</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.withParameterJavaDoc(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addModifiers</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>355</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addModifiers</mutatedMethod><methodDescription>([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>349</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addNamedCode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Map;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>438</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addParameter</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ParameterSpec;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>394</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addParameter</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>399</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addParameter</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>403</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addParameters</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>386</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addStatement</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>500</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addStatement</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>495</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addTypeVariable</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeVariableName;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>371</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>addTypeVariables</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>363</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>beginControlFlow</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>467</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/MethodSpec;</methodDescription><lineNumber>505</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>defaultValue</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>457</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>defaultValue</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>453</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.classCannotHaveDefaultValueForMethod(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>endControlFlow</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>481</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>endControlFlow</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>490</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>nextControlFlow</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>476</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>returns</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>376</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>returns</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>382</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec$Builder</mutatedClass><mutatedMethod>varargs</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>407</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>439</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>445</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingAnnotation(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>449</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.addAnnotationDisallowsNull(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addAnnotations</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>431</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.nullAnnotationsAddition(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addEnumConstant</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>508</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addEnumConstant</mutatedMethod><methodDescription>(Ljava/lang/String;Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>512</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addField</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/FieldSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>529</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addField</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>540</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addField</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>544</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingImports(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addFields</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>521</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.nullFieldsAddition(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addInitializerBlock</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>553</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.initializerBlockUnsupportedExceptionOnAnnotation(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addJavadoc</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>426</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addJavadoc</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>421</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addMethod</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/MethodSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>573</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addMethods</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>565</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.nullMethodsAddition(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addModifiers</mutatedMethod><methodDescription>([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>453</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addOriginatingElement</mutatedMethod><methodDescription>(Ljavax/lang/model/element/Element;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>611</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileWritingTest.filerPassesOriginatingElements(com.squareup.javapoet.FileWritingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addStaticBlock</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>548</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addSuperinterface</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>498</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.defaultPackageTypesAreNotImported(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addSuperinterface</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>504</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.anonymousClassToString(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addSuperinterfaces</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>490</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.nullSuperinterfacesAddition(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addType</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>603</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addTypeVariable</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeVariableName;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>471</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addTypeVariables</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>462</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>addTypes</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>595</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.multipleTypeAddition(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/TypeSpec;</methodDescription><lineNumber>616</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>superclass</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>477</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.classAndSuperclassShareName(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec$Builder</mutatedClass><mutatedMethod>superclass</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>486</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>annotated</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>116</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationList(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>annotated</mutatedMethod><methodDescription>([Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>112</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.nullAnnotationArray(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>arrayComponent</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>373</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>asArray</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/ArrayTypeName;</methodDescription><lineNumber>380</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>box</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>162</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.box(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>concatAnnotations</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>125</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>223</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>emitAnnotations</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>233</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>196</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>196</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodePrimitive(com.squareup.javapoet.TypeNameTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>323</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>327</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/type/TypeMirror;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>243</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/type/TypeMirror;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>248</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>isAnnotated</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>131</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>isAnnotated</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>131</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.innerStaticInGenericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>isBoxedPrimitive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>147</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>isBoxedPrimitive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>147</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.isBoxedPrimitive(com.squareup.javapoet.TypeNameTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>isPrimitive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>139</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>isPrimitive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>139</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.isPrimitive(com.squareup.javapoet.TypeNameTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>list</mutatedMethod><methodDescription>([Ljava/lang/reflect/Type;)Ljava/util/List;</methodDescription><lineNumber>360</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>list</mutatedMethod><methodDescription>([Ljava/lang/reflect/Type;Ljava/util/Map;)Ljava/util/List;</methodDescription><lineNumber>364</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>unbox</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>182</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.unbox(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName</mutatedClass><mutatedMethod>withoutAnnotations</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>121</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>412</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>239</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>addArgument</mutatedMethod><methodDescription>(Ljava/lang/String;CLjava/lang/Object;)V</methodDescription><lineNumber>319</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>addNamed</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Map;)Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>182</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.lowerCaseNamed(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>addStatement</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>408</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.codeBlockAddStatementOfCodeBlockToString(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>addStatement</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>401</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>argToName</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>339</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>argToName</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>339</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>argToName</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>339</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.nameFormatCanBeIndexed(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>argToString</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>352</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>argToString</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>352</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>argToString</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>352</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.simpleNamedArgument(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>argToType</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>356</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.multipleNamedArguments(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>beginControlFlow</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>368</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeBlock;</methodDescription><lineNumber>428</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>endControlFlow</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>385</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>endControlFlow</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>395</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.doWhile(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>indent</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>418</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticForCrazyFormatsWorks(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>isNoArgPlaceholder</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>315</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.dollarSignEscapeCannotBeIndexed(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>isNoArgPlaceholder</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>315</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.formatIndicatorWithoutIndexOrFormatType(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>nextControlFlow</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>378</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.elseIf(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$Builder</mutatedClass><mutatedMethod>unindent</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>423</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticMixed(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>annotated</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>63</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>bestGuess</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>183</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.bestGuessNonAscii(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)I</methodDescription><lineNumber>238</lineNumber><mutator>0</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method body replaced by: return 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)I</methodDescription><lineNumber>238</lineNumber><mutator>1</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.annotatedTypeParam(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method body replaced by: return 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>242</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>enclosingClasses</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>281</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>150</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>206</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/element/TypeElement;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>215</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.classNameFromTypeElement(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>isAnnotated</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>76</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>isAnnotated</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>76</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.classNameFromClass(com.squareup.javapoet.ClassNameTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>nestedClass</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>133</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>peerClass</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>125</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>reflectionName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>105</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>reflectionName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>105</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>reflectionName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>105</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.reflectionName(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>simpleNames</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>111</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>topLevelClassName</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>100</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ClassNameTest.peerClass(com.squareup.javapoet.ClassNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName</mutatedClass><mutatedMethod>withoutAnnotations</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>68</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.withoutAnnotationsOnAnnotatedEnclosingType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>annotated</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>53</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>83</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.typeVariable(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>89</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/String;[Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>94</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>99</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/TypeVariable;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>149</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/TypeVariable;Ljava/util/Map;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>155</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/element/TypeParameterElement;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>136</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/type/TypeVariable;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>104</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/type/TypeVariable;Ljava/util/Map;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>117</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>77</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeTypeVariableName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>withBounds</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>69</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>withBounds</mutatedMethod><methodDescription>([Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>withBounds</mutatedMethod><methodDescription>([Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeVariableName;</methodDescription><lineNumber>61</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.typeVariableWithBounds(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TypeVariableName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeVariableName</mutatedClass><mutatedMethod>withoutAnnotations</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>characterLiteralWithoutSingleQuotes</mutatedMethod><methodDescription>(C)Ljava/lang/String;</methodDescription><lineNumber>91</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>characterLiteralWithoutSingleQuotes</mutatedMethod><methodDescription>(C)Ljava/lang/String;</methodDescription><lineNumber>91</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>characterLiteralWithoutSingleQuotes</mutatedMethod><methodDescription>(C)Ljava/lang/String;</methodDescription><lineNumber>91</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.UtilTest.characterLiteral(com.squareup.javapoet.UtilTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>checkArgument</mutatedMethod><methodDescription>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>53</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileReadingTest.javaFileObjectUri(com.squareup.javapoet.FileReadingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>checkState</mutatedMethod><methodDescription>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>immutableList</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/List;</methodDescription><lineNumber>66</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.tooManyStatementEnters(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>immutableMap</mutatedMethod><methodDescription>(Ljava/util/Map;)Ljava/util/Map;</methodDescription><lineNumber>49</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>immutableMultimap</mutatedMethod><methodDescription>(Ljava/util/Map;)Ljava/util/Map;</methodDescription><lineNumber>40</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>immutableSet</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/Set;</methodDescription><lineNumber>70</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>requireExactlyOneOf</mutatedMethod><methodDescription>(Ljava/util/Set;[Ljavax/lang/model/element/Modifier;)V</methodDescription><lineNumber>81</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest/><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>stringLiteralWithDoubleQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>stringLiteralWithDoubleQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>stringLiteralWithDoubleQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.UtilTest.stringLiteral(com.squareup.javapoet.UtilTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Util.java</sourceFile><mutatedClass>com.squareup.javapoet.Util</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;</methodDescription><lineNumber>74</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.enumsMayDefineAbstractMethods(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>annotationBuilder</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>150</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>annotationBuilder</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>146</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>anonymousClassBuilder</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>142</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>anonymousClassBuilder</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>136</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.onlyEnumsMayHaveEnumConstants(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>classBuilder</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>116</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>classBuilder</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>112</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.nullTypeVariablesAddition(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;Ljava/lang/String;Ljava/util/Set;)V</methodDescription><lineNumber>174</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>enumBuilder</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>132</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>enumBuilder</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>128</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>331</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.equalsAndHashCode(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>331</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>interfaceBuilder</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>124</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.classNameFactories(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>interfaceBuilder</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>120</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.superClassOnlyValidForClasses(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeSpec</mutatedClass><mutatedMethod>toBuilder</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/TypeSpec$Builder;</methodDescription><lineNumber>154</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.initializersToBuilder(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>constructorBuilder</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>192</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;Ljava/lang/String;Ljava/util/Set;)V</methodDescription><lineNumber>85</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>166</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>166</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>isConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>162</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.equalsAndHashCode(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>isConstructor</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>162</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>javadocWithParameters</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeBlock;</methodDescription><lineNumber>144</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>lastParameterIsArray</mutatedMethod><methodDescription>(Ljava/util/List;)Z</methodDescription><lineNumber>79</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>lastParameterIsArray</mutatedMethod><methodDescription>(Ljava/util/List;)Z</methodDescription><lineNumber>79</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>methodBuilder</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>188</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.nullParametersAddition(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>overriding</mutatedMethod><methodDescription>(Ljavax/lang/model/element/ExecutableElement;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>205</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.overrideInvalidModifiers(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>overriding</mutatedMethod><methodDescription>(Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/type/DeclaredType;Ljavax/lang/model/util/Types;)Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>259</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyDefaultModifier(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MethodSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.MethodSpec</mutatedClass><mutatedMethod>toBuilder</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/MethodSpec$Builder;</methodDescription><lineNumber>280</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.duplicateExceptionsIgnored(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>clone</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/NameAllocator;</methodDescription><lineNumber>163</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.cloneUsage(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.useBeforeAllocateForbidden(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>newName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>100</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>newName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>100</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>newName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>100</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.nameCollision(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>newName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>109</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>newName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>109</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>newName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>109</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>toJavaIdentifier</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All method body replaced by: return &#34;&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>toJavaIdentifier</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>&#34;A&#34;</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All method body replaced by: return &#34;A&#34;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameAllocator.java</sourceFile><mutatedClass>com.squareup.javapoet.NameAllocator</mutatedClass><mutatedMethod>toJavaIdentifier</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.NameAllocatorTest.characterMappingInvalidStartButValidPart(com.squareup.javapoet.NameAllocatorTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>annotated</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/squareup/javapoet/ArrayTypeName;</methodDescription><lineNumber>43</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>51</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;Z)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>55</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>emitBrackets</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;Z)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>67</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedOuterMultidimensionalArrayType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>emitLeafType</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>60</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.genericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/GenericArrayType;)Lcom/squareup/javapoet/ArrayTypeName;</methodDescription><lineNumber>103</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/GenericArrayType;Ljava/util/Map;)Lcom/squareup/javapoet/ArrayTypeName;</methodDescription><lineNumber>107</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/type/ArrayType;)Lcom/squareup/javapoet/ArrayTypeName;</methodDescription><lineNumber>93</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/type/ArrayType;Ljava/util/Map;)Lcom/squareup/javapoet/ArrayTypeName;</methodDescription><lineNumber>98</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/ArrayTypeName;</methodDescription><lineNumber>83</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/ArrayTypeName;</methodDescription><lineNumber>88</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeArrayTypeName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ArrayTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ArrayTypeName</mutatedClass><mutatedMethod>withoutAnnotations</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>47</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>annotated</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/squareup/javapoet/WildcardTypeName;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>65</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedWildcardTypeNameWithSuper(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/WildcardType;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>121</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/WildcardType;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>125</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/type/WildcardType;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>101</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/type/WildcardType;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>107</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>subtypeOf</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/WildcardTypeName;</methodDescription><lineNumber>80</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>subtypeOf</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/WildcardTypeName;</methodDescription><lineNumber>84</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>supertypeOf</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/WildcardTypeName;</methodDescription><lineNumber>92</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>supertypeOf</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/WildcardTypeName;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeWildcardTypeName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.WildcardTypeName</mutatedClass><mutatedMethod>withoutAnnotations</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>61</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>155</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>160</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.disallowsNullMemberName(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;Z)V</methodDescription><lineNumber>54</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>emitAnnotationValues</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V</methodDescription><lineNumber>89</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.equalsAndHashCode(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/annotation/Annotation;)Lcom/squareup/javapoet/AnnotationSpec;</methodDescription><lineNumber>109</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/annotation/Annotation;Z)Lcom/squareup/javapoet/AnnotationSpec;</methodDescription><lineNumber>113</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/element/AnnotationMirror;)Lcom/squareup/javapoet/AnnotationSpec;</methodDescription><lineNumber>143</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec</mutatedClass><mutatedMethod>toBuilder</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>164</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.dynamicArrayOfEnumConstants(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Ljava/lang/String;Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/JavaFile$Builder;</methodDescription><lineNumber>202</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;)V</methodDescription><lineNumber>127</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>162</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>162</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>toBuilder</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/JavaFile$Builder;</methodDescription><lineNumber>208</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>toJavaFileObject</mutatedMethod><methodDescription>()Ljavax/tools/JavaFileObject;</methodDescription><lineNumber>183</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>104</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/lang/Appendable;)V</methodDescription><lineNumber>75</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/nio/file/Path;)V</methodDescription><lineNumber>86</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileWritingTest.fileNotDirectory(com.squareup.javapoet.FileWritingTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljavax/annotation/processing/Filer;)V</methodDescription><lineNumber>109</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileWritingTest.filerDefaultPackage(com.squareup.javapoet.FileWritingTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>142</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.annotatedField(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>147</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>152</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>addAnnotations</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>134</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>addJavadoc</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>129</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>addJavadoc</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>124</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.javadoc(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>addModifiers</mutatedMethod><methodDescription>([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>156</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/FieldSpec;</methodDescription><lineNumber>171</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>initializer</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>165</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec$Builder</mutatedClass><mutatedMethod>initializer</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>161</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.doubleFieldInitialization(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>102</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>109</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;Z)V</methodDescription><lineNumber>53</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedArrayTypeVarargsParameter(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>64</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>64</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljavax/lang/model/element/VariableElement;)Lcom/squareup/javapoet/ParameterSpec;</methodDescription><lineNumber>86</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.overrideGenerics(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec</mutatedClass><mutatedMethod>parametersOf</mutatedMethod><methodDescription>(Ljavax/lang/model/element/ExecutableElement;)Ljava/util/List;</methodDescription><lineNumber>94</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.overrideDoesNotCopyOverrideAnnotation(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec</mutatedClass><mutatedMethod>toBuilder</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>113</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec</mutatedClass><mutatedMethod>toBuilder</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>117</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.overrideExtendsOthersWorksWithActualTypeParameters(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterizedTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterizedTypeName</mutatedClass><mutatedMethod>annotated</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/squareup/javapoet/ParameterizedTypeName;</methodDescription><lineNumber>57</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedParameterizedType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParameterizedTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterizedTypeName</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;</methodDescription><lineNumber>68</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterizedTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterizedTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;[Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/ParameterizedTypeName;</methodDescription><lineNumber>114</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.superclassReferencesSelf(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterizedTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterizedTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/ParameterizedTypeName;</methodDescription><lineNumber>119</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.equalsAndHashCodeParameterizedTypeName(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParameterizedTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterizedTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/ParameterizedType;)Lcom/squareup/javapoet/ParameterizedTypeName;</methodDescription><lineNumber>124</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterizedTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterizedTypeName</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Ljava/lang/reflect/ParameterizedType;Ljava/util/Map;)Lcom/squareup/javapoet/ParameterizedTypeName;</methodDescription><lineNumber>129</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParameterizedTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterizedTypeName</mutatedClass><mutatedMethod>nestedClass</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/squareup/javapoet/ParameterizedTypeName;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterizedTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterizedTypeName</mutatedClass><mutatedMethod>nestedClass</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;)Lcom/squareup/javapoet/ParameterizedTypeName;</methodDescription><lineNumber>107</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeNameTest.innerGenericInGenericType(com.squareup.javapoet.TypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParameterizedTypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterizedTypeName</mutatedClass><mutatedMethod>withoutAnnotations</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>63</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>155</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.annotatedParameters(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>160</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.parameterToString(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec$Builder</mutatedClass><mutatedMethod>addAnnotation</mutatedMethod><methodDescription>(Ljava/lang/Class;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>165</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec$Builder</mutatedClass><mutatedMethod>addAnnotations</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>147</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ParameterSpecTest.nullAnnotationsAddition(com.squareup.javapoet.ParameterSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec$Builder</mutatedClass><mutatedMethod>addJavadoc</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>142</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec$Builder</mutatedClass><mutatedMethod>addJavadoc</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>137</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.MethodSpecTest.withParameterJavaDocAndWithoutMethodJavadoc(com.squareup.javapoet.MethodSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec$Builder</mutatedClass><mutatedMethod>addModifiers</mutatedMethod><methodDescription>(Ljava/lang/Iterable;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>174</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec$Builder</mutatedClass><mutatedMethod>addModifiers</mutatedMethod><methodDescription>([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/ParameterSpec$Builder;</methodDescription><lineNumber>169</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ParameterSpecTest.addNonFinalModifier(com.squareup.javapoet.ParameterSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParameterSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.ParameterSpec$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/ParameterSpec;</methodDescription><lineNumber>185</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.ParameterSpecTest.equalsAndHashCode(com.squareup.javapoet.ParameterSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>149</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.formatIndicatorAlone(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>84</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.equalsAndHashCode(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>84</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock</mutatedClass><mutatedMethod>join</mutatedMethod><methodDescription>(Ljava/lang/Iterable;Ljava/lang/String;)Lcom/squareup/javapoet/CodeBlock;</methodDescription><lineNumber>114</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.join(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock</mutatedClass><mutatedMethod>joining</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/stream/Collector;</methodDescription><lineNumber>123</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock</mutatedClass><mutatedMethod>joining</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Collector;</methodDescription><lineNumber>137</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.joiningWithPrefixAndSuffix(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock;</methodDescription><lineNumber>105</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.of(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock</mutatedClass><mutatedMethod>toBuilder</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/CodeBlock$Builder;</methodDescription><lineNumber>153</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileReadingTest.javaFileObjectCharacterContent(com.squareup.javapoet.FileReadingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName$1</mutatedClass><mutatedMethod>defaultAction</mutatedMethod><methodDescription>(Ljavax/lang/model/type/TypeMirror;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>316</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getNullTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName$1</mutatedClass><mutatedMethod>visitArray</mutatedMethod><methodDescription>(Ljavax/lang/model/type/ArrayType;Ljava/lang/Void;)Lcom/squareup/javapoet/ArrayTypeName;</methodDescription><lineNumber>299</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName$1</mutatedClass><mutatedMethod>visitDeclared</mutatedMethod><methodDescription>(Ljavax/lang/model/type/DeclaredType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>273</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName$1</mutatedClass><mutatedMethod>visitNoType</mutatedMethod><methodDescription>(Ljavax/lang/model/type/NoType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>311</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getVoidTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName$1</mutatedClass><mutatedMethod>visitPrimitive</mutatedMethod><methodDescription>(Ljavax/lang/model/type/PrimitiveType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>250</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getPrimitiveTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName$1</mutatedClass><mutatedMethod>visitTypeVariable</mutatedMethod><methodDescription>(Ljavax/lang/model/type/TypeVariable;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>303</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TypeName.java</sourceFile><mutatedClass>com.squareup.javapoet.TypeName$1</mutatedClass><mutatedMethod>visitWildcard</mutatedMethod><methodDescription>(Ljavax/lang/model/type/WildcardType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;</methodDescription><lineNumber>307</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.wildcardMirrorNoBounds(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>90</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>97</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FieldSpecTest.nullAnnotationsAddition(com.squareup.javapoet.FieldSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec</mutatedClass><mutatedMethod>emit</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeWriter;Ljava/util/Set;)V</methodDescription><lineNumber>56</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.packageClassConflictsWithNestedClass(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>68</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FieldSpecTest.equalsAndHashCode(com.squareup.javapoet.FieldSpecTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>68</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest/><description>All method body replaced by: return true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FieldSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.FieldSpec</mutatedClass><mutatedMethod>toBuilder</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/FieldSpec$Builder;</methodDescription><lineNumber>101</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile$Builder</mutatedClass><mutatedMethod>addFileComment</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/JavaFile$Builder;</methodDescription><lineNumber>229</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.emptyLinesInTopOfFileComment(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile$Builder</mutatedClass><mutatedMethod>addStaticImport</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/ClassName;[Ljava/lang/String;)Lcom/squareup/javapoet/JavaFile$Builder;</methodDescription><lineNumber>242</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile$Builder</mutatedClass><mutatedMethod>addStaticImport</mutatedMethod><methodDescription>(Ljava/lang/Class;[Ljava/lang/String;)Lcom/squareup/javapoet/JavaFile$Builder;</methodDescription><lineNumber>238</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticUsingWildcards(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile$Builder</mutatedClass><mutatedMethod>addStaticImport</mutatedMethod><methodDescription>(Ljava/lang/Enum;)Lcom/squareup/javapoet/JavaFile$Builder;</methodDescription><lineNumber>234</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.importStaticOnce(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/JavaFile;</methodDescription><lineNumber>271</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileReadingTest.javaFileObjectKind(com.squareup.javapoet.FileReadingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineWrapper.java</sourceFile><mutatedClass>com.squareup.javapoet.LineWrapper</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>57</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.LineWrapperTest.overlyLongLinesWithLeadingZeroWidth(com.squareup.javapoet.LineWrapperTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>LineWrapper.java</sourceFile><mutatedClass>com.squareup.javapoet.LineWrapper</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>104</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.LineWrapperTest.zeroWidthNoWrap(com.squareup.javapoet.LineWrapperTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineWrapper.java</sourceFile><mutatedClass>com.squareup.javapoet.LineWrapper</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/LineWrapper$FlushType;)V</methodDescription><lineNumber>110</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineWrapper.java</sourceFile><mutatedClass>com.squareup.javapoet.LineWrapper</mutatedClass><mutatedMethod>wrappingSpace</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>84</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.LineWrapperTest.noWrapEmbeddedNewlines(com.squareup.javapoet.LineWrapperTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>LineWrapper.java</sourceFile><mutatedClass>com.squareup.javapoet.LineWrapper</mutatedClass><mutatedMethod>zeroWidthSpace</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>94</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.LineWrapperTest.fencepostZeroWidth(com.squareup.javapoet.LineWrapperTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec$Builder</mutatedClass><mutatedMethod>addMember</mutatedMethod><methodDescription>(Ljava/lang/String;Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>206</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec$Builder</mutatedClass><mutatedMethod>addMember</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>202</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec$Builder</mutatedClass><mutatedMethod>addMemberForValue</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Object;)Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>219</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.reflectAnnotationWithDefaults(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec$Builder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lcom/squareup/javapoet/AnnotationSpec;</methodDescription><lineNumber>241</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotatedTypeNameTest.annotatedNestedType(com.squareup.javapoet.AnnotatedTypeNameTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec$Visitor</mutatedClass><mutatedMethod>visitAnnotation</mutatedMethod><methodDescription>(Ljavax/lang/model/element/AnnotationMirror;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>261</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec$Visitor</mutatedClass><mutatedMethod>visitArray</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>273</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec$Visitor</mutatedClass><mutatedMethod>visitEnumConstant</mutatedMethod><methodDescription>(Ljavax/lang/model/element/VariableElement;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>265</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AnnotationSpec.java</sourceFile><mutatedClass>com.squareup.javapoet.AnnotationSpec$Visitor</mutatedClass><mutatedMethod>visitType</mutatedMethod><methodDescription>(Ljavax/lang/model/type/TypeMirror;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;</methodDescription><lineNumber>269</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.AnnotationSpecTest.defaultAnnotationWithImport(com.squareup.javapoet.AnnotationSpecTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName$1</mutatedClass><mutatedMethod>defaultAction</mutatedMethod><methodDescription>(Ljavax/lang/model/element/Element;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>232</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName$1</mutatedClass><mutatedMethod>visitPackage</mutatedMethod><methodDescription>(Ljavax/lang/model/element/PackageElement;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>220</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getArrayTypeMirror(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName$1</mutatedClass><mutatedMethod>visitType</mutatedMethod><methodDescription>(Ljavax/lang/model/element/TypeElement;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>224</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.getTypeVariableTypeMirrorRecursive(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ClassName.java</sourceFile><mutatedClass>com.squareup.javapoet.ClassName$1</mutatedClass><mutatedMethod>visitUnknown</mutatedMethod><methodDescription>(Ljavax/lang/model/element/Element;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;</methodDescription><lineNumber>228</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypesEclipseTest.errorTypes(com.squareup.javapoet.TypesEclipseTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter$Multiset</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>516</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingTypeVariableBound(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter$Multiset</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>529</lineNumber><mutator>false</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All method body replaced by: return false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter$Multiset</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>529</lineNumber><mutator>true</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.JavaFileTest.conflictingAnnotationReferencedClass(com.squareup.javapoet.JavaFileTest)</killingTest><description>All method body replaced by: return true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CodeWriter.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeWriter$Multiset</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>521</lineNumber><mutator>void</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.TypeSpecTest.simpleNameConflictsWithTypeVariable(com.squareup.javapoet.TypeSpecTest)</killingTest><description>All method instructions removed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$CodeBlockJoiner</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;</methodDescription><lineNumber>443</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.CodeBlockTest.joiningSingle(com.squareup.javapoet.CodeBlockTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CodeBlock.java</sourceFile><mutatedClass>com.squareup.javapoet.CodeBlock$CodeBlockJoiner</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;)Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;</methodDescription><lineNumber>453</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest/><description>All methods instructions replaced by: return null;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>JavaFile.java</sourceFile><mutatedClass>com.squareup.javapoet.JavaFile$2</mutatedClass><mutatedMethod>openInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>193</lineNumber><mutator>null</mutator><index>1</index><block>1</block><killingTest>com.squareup.javapoet.FileReadingTest.javaFileObjectInputStreamIsUtf8(com.squareup.javapoet.FileReadingTest)</killingTest><description>All methods instructions replaced by: return null;</description></mutation>
</mutations>
