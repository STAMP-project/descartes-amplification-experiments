/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.codec.net;


/**
 * Percent codec test cases.
 */
public class PercentCodecTest {
    @org.junit.Test
    public void testBasicEncodeDecode() throws java.lang.Exception {
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec());
        final java.lang.String input = "abcdABCD";
        byte[] encoded = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|5", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|4", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|2", input).getBytes(eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|3", java.nio.charset.Charset.class, java.nio.charset.StandardCharsets.UTF_8)))));
        final java.lang.String encodedS = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|7", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|6", byte[].class, encoded), "UTF-8"));
        byte[] decoded = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|10", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|8", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|9", byte[].class, encoded)));
        final java.lang.String decodedS = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|12", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|11", byte[].class, decoded), "UTF-8"));
        org.junit.Assert.assertEquals("Basic PercentCodec encoding test", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|13", input), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|14", encodedS));
        org.junit.Assert.assertEquals("Basic PercentCodec decoding test", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|15", input), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testBasicEncodeDecode()|16", decodedS));
    }

    @org.junit.Test
    @org.junit.Ignore
    public void testBasicSpace() throws java.lang.Exception {
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicSpace()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec());
        final java.lang.String input = " ";
        byte[] encoded = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicSpace()|5", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicSpace()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicSpace()|4", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testBasicSpace()|2", input).getBytes(eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicSpace()|3", java.nio.charset.Charset.class, java.nio.charset.StandardCharsets.UTF_8)))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicSpace()|7", byte[].class, "%20".getBytes(eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicSpace()|6", java.nio.charset.Charset.class, java.nio.charset.StandardCharsets.UTF_8))), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testBasicSpace()|8", byte[].class, encoded));
    }

    @org.junit.Test
    public void testConfigurablePercentEncoder() throws java.lang.Exception {
        final java.lang.String input = "abc123_-.*\u03b1\u03b2";
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|1", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|0", byte[].class, "abcdef".getBytes("UTF-8")), false));
        byte[] encoded = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|6", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|2", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|5", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|3", input).getBytes(eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|4", java.nio.charset.Charset.class, java.nio.charset.StandardCharsets.UTF_8)))));
        final java.lang.String encodedS = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|8", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|7", byte[].class, encoded), "UTF-8"));
        org.junit.Assert.assertEquals("Configurable PercentCodec encoding test", "%61%62%63123_-.*%CE%B1%CE%B2", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|9", encodedS));
        final byte[] decoded = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|12", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|10", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|11", byte[].class, encoded)));
        org.junit.Assert.assertEquals("Configurable PercentCodec decoding test", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|14", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|13", byte[].class, decoded), "UTF-8")), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testConfigurablePercentEncoder()|15", input));
    }

    @org.junit.Test
    public void testDecodeInvalidEncodedResultDecoding() throws java.lang.Exception {
        java.lang.String inputS = "\u03b1\u03b2";
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec());
        byte[] encoded = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|4", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|3", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|2", inputS).getBytes("UTF-8"))));
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|10", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|5", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|9", byte[].class, java.util.Arrays.copyOf(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|6", byte[].class, encoded), ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|7", byte[].class, encoded).length)) - 1))))// exclude one byte
            );
        } catch (java.lang.Exception e) {
            org.junit.Assert.assertTrue(((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|12", org.apache.commons.codec.DecoderException.class.isInstance(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Exception>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|11", java.lang.Exception.class, e)))) && (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|15", java.lang.ArrayIndexOutOfBoundsException.class.isInstance(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Throwable>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|14", java.lang.Throwable.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Exception>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeInvalidEncodedResultDecoding()|13", java.lang.Exception.class, e).getCause()))))));
        }
    }

    @org.junit.Test
    public void testDecodeNullObject() throws java.lang.Exception {
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeNullObject()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec());
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeNullObject()|2", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeNullObject()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode(((java.lang.Object) (null)))), null);
    }

    @org.junit.Test(expected = org.apache.commons.codec.DecoderException.class)
    public void testDecodeUnsupportedObject() throws java.lang.Exception {
        try {
            org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeUnsupportedObject()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec());
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeUnsupportedObject()|2", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testDecodeUnsupportedObject()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode("test"));
        } catch (org.apache.commons.codec.DecoderException a1553628734523) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.net.PercentCodecTest|testDecodeUnsupportedObject()|!", a1553628734523);
            throw a1553628734523;
        }
    }

    @org.junit.Test
    public void testEncodeNullObject() throws java.lang.Exception {
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testEncodeNullObject()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec());
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.codec.net.PercentCodecTest|testEncodeNullObject()|2", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testEncodeNullObject()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(((java.lang.Object) (null)))), null);
    }

    @org.junit.Test(expected = org.apache.commons.codec.EncoderException.class)
    public void testEncodeUnsupportedObject() throws java.lang.Exception {
        try {
            org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testEncodeUnsupportedObject()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec());
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.codec.net.PercentCodecTest|testEncodeUnsupportedObject()|2", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testEncodeUnsupportedObject()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode("test"));
        } catch (org.apache.commons.codec.EncoderException a1553628734523) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.net.PercentCodecTest|testEncodeUnsupportedObject()|!", a1553628734523);
            throw a1553628734523;
        }
    }

    @org.junit.Test
    public void testPercentEncoderDecoderWithNullOrEmptyInput() throws java.lang.Exception {
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec(null, true));
        org.junit.Assert.assertEquals("Null input value encoding test", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|2", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(null)), null);
        org.junit.Assert.assertEquals("Null input value decoding test", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|4", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|3", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode(null)), null);
        byte[] emptyInput = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|5", byte[].class, "".getBytes("UTF-8"));
        org.junit.Assert.assertEquals("Empty input value encoding test", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|8", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|6", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|7", byte[].class, emptyInput))), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|9", byte[].class, emptyInput));
        org.junit.Assert.assertTrue("Empty input value decoding test", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|14", java.util.Arrays.equals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|12", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|10", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|11", byte[].class, emptyInput))), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithNullOrEmptyInput()|13", byte[].class, emptyInput))));
    }

    @org.junit.Test
    public void testPercentEncoderDecoderWithPlusForSpace() throws java.lang.Exception {
        final java.lang.String input = "a b c d";
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec(null, true));
        byte[] encoded = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|5", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|4", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|2", input).getBytes(eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|3", java.nio.charset.Charset.class, java.nio.charset.StandardCharsets.UTF_8)))));
        final java.lang.String encodedS = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|7", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|6", byte[].class, encoded), "UTF-8"));
        org.junit.Assert.assertEquals("PercentCodec plus for space encoding test", "a+b+c+d", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|8", encodedS));
        byte[] decode = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|11", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|9", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|10", byte[].class, encoded)));
        org.junit.Assert.assertEquals("PercentCodec plus for space decoding test", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|13", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|12", byte[].class, decode), "UTF-8")), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testPercentEncoderDecoderWithPlusForSpace()|14", input));
    }

    @org.junit.Test
    public void testSafeCharEncodeDecodeObject() throws java.lang.Exception {
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec(null, true));
        final java.lang.String input = "abc123_-.*";
        java.lang.Object encoded = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|5", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|4", java.lang.Object.class, ((java.lang.Object) (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|2", input).getBytes(eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|3", java.nio.charset.Charset.class, java.nio.charset.StandardCharsets.UTF_8)))))));
        final java.lang.String encodedS = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|7", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|6", byte[].class, ((byte[]) (encoded))), "UTF-8"));
        java.lang.Object decoded = eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|10", java.lang.Object.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|8", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode(eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.Object>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|9", java.lang.Object.class, encoded)));
        final java.lang.String decodedS = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|12", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|11", byte[].class, ((byte[]) (decoded))), "UTF-8"));
        org.junit.Assert.assertEquals("Basic PercentCodec safe char encoding test", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|13", input), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|14", encodedS));
        org.junit.Assert.assertEquals("Basic PercentCodec safe char decoding test", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|15", input), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testSafeCharEncodeDecodeObject()|16", decodedS));
    }

    @org.junit.Test
    public void testUnsafeCharEncodeDecode() throws java.lang.Exception {
        org.apache.commons.codec.net.PercentCodec percentCodec = eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|0", org.apache.commons.codec.net.PercentCodec.class, new org.apache.commons.codec.net.PercentCodec());
        final java.lang.String input = "\u03b1\u03b2\u03b3\u03b4\u03b5\u03b6% ";
        byte[] encoded = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|5", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|1", org.apache.commons.codec.net.PercentCodec.class, percentCodec).encode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|4", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|2", input).getBytes(eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.charset.Charset>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|3", java.nio.charset.Charset.class, java.nio.charset.StandardCharsets.UTF_8)))));
        final java.lang.String encodedS = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|7", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|6", byte[].class, encoded), "UTF-8"));
        byte[] decoded = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|10", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.net.PercentCodec>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|8", org.apache.commons.codec.net.PercentCodec.class, percentCodec).decode(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|9", byte[].class, encoded)));
        final java.lang.String decodedS = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|12", new java.lang.String(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|11", byte[].class, decoded), "UTF-8"));
        org.junit.Assert.assertEquals("Basic PercentCodec unsafe char encoding test", "%CE%B1%CE%B2%CE%B3%CE%B4%CE%B5%CE%B6%25 ", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|13", encodedS));
        org.junit.Assert.assertEquals("Basic PercentCodec unsafe char decoding test", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|14", input), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.net.PercentCodecTest|testUnsafeCharEncodeDecode()|15", decodedS));
    }
}

