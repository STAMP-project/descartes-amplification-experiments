/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.codec.digest;


/**
 * Tests HmacUtils methods.
 *
 * @version $Id$
 */
public class HmacUtilsTest {
    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testEmptyKey() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testEmptyKey()|1", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacMd5(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testEmptyKey()|0", byte[].class, new byte[]{  })));
        } catch (java.lang.IllegalArgumentException a1553628734201) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testEmptyKey()|!", a1553628734201);
            throw a1553628734201;
        }
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testGetHMac() {
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|4", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|2", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacMd5(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|1", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES))).doFinal(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|3", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|5", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|9", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|7", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacSha1(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|6", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES))).doFinal(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|8", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|10", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA256_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|14", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|12", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacSha256(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|11", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES))).doFinal(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|13", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|15", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA384_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|19", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|17", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacSha384(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|16", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES))).doFinal(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|18", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|20", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA512_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|24", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|22", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacSha512(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|21", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES))).doFinal(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testGetHMac()|23", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testHmacMd5Hex() throws java.io.IOException {
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacMd5Hex()|0", org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, "The quick brown fox jumps over the lazy dog")));
        org.junit.Assert.assertEquals("750c783e6ab0b503eaa86e310a5db738", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacMd5Hex()|1", org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex("Jefe", "what do ya want for nothing?")));
        org.junit.Assert.assertEquals("750c783e6ab0b503eaa86e310a5db738", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacMd5Hex()|5", org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacMd5Hex()|2", byte[].class, "Jefe".getBytes()), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacMd5Hex()|4", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacMd5Hex()|3", byte[].class, "what do ya want for nothing?".getBytes()))))));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testHmacSha1Hex() throws java.io.IOException {
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1Hex()|0", org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
        org.junit.Assert.assertEquals("f42bb0eeb018ebbd4597ae7213711ec60760843f", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1Hex()|1", org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, "")));
        org.junit.Assert.assertEquals("effcdf6ae5eb2fa2d27416d5f184df9c259a7c79", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1Hex()|2", org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex("Jefe", "what do ya want for nothing?")));
        org.junit.Assert.assertEquals("effcdf6ae5eb2fa2d27416d5f184df9c259a7c79", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1Hex()|6", org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1Hex()|3", byte[].class, "Jefe".getBytes()), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1Hex()|5", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1Hex()|4", byte[].class, "what do ya want for nothing?".getBytes()))))));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testHmacSha1UpdateWithByteArray() {
        final javax.crypto.Mac mac = eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|1", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacSha1(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|4", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.updateHmac(eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|2", javax.crypto.Mac.class, mac), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|3", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES)));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|7", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|6", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|5", javax.crypto.Mac.class, mac).doFinal()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|10", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.updateHmac(eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|8", javax.crypto.Mac.class, mac), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|9", byte[].class, "".getBytes())));
        org.junit.Assert.assertEquals("f42bb0eeb018ebbd4597ae7213711ec60760843f", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|13", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|12", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithByteArray()|11", javax.crypto.Mac.class, mac).doFinal()))));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testHmacSha1UpdateWithInpustream() throws java.io.IOException {
        final javax.crypto.Mac mac = eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|1", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacSha1(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|5", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.updateHmac(eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|2", javax.crypto.Mac.class, mac), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|4", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|3", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES)))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|8", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|7", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|6", javax.crypto.Mac.class, mac).doFinal()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|12", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.updateHmac(eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|9", javax.crypto.Mac.class, mac), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|11", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|10", byte[].class, "".getBytes())))));
        org.junit.Assert.assertEquals("f42bb0eeb018ebbd4597ae7213711ec60760843f", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|15", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|14", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithInpustream()|13", javax.crypto.Mac.class, mac).doFinal()))));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testHmacSha1UpdateWithString() {
        final javax.crypto.Mac mac = eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|1", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacSha1(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|3", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.updateHmac(eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|2", javax.crypto.Mac.class, mac), org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|6", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|5", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|4", javax.crypto.Mac.class, mac).doFinal()))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|8", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.updateHmac(eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|7", javax.crypto.Mac.class, mac), ""));
        org.junit.Assert.assertEquals("f42bb0eeb018ebbd4597ae7213711ec60760843f", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|11", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|10", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testHmacSha1UpdateWithString()|9", javax.crypto.Mac.class, mac).doFinal()))));
    }

    @org.junit.Test
    public void testInitializedMac() {
        final javax.crypto.Mac md5Mac = eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|2", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getInitializedMac(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.digest.HmacAlgorithms>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|0", org.apache.commons.codec.digest.HmacAlgorithms.class, org.apache.commons.codec.digest.HmacAlgorithms.HMAC_MD5), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|1", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES)));
        final javax.crypto.Mac md5Mac2 = eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|4", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getInitializedMac("HmacMD5", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|3", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES)));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|5", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|8", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|7", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.updateHmac(eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|6", javax.crypto.Mac.class, md5Mac), org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)).doFinal()));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|9", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|12", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|11", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.updateHmac(eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMac()|10", javax.crypto.Mac.class, md5Mac2), org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)).doFinal()));
    }

    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testInitializedMacNullAlgo() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMacNullAlgo()|1", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getInitializedMac(((java.lang.String) (null)), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMacNullAlgo()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES)));
        } catch (java.lang.IllegalArgumentException a1553628734214) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMacNullAlgo()|!", a1553628734214);
            throw a1553628734214;
        }
    }

    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testInitializedMacNullKey() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMacNullKey()|1", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getInitializedMac(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.digest.HmacAlgorithms>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMacNullKey()|0", org.apache.commons.codec.digest.HmacAlgorithms.class, org.apache.commons.codec.digest.HmacAlgorithms.HMAC_MD5), null));
        } catch (java.lang.IllegalArgumentException a1553628734214) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testInitializedMacNullKey()|!", a1553628734214);
            throw a1553628734214;
        }
    }

    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testInternalNoSuchAlgorithmException() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInternalNoSuchAlgorithmException()|1", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getInitializedMac("Bogus Bogus", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testInternalNoSuchAlgorithmException()|0", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8("akey"))));
        } catch (java.lang.IllegalArgumentException a1553628734215) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testInternalNoSuchAlgorithmException()|!", a1553628734215);
            throw a1553628734215;
        }
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testMd5HMac() throws java.io.IOException {
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|3", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacMd5(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|1", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|2", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|4", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|8", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacMd5(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|5", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|7", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|6", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|9", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|10", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|13", org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|11", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|12", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|17", org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|14", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|16", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|15", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_MD5_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMac()|18", org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testMd5HMacFail() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMacFail()|1", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacMd5(((byte[]) (null)), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMacFail()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES)));
        } catch (java.lang.IllegalArgumentException a1553628734217) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testMd5HMacFail()|!", a1553628734217);
            throw a1553628734217;
        }
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testNullKey() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.Mac>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testNullKey()|0", javax.crypto.Mac.class, org.apache.commons.codec.digest.HmacUtils.getHmacMd5(null));
        } catch (java.lang.IllegalArgumentException a1553628734217) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testNullKey()|!", a1553628734217);
            throw a1553628734217;
        }
    }

    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testSecretKeySpecAllowsEmtyKeys() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<javax.crypto.spec.SecretKeySpec>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSecretKeySpecAllowsEmtyKeys()|1", javax.crypto.spec.SecretKeySpec.class, new javax.crypto.spec.SecretKeySpec(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSecretKeySpecAllowsEmtyKeys()|0", byte[].class, new byte[]{  }), "HmacMD5"));
        } catch (java.lang.IllegalArgumentException a1553628734218) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testSecretKeySpecAllowsEmtyKeys()|!", a1553628734218);
            throw a1553628734218;
        }
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testSha1HMac() throws java.io.IOException {
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|3", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha1(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|1", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|2", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|4", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|8", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha1(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|5", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|7", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|6", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|9", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|10", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|13", org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|11", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|12", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|17", org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|14", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|16", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|15", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA1_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMac()|18", org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testSha1HMacFail() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMacFail()|1", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha1(((byte[]) (null)), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMacFail()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES)));
        } catch (java.lang.IllegalArgumentException a1553628734219) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testSha1HMacFail()|!", a1553628734219);
            throw a1553628734219;
        }
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testSha256HMac() throws java.io.IOException {
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA256_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|3", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha256(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|1", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|2", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|4", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA256_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|8", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha256(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|5", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|7", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|6", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|9", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA256_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|10", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA256_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|13", org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|11", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|12", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA256_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|17", org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|14", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|16", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|15", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA256_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMac()|18", org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testSha256HMacFail() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMacFail()|1", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha256(((byte[]) (null)), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMacFail()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES)));
        } catch (java.lang.IllegalArgumentException a1553628734221) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testSha256HMacFail()|!", a1553628734221);
            throw a1553628734221;
        }
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testSha384HMac() throws java.io.IOException {
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA384_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|3", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha384(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|1", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|2", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|4", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA384_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|8", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha384(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|5", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|7", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|6", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|9", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA384_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|10", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA384_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|13", org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|11", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|12", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA384_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|17", org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|14", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|16", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|15", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA384_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMac()|18", org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testSha384HMacFail() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMacFail()|1", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha384(((byte[]) (null)), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMacFail()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES)));
        } catch (java.lang.IllegalArgumentException a1553628734223) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testSha384HMacFail()|!", a1553628734223);
            throw a1553628734223;
        }
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testSha512HMac() throws java.io.IOException {
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA512_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|3", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha512(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|1", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|2", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|4", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA512_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|8", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha512(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|5", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|7", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|6", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertArrayEquals(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|9", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA512_RESULT_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|10", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA512_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|13", org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|11", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|12", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA512_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|17", org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|14", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_BYTES), eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|16", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|15", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES))))));
        org.junit.Assert.assertEquals(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_SHA512_RESULT_STRING, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMac()|18", org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_KEY_STRING, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_STRING)));
    }

    // most of the static methods are deprecated
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testSha512HMacFail() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMacFail()|1", byte[].class, org.apache.commons.codec.digest.HmacUtils.hmacSha512(((byte[]) (null)), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMacFail()|0", byte[].class, org.apache.commons.codec.digest.HmacAlgorithmsTest.STANDARD_PHRASE_BYTES)));
        } catch (java.lang.IllegalArgumentException a1553628734226) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.HmacUtilsTest|testSha512HMacFail()|!", a1553628734226);
            throw a1553628734226;
        }
    }
}

