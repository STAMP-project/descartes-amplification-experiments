/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.codec.digest;


/**
 * Tests DigestUtils methods.
 *
 * @version $Id$
 */
public class DigestUtilsTest {
    private final byte[] testData = new byte[1024 * 1024];

    private java.io.File testFile;

    private void assumeJava8() {
        org.junit.Assume.assumeTrue(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|assumeJava8()|1", org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.lang3.JavaVersion>observeState("org.apache.commons.codec.digest.DigestUtilsTest|assumeJava8()|0", org.apache.commons.lang3.JavaVersion.class, org.apache.commons.lang3.JavaVersion.JAVA_1_8))));
    }

    byte[] getTestData() {
        return eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|getTestData()|0", byte[].class, testData);
    }

    java.io.File getTestFile() {
        return eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.apache.commons.codec.digest.DigestUtilsTest|getTestFile()|0", java.io.File.class, testFile);
    }

    @org.junit.Before
    public void setUp() throws java.lang.Exception {
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.Random>observeState("org.apache.commons.codec.digest.DigestUtilsTest|setUp()|0", java.util.Random.class, new java.util.Random()).nextBytes(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|setUp()|1", byte[].class, testData));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.apache.commons.codec.digest.DigestUtilsTest|setUp()|3", java.io.File.class, (testFile = java.io.File.createTempFile(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|setUp()|2", org.apache.commons.codec.digest.DigestUtilsTest.class.getName()), ".dat")));
        try (final java.io.FileOutputStream fos = eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.FileOutputStream>observeState("org.apache.commons.codec.digest.DigestUtilsTest|setUp()|5", java.io.FileOutputStream.class, new java.io.FileOutputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.apache.commons.codec.digest.DigestUtilsTest|setUp()|4", java.io.File.class, testFile)))) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.FileOutputStream>observeState("org.apache.commons.codec.digest.DigestUtilsTest|setUp()|6", java.io.FileOutputStream.class, fos).write(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|setUp()|7", byte[].class, testData));
        }
    }

    @org.junit.After
    public void tearDown() {
        if (!(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|tearDown()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.apache.commons.codec.digest.DigestUtilsTest|tearDown()|0", java.io.File.class, testFile).delete()))) {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.apache.commons.codec.digest.DigestUtilsTest|tearDown()|2", java.io.File.class, testFile).deleteOnExit();
        }
    }

    @org.junit.Test(expected = java.lang.IllegalArgumentException.class)
    public void testInternalNoSuchAlgorithmException() {
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testInternalNoSuchAlgorithmException()|0", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.getDigest("Bogus Bogus"));
        } catch (java.lang.IllegalArgumentException a1553628734134) {
            eu.stamp_project.reneri.instrumentation.StateObserver.observeThrownException("org.apache.commons.codec.digest.DigestUtilsTest|testInternalNoSuchAlgorithmException()|!", a1553628734134);
            throw a1553628734134;
        }
    }

    @org.junit.Test
    public void testMd2Hex() throws java.io.IOException {
        // Examples from RFC 1319
        org.junit.Assert.assertEquals("8350e5a3e24c153df2275c9f80692773", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|0", org.apache.commons.codec.digest.DigestUtils.md2Hex("")));
        org.junit.Assert.assertEquals("32ec01ec4a6dac72c0ab96fb34c0b5d1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|1", org.apache.commons.codec.digest.DigestUtils.md2Hex("a")));
        org.junit.Assert.assertEquals("da853b0d3f88d99b30283a69e6ded6bb", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|2", org.apache.commons.codec.digest.DigestUtils.md2Hex("abc")));
        org.junit.Assert.assertEquals("ab4f496bfb2a530b219ff33031fe06b0", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|3", org.apache.commons.codec.digest.DigestUtils.md2Hex("message digest")));
        org.junit.Assert.assertEquals("4e8ddff3650292ab5a4108c3aa47940b", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|4", org.apache.commons.codec.digest.DigestUtils.md2Hex("abcdefghijklmnopqrstuvwxyz")));
        org.junit.Assert.assertEquals("da33def2a42df13975352846c30338cd", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|5", org.apache.commons.codec.digest.DigestUtils.md2Hex(("ABCDEFGHIJKLMNOPQRSTUVWXYZ" + ("abcdefghijklmnopqrstuvwxyz" + "0123456789")))));
        org.junit.Assert.assertEquals("d5976f79d83d3a0dc9806c3c66f3efd8", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|6", org.apache.commons.codec.digest.DigestUtils.md2Hex(("1234567890123456789012345678901234567890" + "1234567890123456789012345678901234567890"))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|8", org.apache.commons.codec.digest.DigestUtils.md2Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|7", byte[].class, testData))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|11", org.apache.commons.codec.digest.DigestUtils.md2Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|10", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Hex()|9", byte[].class, testData))))));
    }

    /**
     * An MD2 hash converted to hex should always be 32 characters.
     */
    @org.junit.Test
    public void testMd2HexLength() {
        java.lang.String hashMe = "this is some string that is longer than 32 characters";
        java.lang.String hash = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|2", org.apache.commons.codec.digest.DigestUtils.md2Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|1", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|0", hashMe)))));
        org.junit.Assert.assertEquals(32, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|4", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|3", hash).length()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|5", (hashMe = "length < 32"));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|8", (hash = org.apache.commons.codec.digest.DigestUtils.md2Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|7", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|6", hashMe))))));
        org.junit.Assert.assertEquals(32, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|10", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2HexLength()|9", hash).length()));
    }

    /**
     * An MD2 hash should always be a 16 element byte[].
     */
    @org.junit.Test
    public void testMd2Length() {
        java.lang.String hashMe = "this is some string that is longer than 16 characters";
        byte[] hash = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|2", byte[].class, org.apache.commons.codec.digest.DigestUtils.md2(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|1", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|0", hashMe)))));
        org.junit.Assert.assertEquals(16, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|3", byte[].class, hash).length));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|5", (hashMe = "length < 16"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|8", byte[].class, (hash = org.apache.commons.codec.digest.DigestUtils.md2(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|7", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|6", hashMe))))));
        org.junit.Assert.assertEquals(16, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd2Length()|9", byte[].class, hash).length));
    }

    @org.junit.Test
    public void testMd5Hex() throws java.io.IOException {
        // Examples from RFC 1321
        org.junit.Assert.assertEquals("d41d8cd98f00b204e9800998ecf8427e", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|0", org.apache.commons.codec.digest.DigestUtils.md5Hex("")));
        org.junit.Assert.assertEquals("0cc175b9c0f1b6a831c399e269772661", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|1", org.apache.commons.codec.digest.DigestUtils.md5Hex("a")));
        org.junit.Assert.assertEquals("900150983cd24fb0d6963f7d28e17f72", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|2", org.apache.commons.codec.digest.DigestUtils.md5Hex("abc")));
        org.junit.Assert.assertEquals("f96b697d7cb7938d525a2f31aaf161d0", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|3", org.apache.commons.codec.digest.DigestUtils.md5Hex("message digest")));
        org.junit.Assert.assertEquals("c3fcd3d76192e4007dfb496cca67e13b", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|4", org.apache.commons.codec.digest.DigestUtils.md5Hex("abcdefghijklmnopqrstuvwxyz")));
        org.junit.Assert.assertEquals("d174ab98d277d9f5a5611c2c9f419d9f", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|5", org.apache.commons.codec.digest.DigestUtils.md5Hex(("ABCDEFGHIJKLMNOPQRSTUVWXYZ" + ("abcdefghijklmnopqrstuvwxyz" + "0123456789")))));
        org.junit.Assert.assertEquals("57edf4a22be3c955ac49da2e2107b67a", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|6", org.apache.commons.codec.digest.DigestUtils.md5Hex(("1234567890123456789012345678901234567890" + "1234567890123456789012345678901234567890"))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|8", org.apache.commons.codec.digest.DigestUtils.md5Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|7", byte[].class, testData))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|11", org.apache.commons.codec.digest.DigestUtils.md5Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|10", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5Hex()|9", byte[].class, testData))))));
    }

    /**
     * An MD5 hash converted to hex should always be 32 characters.
     */
    @org.junit.Test
    public void testMd5HexLengthForBytes() {
        java.lang.String hashMe = "this is some string that is longer than 32 characters";
        java.lang.String hash = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|2", org.apache.commons.codec.digest.DigestUtils.md5Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|1", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|0", hashMe)))));
        org.junit.Assert.assertEquals(32, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|4", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|3", hash).length()));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|5", (hashMe = "length < 32"));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|8", (hash = org.apache.commons.codec.digest.DigestUtils.md5Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|7", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|6", hashMe))))));
        org.junit.Assert.assertEquals(32, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|10", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5HexLengthForBytes()|9", hash).length()));
    }

    /**
     * An MD5 hash should always be a 16 element byte[].
     */
    @org.junit.Test
    public void testMd5LengthForBytes() {
        java.lang.String hashMe = "this is some string that is longer than 16 characters";
        byte[] hash = eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|2", byte[].class, org.apache.commons.codec.digest.DigestUtils.md5(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|1", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|0", hashMe)))));
        org.junit.Assert.assertEquals(16, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|4", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|3", byte[].class, hash).length));
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|5", (hashMe = "length < 16"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|8", byte[].class, (hash = org.apache.commons.codec.digest.DigestUtils.md5(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|7", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|6", hashMe))))));
        org.junit.Assert.assertEquals(16, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testMd5LengthForBytes()|9", byte[].class, hash).length));
    }

    @org.junit.Test
    public void testSha1Hex() throws java.io.IOException {
        // Examples from FIPS 180-1
        org.junit.Assert.assertEquals("a9993e364706816aba3e25717850c26c9cd0d89d", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1Hex()|0", org.apache.commons.codec.digest.DigestUtils.sha1Hex("abc")));
        org.junit.Assert.assertEquals("a9993e364706816aba3e25717850c26c9cd0d89d", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1Hex()|2", org.apache.commons.codec.digest.DigestUtils.sha1Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1Hex()|1", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8("abc")))));
        org.junit.Assert.assertEquals("84983e441c3bd26ebaae4aa1f95129e5e54670f1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1Hex()|3", org.apache.commons.codec.digest.DigestUtils.sha1Hex(("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq"))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1Hex()|5", org.apache.commons.codec.digest.DigestUtils.sha1Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1Hex()|4", byte[].class, testData))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1Hex()|8", org.apache.commons.codec.digest.DigestUtils.sha1Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1Hex()|7", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1Hex()|6", byte[].class, testData))))));
    }

    @org.junit.Test
    public void testSha1UpdateWithByteArray() {
        final java.lang.String d1 = "C'est un homme qui rentre dans un café, et plouf";
        final java.lang.String d2 = "C'est un homme, c'est qu'une tête, on lui offre un cadeau: 'oh... encore un chapeau!'";
        java.security.MessageDigest messageDigest = eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|0", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.getSha1Digest());
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|1", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|3", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|2", d1).getBytes()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|4", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|6", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|5", d2).getBytes()));
        final java.lang.String expectedResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|9", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|8", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|7", java.security.MessageDigest.class, messageDigest).digest())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|10", java.security.MessageDigest.class, (messageDigest = org.apache.commons.codec.digest.DigestUtils.getSha1Digest()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|14", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|11", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|13", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|12", d1).getBytes())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|18", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|15", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|17", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|16", d2).getBytes())));
        final java.lang.String actualResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|21", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|20", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|19", java.security.MessageDigest.class, messageDigest).digest())));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|22", expectedResult), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteArray()|23", actualResult));
    }

    @org.junit.Test
    public void testSha1UpdateWithByteBuffer() {
        final java.lang.String d1 = "C'est un homme qui rentre dans un café, et plouf";
        final java.lang.String d2 = "C'est un homme, c'est qu'une tête, on lui offre un cadeau: 'oh... encore un chapeau!'";
        java.security.MessageDigest messageDigest = eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|0", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.getSha1Digest());
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|1", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|3", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|2", d1).getBytes()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|4", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|6", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|5", d2).getBytes()));
        final java.lang.String expectedResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|9", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|8", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|7", java.security.MessageDigest.class, messageDigest).digest())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|10", java.security.MessageDigest.class, (messageDigest = org.apache.commons.codec.digest.DigestUtils.getSha1Digest()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|15", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|11", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.ByteBuffer>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|14", java.nio.ByteBuffer.class, java.nio.ByteBuffer.wrap(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|13", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|12", d1).getBytes())))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|20", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|16", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.<java.nio.ByteBuffer>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|19", java.nio.ByteBuffer.class, java.nio.ByteBuffer.wrap(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|18", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|17", d2).getBytes())))));
        final java.lang.String actualResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|23", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|22", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|21", java.security.MessageDigest.class, messageDigest).digest())));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|24", expectedResult), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithByteBuffer()|25", actualResult));
    }

    @org.junit.Test
    public void testSha1UpdateWithString() {
        final java.lang.String d1 = "C'est un homme qui rentre dans un café, et plouf";
        final java.lang.String d2 = "C'est un homme, c'est qu'une tête, on lui offre un cadeau: 'oh... encore un chapeau!'";
        java.security.MessageDigest messageDigest = eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|0", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.getSha1Digest());
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|1", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|3", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|2", d1))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|4", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|6", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|5", d2))));
        final java.lang.String expectedResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|9", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|8", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|7", java.security.MessageDigest.class, messageDigest).digest())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|10", java.security.MessageDigest.class, (messageDigest = org.apache.commons.codec.digest.DigestUtils.getSha1Digest()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|13", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|11", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|12", d1)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|16", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|14", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|15", d2)));
        final java.lang.String actualResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|19", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|18", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|17", java.security.MessageDigest.class, messageDigest).digest())));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|20", expectedResult), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha1UpdateWithString()|21", actualResult));
    }

    @org.junit.Test
    public void testSha224() {
        assumeJava8();
        org.junit.Assert.assertEquals("d14a028c2a3a2bc9476102bb288234c415a2b01f828ea62ac5b3e42f", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha224()|1", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.digest.DigestUtils>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha224()|0", org.apache.commons.codec.digest.DigestUtils.class, new org.apache.commons.codec.digest.DigestUtils(org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_224)).digestAsHex("")));
        org.junit.Assert.assertEquals("730e109bd7a8a32b1cb9d9a09aa2325d2430587ddbc0c38bad911525", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha224()|3", eu.stamp_project.reneri.instrumentation.StateObserver.<org.apache.commons.codec.digest.DigestUtils>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha224()|2", org.apache.commons.codec.digest.DigestUtils.class, new org.apache.commons.codec.digest.DigestUtils(org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_224)).digestAsHex("The quick brown fox jumps over the lazy dog")));
        // Examples from FIPS 180-4?
    }

    @org.junit.Test
    public void testSha256() throws java.io.IOException {
        // Examples from FIPS 180-2
        org.junit.Assert.assertEquals("ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha256()|0", org.apache.commons.codec.digest.DigestUtils.sha256Hex("abc")));
        org.junit.Assert.assertEquals("ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha256()|2", org.apache.commons.codec.digest.DigestUtils.sha256Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha256()|1", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8("abc")))));
        org.junit.Assert.assertEquals("248d6a61d20638b8e5c026930c3e6039a33ce45964ff2167f6ecedd419db06c1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha256()|3", org.apache.commons.codec.digest.DigestUtils.sha256Hex("abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq")));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha256()|5", org.apache.commons.codec.digest.DigestUtils.sha256Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha256()|4", byte[].class, testData))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha256()|8", org.apache.commons.codec.digest.DigestUtils.sha256Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha256()|7", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha256()|6", byte[].class, testData))))));
    }

    @org.junit.Test
    public void testSha384() throws java.io.IOException {
        // Examples from FIPS 180-2
        org.junit.Assert.assertEquals(("cb00753f45a35e8bb5a03d699ac65007272c32ab0eded1631a8b605a43ff5bed" + "8086072ba1e7cc2358baeca134c825a7"), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha384()|0", org.apache.commons.codec.digest.DigestUtils.sha384Hex("abc")));
        org.junit.Assert.assertEquals(("cb00753f45a35e8bb5a03d699ac65007272c32ab0eded1631a8b605a43ff5bed" + "8086072ba1e7cc2358baeca134c825a7"), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha384()|2", org.apache.commons.codec.digest.DigestUtils.sha384Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha384()|1", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8("abc")))));
        org.junit.Assert.assertEquals(("09330c33f71147e83d192fc782cd1b4753111b173b3b05d22fa08086e3b0f712" + "fcc7c71a557e2db966c3e9fa91746039"), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha384()|3", org.apache.commons.codec.digest.DigestUtils.sha384Hex(("abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn" + "hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu"))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha384()|5", org.apache.commons.codec.digest.DigestUtils.sha384Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha384()|4", byte[].class, testData))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha384()|8", org.apache.commons.codec.digest.DigestUtils.sha384Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha384()|7", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha384()|6", byte[].class, testData))))));
    }

    @org.junit.Test
    public void testSha512() {
        // Examples from FIPS 180-2
        org.junit.Assert.assertEquals(("ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a" + "2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f"), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha512()|0", org.apache.commons.codec.digest.DigestUtils.sha512Hex("abc")));
        org.junit.Assert.assertEquals(("ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a" + "2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f"), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha512()|2", org.apache.commons.codec.digest.DigestUtils.sha512Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha512()|1", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8("abc")))));
        org.junit.Assert.assertEquals(("8e959b75dae313da8cf4f72814fc143f8f7779c6eb9f7fa17299aeadb6889018" + "501d289e4900f7e4331b99dec4b5433ac7d329eeb6dd26545e96e55b874be909"), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha512()|3", org.apache.commons.codec.digest.DigestUtils.sha512Hex(("abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn" + "hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu"))));
    }

    @org.junit.Test
    public void testSha512HexInputStream() throws java.io.IOException {
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha512HexInputStream()|1", org.apache.commons.codec.digest.DigestUtils.sha512Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha512HexInputStream()|0", byte[].class, testData))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testSha512HexInputStream()|4", org.apache.commons.codec.digest.DigestUtils.sha512Hex(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha512HexInputStream()|3", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testSha512HexInputStream()|2", byte[].class, testData))))));
    }

    // deliberate tests of deprecated code
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testShaHex() throws java.io.IOException {
        // Examples from FIPS 180-1
        org.junit.Assert.assertEquals("a9993e364706816aba3e25717850c26c9cd0d89d", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaHex()|0", org.apache.commons.codec.digest.DigestUtils.shaHex("abc")));
        org.junit.Assert.assertEquals("a9993e364706816aba3e25717850c26c9cd0d89d", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaHex()|2", org.apache.commons.codec.digest.DigestUtils.shaHex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaHex()|1", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8("abc")))));
        org.junit.Assert.assertEquals("84983e441c3bd26ebaae4aa1f95129e5e54670f1", eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaHex()|3", org.apache.commons.codec.digest.DigestUtils.shaHex(("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq"))));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaHex()|5", org.apache.commons.codec.digest.DigestUtils.shaHex(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaHex()|4", byte[].class, testData))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaHex()|8", org.apache.commons.codec.digest.DigestUtils.shaHex(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.ByteArrayInputStream>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaHex()|7", java.io.ByteArrayInputStream.class, new java.io.ByteArrayInputStream(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaHex()|6", byte[].class, testData))))));
    }

    // deliberate tests of deprecated code
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testShaUpdateWithByteArray() {
        final java.lang.String d1 = "C'est un homme qui rentre dans un café, et plouf";
        final java.lang.String d2 = "C'est un homme, c'est qu'une tête, on lui offre un cadeau: 'oh... encore un chapeau!'";
        java.security.MessageDigest messageDigest = eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|0", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.getShaDigest());
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|1", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|3", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|2", d1).getBytes()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|4", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|6", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|5", d2).getBytes()));
        final java.lang.String expectedResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|9", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|8", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|7", java.security.MessageDigest.class, messageDigest).digest())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|10", java.security.MessageDigest.class, (messageDigest = org.apache.commons.codec.digest.DigestUtils.getShaDigest()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|14", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|11", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|13", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|12", d1).getBytes())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|18", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|15", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|17", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|16", d2).getBytes())));
        final java.lang.String actualResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|21", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|20", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|19", java.security.MessageDigest.class, messageDigest).digest())));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|22", expectedResult), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithByteArray()|23", actualResult));
    }

    // deliberate tests of deprecated code
    @java.lang.SuppressWarnings("deprecation")
    @org.junit.Test
    public void testShaUpdateWithString() {
        final java.lang.String d1 = "C'est un homme qui rentre dans un café, et plouf";
        final java.lang.String d2 = "C'est un homme, c'est qu'une tête, on lui offre un cadeau: 'oh... encore un chapeau!'";
        java.security.MessageDigest messageDigest = eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|0", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.getShaDigest());
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|1", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|3", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|2", d1))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|4", java.security.MessageDigest.class, messageDigest).update(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|6", byte[].class, org.apache.commons.codec.binary.StringUtils.getBytesUtf8(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|5", d2))));
        final java.lang.String expectedResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|9", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|8", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|7", java.security.MessageDigest.class, messageDigest).digest())));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|10", java.security.MessageDigest.class, (messageDigest = org.apache.commons.codec.digest.DigestUtils.getShaDigest()));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|13", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|11", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|12", d1)));
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|16", java.security.MessageDigest.class, org.apache.commons.codec.digest.DigestUtils.updateDigest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|14", java.security.MessageDigest.class, messageDigest), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|15", d2)));
        final java.lang.String actualResult = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|19", org.apache.commons.codec.binary.Hex.encodeHexString(eu.stamp_project.reneri.instrumentation.StateObserver.<byte[]>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|18", byte[].class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.security.MessageDigest>observeState("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|17", java.security.MessageDigest.class, messageDigest).digest())));
        org.junit.Assert.assertEquals(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|20", expectedResult), eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.apache.commons.codec.digest.DigestUtilsTest|testShaUpdateWithString()|21", actualResult));
    }
}

