package org.eaxy.experimental;


public class SoapSimulatorServerTest {
    private static final org.eaxy.Namespace SOAP = new org.eaxy.Namespace("http://schemas.xmlsoap.org/soap/envelope/", "S");

    @org.junit.Test
    public void shouldRespondToSoapCall() throws java.io.IOException {
        org.eaxy.Document wsdlFile = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Document>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|0", org.eaxy.Document.class, org.eaxy.Xml.readResource("/xsd/StockQuoteService.wsdl"));
        org.eaxy.experimental.SoapSimulatorServer server = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.experimental.SoapSimulatorServer>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|1", org.eaxy.experimental.SoapSimulatorServer.class, new org.eaxy.experimental.SoapSimulatorServer(0));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.experimental.SoapSimulatorServer>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|2", org.eaxy.experimental.SoapSimulatorServer.class, server).start();
        java.net.URL url = eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URL>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|5", java.net.URL.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.experimental.SoapSimulatorServer>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|3", org.eaxy.experimental.SoapSimulatorServer.class, server).addSoapEndpoint("/soap/stockQuote", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Document>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|4", org.eaxy.Document.class, wsdlFile)));
        org.eaxy.experimental.SampleSoapXmlBuilder builder = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.experimental.SampleSoapXmlBuilder>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|7", org.eaxy.experimental.SampleSoapXmlBuilder.class, new org.eaxy.experimental.SampleSoapXmlBuilder(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Document>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|6", org.eaxy.Document.class, wsdlFile)));
        org.eaxy.experimental.SampleSoapXmlBuilder.SoapOperationDefinition operation = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.experimental.SampleSoapXmlBuilder.SoapOperationDefinition>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|10", org.eaxy.experimental.SampleSoapXmlBuilder.SoapOperationDefinition.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.experimental.SampleSoapXmlBuilder.SoapServiceDefinition>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|9", org.eaxy.experimental.SampleSoapXmlBuilder.SoapServiceDefinition.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.experimental.SampleSoapXmlBuilder>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|8", org.eaxy.experimental.SampleSoapXmlBuilder.class, builder).getService()).operation("GetLastTradePrice"));
        org.eaxy.Element response = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|13", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.experimental.SampleSoapXmlBuilder.SoapOperationDefinition>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|11", org.eaxy.experimental.SampleSoapXmlBuilder.SoapOperationDefinition.class, operation).sendRandomRequest(eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URL>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|12", java.net.URL.class, url)));
        org.eaxy.Element output = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|18", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|17", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|14", org.eaxy.Element.class, response).find(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|16", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|15", org.eaxy.Namespace.class, org.eaxy.experimental.SoapSimulatorServerTest.SOAP).name("Body")), "TradePrice")).single());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|23", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Validator>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|21", org.eaxy.Validator.class, new org.eaxy.Validator(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|20", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.experimental.SampleSoapXmlBuilder.SoapOperationDefinition>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|19", org.eaxy.experimental.SampleSoapXmlBuilder.SoapOperationDefinition.class, operation).targetSchema()))).validate(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.experimental.SoapSimulatorServerTest|shouldRespondToSoapCall()|22", org.eaxy.Element.class, output)));
    }
}

