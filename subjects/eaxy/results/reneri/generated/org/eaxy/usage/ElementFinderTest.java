package org.eaxy.usage;


public class ElementFinderTest {
    @org.junit.Test
    public void shouldExcludeNonmatchingElement() {
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldExcludeNonmatchingElement()|2", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldExcludeNonmatchingElement()|1", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldExcludeNonmatchingElement()|0", org.eaxy.Element.class, org.eaxy.Xml.el("something")).find("something-else")))).isEmpty();
    }

    @org.junit.Test
    public void shouldIncludeMatchingChild() {
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldIncludeMatchingChild()|5", org.assertj.core.api.IterableAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldIncludeMatchingChild()|3", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldIncludeMatchingChild()|2", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIncludeMatchingChild()|1", org.eaxy.Element.class, org.eaxy.Xml.el("root", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIncludeMatchingChild()|0", org.eaxy.Element.class, org.eaxy.Xml.el("something")))).find("something")))).contains(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIncludeMatchingChild()|4", org.eaxy.Element.class, org.eaxy.Xml.el("something"))));
    }

    @org.junit.Test
    public void shouldFindNestedElement() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindNestedElement()|2", org.eaxy.Element.class, org.eaxy.Xml.el("root", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindNestedElement()|1", org.eaxy.Element.class, org.eaxy.Xml.el("a", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindNestedElement()|0", org.eaxy.Element.class, org.eaxy.Xml.el("b"))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindNestedElement()|8", org.assertj.core.api.IterableAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindNestedElement()|6", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindNestedElement()|5", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindNestedElement()|4", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindNestedElement()|3", org.eaxy.Element.class, xml).find("a")).find("b")))).contains(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindNestedElement()|7", org.eaxy.Element.class, org.eaxy.Xml.el("b"))));
    }

    @org.junit.Test
    public void shouldFindByMultiplePathElements() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|3", org.eaxy.Element.class, org.eaxy.Xml.el("root", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|2", org.eaxy.Element.class, org.eaxy.Xml.el("a", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|1", org.eaxy.Element.class, org.eaxy.Xml.el("b", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|0", org.eaxy.Element.class, org.eaxy.Xml.el("c"))))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|9", org.assertj.core.api.IterableAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|7", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|6", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|5", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|4", org.eaxy.Element.class, xml).find("a")).find("b", "c")))).contains(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|8", org.eaxy.Element.class, org.eaxy.Xml.el("c"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|14", org.assertj.core.api.IterableAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|12", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|11", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|10", org.eaxy.Element.class, xml).find("a", "b", "c")))).contains(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindByMultiplePathElements()|13", org.eaxy.Element.class, org.eaxy.Xml.el("c"))));
    }

    @org.junit.Test
    public void shouldFindTexts() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|5", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|0", org.eaxy.Element.class, org.eaxy.Xml.el("p", "first para")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|1", org.eaxy.Element.class, org.eaxy.Xml.el("p", "second para")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|4", org.eaxy.Element.class, org.eaxy.Xml.el("p", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Node>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|2", org.eaxy.Node.class, org.eaxy.Xml.text("para with ")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|3", org.eaxy.Element.class, org.eaxy.Xml.el("b", "bold text"))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|11", org.assertj.core.api.ListAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|10", org.assertj.core.api.ListAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|9", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|8", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|7", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindTexts()|6", org.eaxy.Element.class, xml).find("p")).check()).texts()))).containsExactly("first para", "second para", "para with bold text"));
    }

    @org.junit.Test
    public void shouldFindDeeplyNestedElements() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|10", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|0", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 1a")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|2", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|1", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 2a")))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|3", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 1b")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|4", org.eaxy.Element.class, org.eaxy.Xml.el("div", "nonmatch")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|7", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|6", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|5", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 3")))))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|9", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|8", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 2b"))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|15", org.assertj.core.api.ListAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|14", org.assertj.core.api.ListAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|13", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|12", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|11", org.eaxy.Element.class, xml).find("...", "p")).texts()))).containsExactly("level 1a", "level 2a", "level 1b", "level 3", "level 2b"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|21", org.assertj.core.api.ListAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|20", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementPath>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|19", org.eaxy.ElementPath.class, java.util.Objects.requireNonNull(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementPath>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|18", org.eaxy.ElementPath.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|17", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|16", org.eaxy.Element.class, xml).find("...", "p")).firstPath()))).getPath()))).extracting(( e) -> eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|23", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|22", org.eaxy.Element.class, e).tagName())).containsExactly("div", "p");
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|29", org.assertj.core.api.ListAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|28", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementPath>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|27", org.eaxy.ElementPath.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<org.eaxy.ElementPath>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|26", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|25", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|24", org.eaxy.Element.class, xml).find("...", "p")).getPaths()).get(1)).getPath()))).extracting(( e) -> eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|31", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDeeplyNestedElements()|30", org.eaxy.Element.class, e).tagName())).containsExactly("div", "div", "p");
    }

    @org.junit.Test
    public void shouldIterateDeeplyNestedElements() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|10", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|0", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 1a")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|2", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|1", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 2a")))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|3", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 1b")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|4", org.eaxy.Element.class, org.eaxy.Xml.el("div", "nonmatch")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|7", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|6", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|5", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 3")))))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|9", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|8", org.eaxy.Element.class, org.eaxy.Xml.el("p", "level 2b"))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|16", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterable>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|15", org.eaxy.XmlIterable.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementQuery>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|11", org.eaxy.ElementQuery.class, org.eaxy.Xml.filter("...", "p")).iterate(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringReader>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|14", java.io.StringReader.class, new java.io.StringReader(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|13", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|12", org.eaxy.Element.class, xml).toXML()))))))).extracting(( e) -> eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateDeeplyNestedElements()|17", org.eaxy.Element.class, e).text())).contains("level 1a", "level 2a", "level 1b", "level 3", "level 2b");
    }

    @org.junit.Test
    public void shouldFindStrangelyNestedElements() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|13", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|3", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|1", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|0", org.eaxy.Element.class, org.eaxy.Xml.el("div")).id("not-here")).add(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Node>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|2", org.eaxy.Node.class, org.eaxy.Xml.text("something")))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|12", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|5", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|4", org.eaxy.Element.class, org.eaxy.Xml.el("div")).id("below-here")).add(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|11", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|10", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|9", org.eaxy.Element.class, org.eaxy.Xml.el("p", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Node>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|6", org.eaxy.Node.class, org.eaxy.Xml.text("around ")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|7", org.eaxy.Element.class, org.eaxy.Xml.el("span", "HERE")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Node>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|8", org.eaxy.Node.class, org.eaxy.Xml.text(" around"))))))))))));
        org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|16", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|15", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|14", org.eaxy.Element.class, xml).find("...", "#below-here", "...", "p", "...")).single()).text())).isEqualTo("HERE");
        org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|21", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|20", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|19", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindStrangelyNestedElements()|18", org.eaxy.Element.class, xml).find("...", "p", "...")).single()).text())).isEqualTo("HERE");
    }

    @org.junit.Test
    public void shouldFindDescendantsAtSeveralLevels() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|7", org.eaxy.Element.class, org.eaxy.Xml.el("section", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|6", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|1", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|0", org.eaxy.Element.class, org.eaxy.Xml.el("div")).id("top")).addAll(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|3", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|2", org.eaxy.Element.class, org.eaxy.Xml.el("div")).id("child-1")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|5", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|4", org.eaxy.Element.class, org.eaxy.Xml.el("div")).id("child-2"))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|12", org.assertj.core.api.ListAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|11", org.assertj.core.api.ListAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|10", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|9", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDescendantsAtSeveralLevels()|8", org.eaxy.Element.class, xml).find("...", "div")).ids()))).contains("top", "child-1", "child-2"));
    }

    @org.junit.Test
    public void shouldFindDissimilarChildren() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|5", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|0", org.eaxy.Element.class, org.eaxy.Xml.el("h1", "header 1")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|1", org.eaxy.Element.class, org.eaxy.Xml.el("h2", "header 2")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|3", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|2", org.eaxy.Element.class, org.eaxy.Xml.el("h2", "nested header 2")))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|4", org.eaxy.Element.class, org.eaxy.Xml.el("h2", "second header 2"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|10", org.assertj.core.api.ListAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|9", org.assertj.core.api.ListAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|8", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|7", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|6", org.eaxy.Element.class, xml).find("*")).tagNames()))).contains("h1", "h2", "div", "h2"));
        org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|13", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|12", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindDissimilarChildren()|11", org.eaxy.Element.class, xml).find("*", "h2")).single()).text())).isEqualTo("nested header 2");
    }

    @org.junit.Test
    public void shouldFindChildrenByPosition() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|4", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|1", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|0", org.eaxy.Element.class, org.eaxy.Xml.el("h1", "Wrong one")))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|3", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|2", org.eaxy.Element.class, org.eaxy.Xml.el("h1", "Right one"))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|10", org.assertj.core.api.ListAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|9", org.assertj.core.api.ListAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|8", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|7", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|6", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|5", org.eaxy.Element.class, xml).find("div", 1, "h1")).check()).texts()))).containsOnly("Right one"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|14", org.assertj.core.api.ListAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|13", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|12", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindChildrenByPosition()|11", org.eaxy.Element.class, xml).find("div", 2, "h1")).texts()))).isEmpty();
    }

    @org.junit.Test
    public void shouldFindAttributes() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|15", org.eaxy.Element.class, org.eaxy.Xml.el("div", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|3", org.eaxy.Element.class, org.eaxy.Xml.el("p", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Node>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|0", org.eaxy.Node.class, org.eaxy.Xml.text("para with ")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|2", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|1", org.eaxy.Element.class, org.eaxy.Xml.el("a", "a link")).attr("href", "http://foo.com")))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|7", org.eaxy.Element.class, org.eaxy.Xml.el("p", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Node>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|4", org.eaxy.Node.class, org.eaxy.Xml.text("para with ")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|6", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|5", org.eaxy.Element.class, org.eaxy.Xml.el("a", "another link")).attr("href", "http://bar.com")))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|11", org.eaxy.Element.class, org.eaxy.Xml.el("p", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Node>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|8", org.eaxy.Node.class, org.eaxy.Xml.text("para with ")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|10", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|9", org.eaxy.Element.class, org.eaxy.Xml.el("a", "anchor")).attr("name", "something")))), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|14", org.eaxy.Element.class, org.eaxy.Xml.el("p", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Node>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|12", org.eaxy.Node.class, org.eaxy.Xml.text("para with ")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|13", org.eaxy.Element.class, org.eaxy.Xml.el("b", "bold text"))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|21", org.assertj.core.api.ListAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.ListAssert<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|20", org.assertj.core.api.ListAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<java.lang.String>>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|19", java.util.List.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|18", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|17", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldFindAttributes()|16", org.eaxy.Element.class, xml).find("p", "a")).check()).attrs("href")))).containsExactly("http://foo.com", "http://bar.com"));
    }

    @org.junit.Test
    public void shouldMatchOnNamespace() {
        org.eaxy.Namespace A_NS = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|0", org.eaxy.Namespace.class, new org.eaxy.Namespace("uri:a", "a"));
        org.eaxy.Namespace A_NS_WITH_OTHER_PREFIX = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|1", org.eaxy.Namespace.class, new org.eaxy.Namespace("uri:a", "a2"));
        org.eaxy.Namespace B_NS = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|2", org.eaxy.Namespace.class, new org.eaxy.Namespace("uri:b", "b"));
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|8", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|3", org.eaxy.Namespace.class, A_NS).el("root", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|7", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|4", org.eaxy.Namespace.class, A_NS).el("parent", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|6", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|5", org.eaxy.Namespace.class, A_NS).el("child"))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|12", org.assertj.core.api.IterableAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|11", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|10", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|9", org.eaxy.Element.class, xml).find("parent", "child")))).isNotEmpty());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|20", org.assertj.core.api.IterableAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|19", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|18", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|13", org.eaxy.Element.class, xml).find(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|15", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|14", org.eaxy.Namespace.class, A_NS).name("parent")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|17", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|16", org.eaxy.Namespace.class, A_NS).name("child")))))).isNotEmpty());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|28", org.assertj.core.api.IterableAssert.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|27", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|26", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|21", org.eaxy.Element.class, xml).find(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|23", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|22", org.eaxy.Namespace.class, A_NS).name("parent")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|25", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|24", org.eaxy.Namespace.class, A_NS_WITH_OTHER_PREFIX).name("child")))))).isNotEmpty());
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|35", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|34", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|29", org.eaxy.Element.class, xml).find(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|31", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|30", org.eaxy.Namespace.class, A_NS).name("parent")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|33", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnNamespace()|32", org.eaxy.Namespace.class, B_NS).name("child")))))).isEmpty();
    }

    @org.junit.Test
    public void shouldMatchAnyOnNoNamespace() {
        org.eaxy.Namespace SOAP_NS = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchAnyOnNoNamespace()|0", org.eaxy.Namespace.class, new org.eaxy.Namespace("http://schemas.xmlsoap.org/soap/envelope/", "S"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchAnyOnNoNamespace()|7", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchAnyOnNoNamespace()|6", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchAnyOnNoNamespace()|5", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchAnyOnNoNamespace()|1", org.eaxy.Namespace.class, SOAP_NS).el("Envelope", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchAnyOnNoNamespace()|4", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchAnyOnNoNamespace()|2", org.eaxy.Namespace.class, SOAP_NS).el("Body", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchAnyOnNoNamespace()|3", org.eaxy.Element.class, org.eaxy.Xml.el("something")))))).find("Body", "*")).check());
    }

    @org.junit.Test
    public void shouldMatchOnAttribute() {
        org.eaxy.Namespace NS = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|0", org.eaxy.Namespace.class, new org.eaxy.Namespace("uri:a", "a"));
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|12", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|1", org.eaxy.Namespace.class, NS).el("parent", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|6", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|3", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|2", org.eaxy.Namespace.class, NS).el("child", "wrong")).attr(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|5", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|4", org.eaxy.Namespace.class, NS).name("included")), "false")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|11", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|8", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|7", org.eaxy.Namespace.class, NS).el("child", "right")).attr(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|10", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|9", org.eaxy.Namespace.class, NS).name("included")), "true"))));
        org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|17", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|16", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|13", org.eaxy.Element.class, xml).find(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Attribute>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|15", org.eaxy.Attribute.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|14", org.eaxy.Namespace.class, NS).attr("included", "true")))).single()).text())).isEqualTo("right");
        org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|21", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|20", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldMatchOnAttribute()|19", org.eaxy.Element.class, xml).find("[included=true]")).single()).text())).isEqualTo("right");
    }

    @org.junit.Test
    public void shouldIterateOnAttribute() {
        org.eaxy.Namespace NS = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|0", org.eaxy.Namespace.class, new org.eaxy.Namespace("uri:a", "a"));
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|12", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|1", org.eaxy.Namespace.class, NS).el("parent", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|6", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|3", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|2", org.eaxy.Namespace.class, NS).el("child", "wrong")).attr(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|5", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|4", org.eaxy.Namespace.class, NS).name("included")), "false")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|11", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|8", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|7", org.eaxy.Namespace.class, NS).el("child", "right")).attr(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.QualifiedName>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|10", org.eaxy.QualifiedName.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|9", org.eaxy.Namespace.class, NS).name("included")), "true"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.assertj.core.api.IterableAssert<org.eaxy.Element>>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|20", org.assertj.core.api.IterableAssert.class, org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterable>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|19", org.eaxy.XmlIterable.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementQuery>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|15", org.eaxy.ElementQuery.class, org.eaxy.Xml.filter(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Attribute>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|14", org.eaxy.Attribute.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|13", org.eaxy.Namespace.class, NS).attr("included", "true")))).iterate(eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.StringReader>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|18", java.io.StringReader.class, new java.io.StringReader(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|17", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|16", org.eaxy.Element.class, xml).toXML()))))))).extracting(( e) -> eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOnAttribute()|21", org.eaxy.Element.class, e).text())).containsExactly("right");
    }

    @org.junit.Test
    public void shouldKeepFullPath() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldKeepFullPath()|3", org.eaxy.Element.class, org.eaxy.Xml.el("root", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldKeepFullPath()|2", org.eaxy.Element.class, org.eaxy.Xml.el("a", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldKeepFullPath()|1", org.eaxy.Element.class, org.eaxy.Xml.el("b", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldKeepFullPath()|0", org.eaxy.Element.class, org.eaxy.Xml.el("c"))))))));
        org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldKeepFullPath()|6", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldKeepFullPath()|5", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldKeepFullPath()|4", org.eaxy.Element.class, xml).find("a")).find("b", "c")).getPath()).containsExactly("<root>...</root>", "a", "b", "c");
    }

    @org.junit.Test
    public void shouldCheckPath() {
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldCheckPath()|3", org.eaxy.Element.class, org.eaxy.Xml.el("root", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldCheckPath()|2", org.eaxy.Element.class, org.eaxy.Xml.el("a", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldCheckPath()|0", org.eaxy.Element.class, org.eaxy.Xml.el("b")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldCheckPath()|1", org.eaxy.Element.class, org.eaxy.Xml.el("b"))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldCheckPath()|8", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldCheckPath()|7", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldCheckPath()|6", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldCheckPath()|5", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldCheckPath()|4", org.eaxy.Element.class, xml).find("a")).check()).find("b")).check());
    }

    @org.junit.Test
    public void shouldThrowOnMissingPath() {
        org.eaxy.Namespace NS = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|0", org.eaxy.Namespace.class, new org.eaxy.Namespace("http://a.org/b/", "a"));
        org.eaxy.Element xml = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|6", org.eaxy.Element.class, org.eaxy.Xml.el("root", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|5", org.eaxy.Element.class, org.eaxy.Xml.el("top", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|4", org.eaxy.Element.class, org.eaxy.Xml.el("parent", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|1", org.eaxy.Element.class, org.eaxy.Xml.el("actual-child")), eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|3", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Namespace>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|2", org.eaxy.Namespace.class, NS).el("actual-child"))))))));
        try {
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|9", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|8", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|7", org.eaxy.Element.class, xml).find("top", "parent", "searched-child", "foo")).check());
            org.junit.Assert.fail("expected exception");
        } catch (org.eaxy.NonMatchingPathException e) {
            org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|11", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.NonMatchingPathException>observeState("org.eaxy.usage.ElementFinderTest|shouldThrowOnMissingPath()|10", org.eaxy.NonMatchingPathException.class, e).getMessage())).contains("below [<root>...</root>, top, parent]").contains("Can't find <searched-child>").doesNotContain("foo").contains("a:actual-child");
        }
    }

    @org.junit.Test
    public void shouldIterateOverFiles() {
        java.net.URL file = eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URL>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|0", java.net.URL.class, getClass().getResource("/medsample-mini.xml"));
        org.eaxy.XmlIterator it = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterator>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|4", org.eaxy.XmlIterator.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterable>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|3", org.eaxy.XmlIterable.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementQuery>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|1", org.eaxy.ElementQuery.class, org.eaxy.Xml.filter("MedlineCitation")).iterate(eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URL>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|2", java.net.URL.class, file))).iterator());
        int count = 0;
        while (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterator>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|5", org.eaxy.XmlIterator.class, it).hasNext())) {
            org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|8", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterator>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|7", org.eaxy.XmlIterator.class, it).currentCharacterOffset())).isPositive();
            org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterator>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|9", org.eaxy.XmlIterator.class, it).currentLineNumber())).isPositive();
            org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterator>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|11", org.eaxy.XmlIterator.class, it).currentColumnNumber())).isPositive();
            eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|14", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterator>observeState("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|13", org.eaxy.XmlIterator.class, it).next());
            count++;
        } 
        org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|shouldIterateOverFiles()|15", count)).isEqualTo(1);
    }

    @org.junit.Test
    public void scansShouldBeFast() throws java.io.IOException {
        long startTime = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|0", java.lang.System.currentTimeMillis());
        java.net.URL file = eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URL>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|3", java.net.URL.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URI>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|2", java.net.URI.class, eu.stamp_project.reneri.instrumentation.StateObserver.<java.io.File>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|1", java.io.File.class, new java.io.File("src/test/xml/performance-suite/medsamp2012.xml.gz")).toURI()).toURL());
        int maxReferences = java.lang.Integer.MIN_VALUE;
        org.eaxy.Element mostReferenced = null;
        for (org.eaxy.Element element : eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.XmlIterable>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|6", org.eaxy.XmlIterable.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementQuery>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|4", org.eaxy.ElementQuery.class, org.eaxy.Xml.filter("MedlineCitation")).iterate(eu.stamp_project.reneri.instrumentation.StateObserver.<java.net.URL>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|5", java.net.URL.class, file)))) {
            org.eaxy.Element references = eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|9", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|8", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|7", org.eaxy.Element.class, element).find("NumberOfReferences")).singleOrDefault());
            if ((eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|10", org.eaxy.Element.class, references)) != null) {
                int numberOfReferences = eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|13", java.lang.Integer.parseInt(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|12", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|11", org.eaxy.Element.class, references).text())));
                if ((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|14", numberOfReferences)) > (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|15", maxReferences))) {
                    eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|16", org.eaxy.Element.class, (mostReferenced = element));
                }
            }
        }
        org.assertj.core.api.Assertions.assertThat(((eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|17", java.lang.System.currentTimeMillis())) - (eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|18", startTime)))).as("millis").isLessThan(6000);
        if ((eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|19", org.eaxy.Element.class, mostReferenced)) == null) {
            throw eu.stamp_project.reneri.instrumentation.StateObserver.<java.lang.IllegalArgumentException>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|20", java.lang.IllegalArgumentException.class, new java.lang.IllegalArgumentException("Not found"));
        }
        org.assertj.core.api.Assertions.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|24", eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|23", org.eaxy.Element.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.ElementSet>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|22", org.eaxy.ElementSet.class, eu.stamp_project.reneri.instrumentation.StateObserver.<org.eaxy.Element>observeState("org.eaxy.usage.ElementFinderTest|scansShouldBeFast()|21", org.eaxy.Element.class, mostReferenced).find("Article", "ArticleTitle")).single()).text())).isEqualTo("Outcome of patients with sepsis and septic shock after ICU treatment.");
    }
}

