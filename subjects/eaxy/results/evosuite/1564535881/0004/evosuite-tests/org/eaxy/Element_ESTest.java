/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 01:23:52 GMT 2019
 */

package org.eaxy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.TreeSet;
import org.eaxy.Attribute;
import org.eaxy.Content;
import org.eaxy.Element;
import org.eaxy.Namespace;
import org.eaxy.QualifiedName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("nRJ:WN31B;", "nRJ:WN31B;");
      Content[] contentArray0 = new Content[6];
      Namespace namespace0 = new Namespace("nRJ:WN31B;");
      contentArray0[0] = (Content) namespace0;
      Attribute attribute0 = new Attribute(qualifiedName0, "nRJ:WN31B;");
      contentArray0[3] = (Content) attribute0;
      Element element0 = new Element(qualifiedName0, contentArray0);
      assertEquals("WN31B;", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Namespace namespace0 = new Namespace((String) null);
      QualifiedName qualifiedName0 = new QualifiedName(namespace0, "Vg*L56SxDky");
      PriorityQueue<Content> priorityQueue0 = new PriorityQueue<Content>();
      Element element0 = null;
      try {
        element0 = new Element(qualifiedName0, priorityQueue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid namespace Namespace{uri=null,prefix=null}
         //
         verifyException("org.eaxy.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("nRJ:WN31B;", "nRJ:WN31B;");
      Content[] contentArray0 = new Content[6];
      Attribute attribute0 = new Attribute(qualifiedName0, "nRJ:WN31B;");
      contentArray0[3] = (Content) attribute0;
      Element element0 = new Element(qualifiedName0, contentArray0);
      // Undeclared exception!
      try { 
        element0.hasClass("nRJ:WN31B;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("selected", "selected");
      ArrayDeque<Attribute> arrayDeque0 = new ArrayDeque<Attribute>();
      ArrayList<Namespace> arrayList0 = new ArrayList<Namespace>();
      Integer integer0 = new Integer((-1));
      Element element0 = new Element(qualifiedName0, arrayDeque0, arrayList0, integer0);
      assertEquals("selected", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("A\\!90", "A\\!90", (String) null);
      TreeSet<Attribute> treeSet0 = new TreeSet<Attribute>();
      ArrayDeque<Content> arrayDeque0 = new ArrayDeque<Content>(treeSet0);
      Element element0 = new Element(qualifiedName0, arrayDeque0);
      assertEquals("A\\!90", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("nRJ:WN31B;", "nRJ:WN31B;");
      Element element0 = new Element(qualifiedName0, (-31));
      assertEquals("WN31B;", element0.tagName());
  }
}
