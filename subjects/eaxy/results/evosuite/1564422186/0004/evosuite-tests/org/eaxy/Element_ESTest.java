/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 29 17:49:17 GMT 2019
 */

package org.eaxy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.TreeSet;
import org.eaxy.Attribute;
import org.eaxy.Content;
import org.eaxy.Element;
import org.eaxy.Namespace;
import org.eaxy.QualifiedName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("s<OAwN", "s<OAwN");
      Content[] contentArray0 = new Content[3];
      Namespace namespace0 = new Namespace("s<OAwN", "s<OAwN");
      contentArray0[2] = (Content) namespace0;
      Attribute attribute0 = new Attribute(qualifiedName0, "s<OAwN");
      contentArray0[0] = (Content) attribute0;
      Element element0 = new Element(qualifiedName0, contentArray0);
      assertEquals("s<OAwN", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("tx4eK)74M");
      Content[] contentArray0 = new Content[7];
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      contentArray0[3] = (Content) namespace0;
      Element element0 = null;
      try {
        element0 = new Element(qualifiedName0, contentArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid namespace {uri=null,prefix=null}
         //
         verifyException("org.eaxy.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("s<OAwN", "s<OAwN");
      Content[] contentArray0 = new Content[3];
      Attribute attribute0 = new Attribute(qualifiedName0, "s<OAwN");
      contentArray0[0] = (Content) attribute0;
      Element element0 = new Element(qualifiedName0, contentArray0);
      // Undeclared exception!
      try { 
        element0.hasClass("s<OAwN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("name");
      LinkedHashSet<Attribute> linkedHashSet0 = new LinkedHashSet<Attribute>();
      HashSet<Namespace> hashSet0 = new HashSet<Namespace>();
      Integer integer0 = new Integer(1);
      Element element0 = new Element(qualifiedName0, linkedHashSet0, hashSet0, integer0);
      assertEquals("name", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("s<OAwN", "s<OAwN");
      TreeSet<Content> treeSet0 = new TreeSet<Content>();
      Element element0 = new Element(qualifiedName0, treeSet0);
      assertEquals("s<OAwN", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      QualifiedName qualifiedName0 = new QualifiedName(namespace0, "%@Q@0@8c");
      Element element0 = new Element(qualifiedName0, 0);
      // Undeclared exception!
      try { 
        element0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
