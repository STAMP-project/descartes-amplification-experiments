/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 29 18:08:05 GMT 2019
 */

package org.eaxy.experimental;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import org.eaxy.Document;
import org.eaxy.Element;
import org.eaxy.QualifiedName;
import org.eaxy.experimental.SampleSoapXmlBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class SampleSoapXmlBuilder_ESTest extends SampleSoapXmlBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("http://schemas.xmlsoap.org/soap/envelope/", "http://schemas.xmlsoap.org/soap/envelope/");
      Element element0 = new Element(qualifiedName0, (-203));
      Document document0 = new Document(element0);
      SampleSoapXmlBuilder sampleSoapXmlBuilder0 = new SampleSoapXmlBuilder(document0, (URL) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("rootElement", "rootElement", "rootElement");
      Element element0 = new Element(qualifiedName0, (-1099));
      Document document0 = new Document(element0);
      SampleSoapXmlBuilder sampleSoapXmlBuilder0 = new SampleSoapXmlBuilder(document0);
      SampleSoapXmlBuilder.SoapServiceDefinition sampleSoapXmlBuilder_SoapServiceDefinition0 = null;
      try {
        sampleSoapXmlBuilder_SoapServiceDefinition0 = sampleSoapXmlBuilder0.new SoapServiceDefinition("rootElement");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find <java.lang.String@0000000037> below [java.lang.String@0000000044]. Actual elements: java.util.ArrayList@0000000045
         //
         verifyException("org.eaxy.ElementSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("a~strfact", "a~strfact", "a~strfact");
      Element element0 = new Element(qualifiedName0, (-1077));
      Document document0 = new Document(element0);
      SampleSoapXmlBuilder sampleSoapXmlBuilder0 = new SampleSoapXmlBuilder(document0);
      SampleSoapXmlBuilder.SoapServiceDefinition sampleSoapXmlBuilder_SoapServiceDefinition0 = null;
      try {
        sampleSoapXmlBuilder_SoapServiceDefinition0 = sampleSoapXmlBuilder0.new SoapServiceDefinition(element0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // What to do with <a~strfact:a~strfact />@-1077
         //
         verifyException("org.eaxy.experimental.SampleSoapXmlBuilder$SoapServiceDefinition", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SampleSoapXmlBuilder sampleSoapXmlBuilder0 = null;
      try {
        sampleSoapXmlBuilder0 = new SampleSoapXmlBuilder((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SampleSoapXmlBuilder sampleSoapXmlBuilder0 = null;
      try {
        sampleSoapXmlBuilder0 = new SampleSoapXmlBuilder("\n");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't find resource /
         //
         verifyException("org.eaxy.Xml", e);
      }
  }
}
