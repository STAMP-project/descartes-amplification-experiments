/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 05:20:53 GMT 2019
 */

package org.eaxy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.Stack;
import java.util.TreeSet;
import org.eaxy.Attribute;
import org.eaxy.Content;
import org.eaxy.Element;
import org.eaxy.Namespace;
import org.eaxy.QualifiedName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("<`qv@ RuIdD/Hl", "<`qv@ RuIdD/Hl");
      Content[] contentArray0 = new Content[7];
      Namespace namespace0 = new Namespace("wL", "<`qv@ RuIdD/Hl");
      contentArray0[3] = (Content) namespace0;
      Element element0 = new Element(qualifiedName0, contentArray0);
      assertEquals("<`qv@ RuIdD/Hl", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("<`qv@ RuIdD/Hl", "<`qv@ RuIdD/Hl");
      Content[] contentArray0 = new Content[7];
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      contentArray0[5] = (Content) namespace0;
      Element element0 = null;
      try {
        element0 = new Element(qualifiedName0, contentArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid namespace {uri=null,prefix=null}
         //
         verifyException("org.eaxy.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("a*k3V<MZ**</t(#^d", "a*k3V<MZ**</t(#^d", "a*k3V<MZ**</t(#^d");
      Content[] contentArray0 = new Content[9];
      Attribute attribute0 = new Attribute(qualifiedName0, "a*k3V<MZ**</t(#^d");
      contentArray0[0] = (Content) attribute0;
      Element element0 = new Element(qualifiedName0, contentArray0);
      assertEquals("a*k3V<MZ**</t(#^d", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("orgLea7y.Attr,bute", "orgLea7y.Attr,bute");
      TreeSet<Content> treeSet0 = new TreeSet<Content>();
      Element element0 = new Element(qualifiedName0, treeSet0);
      assertEquals("orgLea7y.Attr,bute", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("L]CV='8&mhQa2", "L]CV='8&mhQa2", "L]CV='8&mhQa2");
      Element element0 = new Element(qualifiedName0, (-10));
      assertEquals("L]CV='8&mhQa2", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("!`EWp$~7OW,)lr1WYH=");
      Stack<Attribute> stack0 = new Stack<Attribute>();
      LinkedHashSet<Namespace> linkedHashSet0 = new LinkedHashSet<Namespace>();
      Integer integer0 = new Integer((-3354));
      Element element0 = new Element(qualifiedName0, stack0, linkedHashSet0, integer0);
      boolean boolean0 = element0.equals(stack0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      QualifiedName qualifiedName0 = new QualifiedName("!`EWp$~7OW,)lr1WYH=");
      Stack<Attribute> stack0 = new Stack<Attribute>();
      LinkedHashSet<Namespace> linkedHashSet0 = new LinkedHashSet<Namespace>();
      Integer integer0 = new Integer((-3354));
      Element element0 = new Element(qualifiedName0, stack0, linkedHashSet0, integer0);
      boolean boolean0 = element0.equals(element0);
      assertTrue(boolean0);
  }
}
