package j2html.tags;


public class ConvenienceMethodTest {
    @org.junit.Test
    public void testAllConvenienceMethods() throws java.lang.Exception {
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|2", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|1", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|0", j2html.tags.EmptyTag.class, j2html.TagCreator.input()).isAutoComplete()).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|3", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<input autocomplete>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|6", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|5", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|4", j2html.tags.EmptyTag.class, j2html.TagCreator.input()).isAutoFocus()).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|7", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<input autofocus>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|10", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|9", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|8", j2html.tags.EmptyTag.class, j2html.TagCreator.input()).isHidden()).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|11", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<input hidden>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|14", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|13", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|12", j2html.tags.EmptyTag.class, j2html.TagCreator.input()).isRequired()).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|15", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<input required>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|18", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|17", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|16", j2html.tags.EmptyTag.class, j2html.TagCreator.img()).withAlt("An image")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|19", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<img alt=\"An image\">")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|22", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|21", j2html.tags.ContainerTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|20", j2html.tags.ContainerTag.class, j2html.TagCreator.form()).withAction("post")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|23", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<form action=\"post\"></form>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|26", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|25", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|24", j2html.tags.EmptyTag.class, j2html.TagCreator.meta()).withCharset("UTF-8")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|27", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<meta charset=\"UTF-8\">")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|30", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|29", j2html.tags.ContainerTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|28", j2html.tags.ContainerTag.class, j2html.TagCreator.div()).withClass("test-class")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|31", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<div class=\"test-class\"></div>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|34", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|33", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|32", j2html.tags.EmptyTag.class, j2html.TagCreator.meta()).withContent("Test Content")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|35", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<meta content=\"Test Content\">")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|38", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|37", j2html.tags.ContainerTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|36", j2html.tags.ContainerTag.class, j2html.TagCreator.a()).withHref("http://example.com")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|39", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<a href=\"http://example.com\"></a>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|42", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|41", j2html.tags.ContainerTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|40", j2html.tags.ContainerTag.class, j2html.TagCreator.div()).withId("test-id")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|43", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<div id=\"test-id\"></div>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|46", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|45", j2html.tags.ContainerTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|44", j2html.tags.ContainerTag.class, j2html.TagCreator.div()).withData("testdata", "test")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|47", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<div data-testdata=\"test\"></div>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|50", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|49", j2html.tags.ContainerTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|48", j2html.tags.ContainerTag.class, j2html.TagCreator.form()).withMethod("get")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|51", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<form method=\"get\"></form>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|54", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|53", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|52", j2html.tags.EmptyTag.class, j2html.TagCreator.input()).withName("test-name")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|55", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<input name=\"test-name\">")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|58", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|57", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|56", j2html.tags.EmptyTag.class, j2html.TagCreator.input()).withPlaceholder("test-placeholder")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|59", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<input placeholder=\"test-placeholder\">")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|62", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|61", j2html.tags.ContainerTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|60", j2html.tags.ContainerTag.class, j2html.TagCreator.a()).withTarget("_blank")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|63", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<a target=\"_blank\"></a>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|66", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|65", j2html.tags.ContainerTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|64", j2html.tags.ContainerTag.class, j2html.TagCreator.a()).withTitle("Title")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|67", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<a title=\"Title\"></a>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|70", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|69", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|68", j2html.tags.EmptyTag.class, j2html.TagCreator.input()).withType("email")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|71", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<input type=\"email\">")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|74", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|73", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|72", j2html.tags.EmptyTag.class, j2html.TagCreator.link()).withRel("stylesheet")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|75", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<link rel=\"stylesheet\">")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|78", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|77", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|76", j2html.tags.EmptyTag.class, j2html.TagCreator.link()).withRole("role")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|79", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<link role=\"role\">")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|82", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|81", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|80", j2html.tags.EmptyTag.class, j2html.TagCreator.img()).withSrc("/img/test.png")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|83", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<img src=\"/img/test.png\">")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|86", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|85", j2html.tags.ContainerTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.ContainerTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|84", j2html.tags.ContainerTag.class, j2html.TagCreator.div()).withStyle("background:red;")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|87", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<div style=\"background:red;\"></div>")));
        org.hamcrest.MatcherAssert.assertThat(eu.stamp_project.reneri.instrumentation.StateObserver.observe("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|90", eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|89", j2html.tags.EmptyTag.class, eu.stamp_project.reneri.instrumentation.StateObserver.<j2html.tags.EmptyTag>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|88", j2html.tags.EmptyTag.class, j2html.TagCreator.input()).withValue("test-value")).render()), eu.stamp_project.reneri.instrumentation.StateObserver.<org.hamcrest.Matcher<java.lang.String>>observeState("j2html.tags.ConvenienceMethodTest|testAllConvenienceMethods()|91", org.hamcrest.Matcher.class, org.hamcrest.Matchers.is("<input value=\"test-value\">")));
    }
}

