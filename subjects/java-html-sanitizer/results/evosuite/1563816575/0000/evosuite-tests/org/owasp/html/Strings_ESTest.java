/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 17:31:11 GMT 2019
 */

package org.owasp.html;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.owasp.html.Strings;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Strings_ESTest extends Strings_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('m', 'm', 'V', 'Z').when(charSequence0).charAt(anyInt());
      doReturn(123, 123).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-1224), charSequence0, (-1224), 313);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('9', '9', 'z', ')').when(charSequence0).charAt(anyInt());
      doReturn(24, 0).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-2021), charSequence0, (-892), 122);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('a', 'a', 'a', 'a', 'a').when(charSequence0).charAt(anyInt());
      doReturn(122, 91).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-908), charSequence0, (-908), 575);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 0, charSequence0, 0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('b').when(charSequence0).charAt(anyInt());
      doReturn((-1)).when(charSequence0).length();
      CharSequence charSequence1 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('M').when(charSequence1).charAt(anyInt());
      doReturn(401).when(charSequence1).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-3796), charSequence1, (-2653), 1993);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-1), charSequence0, 123, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(charSequence0).length();
      CharSequence charSequence1 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 0, charSequence1, (-1), 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Strings.regionMatchesIgnoreCase((CharSequence) null, 2033, (CharSequence) null, 402, 90);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.owasp.html.Strings", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('R', 'o').when(charSequence0).charAt(anyInt());
      doReturn(0, (-1037)).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-1212), charSequence0, (-3796), 114);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('l', 'A').when(charSequence0).charAt(anyInt());
      doReturn((-209), (-1)).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-596), charSequence0, (-596), 313);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('9', '9', '\u0087', ')').when(charSequence0).charAt(anyInt());
      doReturn(24, 0).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-2021), charSequence0, (-892), 122);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn(')', '\u0087').when(charSequence0).charAt(anyInt());
      doReturn(24, 24).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-2215), charSequence0, (-2215), 122);
      assertFalse(boolean0);
  }
}
