/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 01:53:37 GMT 2019
 */

package org.owasp.html;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.owasp.html.Strings;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Strings_ESTest extends Strings_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('U', 'A').when(charSequence0).charAt(anyInt());
      doReturn(1446, 91).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 1, charSequence0, 1, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('Z', 'Z', 'N', 'Z').when(charSequence0).charAt(anyInt());
      doReturn(1624, 113).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 0, charSequence0, (-33), 32);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('A', '%').when(charSequence0).charAt(anyInt());
      doReturn(2469, (-979)).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 122, charSequence0, (-3467), 2094);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('z', '\'').when(charSequence0).charAt(anyInt());
      doReturn((-784), 2657).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-2719), charSequence0, 97, 1318);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 0, charSequence0, 0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Strings.regionMatchesIgnoreCase((CharSequence) null, 3261, (CharSequence) null, (-1), 3261);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.owasp.html.Strings", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('\'', 'o').when(charSequence0).charAt(anyInt());
      doReturn(771).when(charSequence0).length();
      CharSequence charSequence1 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('\'', '?').when(charSequence1).charAt(anyInt());
      doReturn(90).when(charSequence1).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, (-2665), charSequence1, (-711), 32);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('', 'd').when(charSequence0).charAt(anyInt());
      doReturn(91, 1077).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 0, charSequence0, 0, 91);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('k', 'k', 'k', 's').when(charSequence0).charAt(anyInt());
      doReturn(2657, 1318).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 238, charSequence0, 238, 122);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn(57, (-83)).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 13, charSequence0, 'L', 13);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn('@', 'm').when(charSequence0).charAt(anyInt());
      doReturn(1446, 5158).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 26, charSequence0, 26, 26);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn((-4074)).when(charSequence0).length();
      boolean boolean0 = Strings.regionMatchesIgnoreCase(charSequence0, 940, charSequence0, 122, 0);
      assertFalse(boolean0);
  }
}
