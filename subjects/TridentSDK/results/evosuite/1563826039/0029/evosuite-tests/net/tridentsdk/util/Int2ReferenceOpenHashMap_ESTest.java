/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 20:49:14 GMT 2019
 */

package net.tridentsdk.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.tridentsdk.util.Int2ReferenceOpenHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Int2ReferenceOpenHashMap_ESTest extends Int2ReferenceOpenHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      Object object0 = new Object();
      int2ReferenceOpenHashMap0.n = 0;
      int2ReferenceOpenHashMap0.put(0, object0);
      Object object1 = int2ReferenceOpenHashMap0.put(0, object0);
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.maxFill = 1;
      int2ReferenceOpenHashMap0.put(1, (Object) null);
      int2ReferenceOpenHashMap0.put((-1148), (Object) null);
      Object object0 = int2ReferenceOpenHashMap0.put(1, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap1 = new Int2ReferenceOpenHashMap<Object>(0, 1.0F);
      int2ReferenceOpenHashMap1.put((-544), int2ReferenceOpenHashMap0);
      Object object0 = int2ReferenceOpenHashMap1.put(5378, (Object) null);
      int2ReferenceOpenHashMap1.put(574, object0);
      Object object1 = int2ReferenceOpenHashMap1.put(270, "");
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.put((-1970), "US|?32ZtWCn2kX(:");
      String string0 = int2ReferenceOpenHashMap0.put((-1970), "");
      assertEquals("US|?32ZtWCn2kX(:", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.containsNullKey = true;
      int2ReferenceOpenHashMap0.put(16, (Object) null);
      int2ReferenceOpenHashMap0.maxFill = 0;
      Integer integer0 = new Integer((-1970));
      Object object0 = int2ReferenceOpenHashMap0.put((-825), integer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.maxFill = (-1755);
      Integer integer0 = new Integer((-171));
      int2ReferenceOpenHashMap0.size = (-171);
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put((-1235), integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.mask = 0;
      int2ReferenceOpenHashMap0.put(960, "RQUb6i<9");
      // Undeclared exception!
      int2ReferenceOpenHashMap0.put((-31), "[lJfb!>4&g");
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.key = null;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Integer integer0 = new Integer((-1970));
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      int2ReferenceOpenHashMap0.size = 2146737219;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(0, integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Too large (2146737221 expected elements with load factor 0.75)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>(752, 1.0F);
      String[] stringArray0 = new String[9];
      int2ReferenceOpenHashMap0.value = stringArray0;
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap1 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap1.value = (Object[]) int2ReferenceOpenHashMap0.value;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap1.put(752, int2ReferenceOpenHashMap0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // net.tridentsdk.util.Int2ReferenceOpenHashMap
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }
}
