/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 20:19:30 GMT 2019
 */

package net.tridentsdk.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.tridentsdk.util.Int2ReferenceOpenHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Int2ReferenceOpenHashMap_ESTest extends Int2ReferenceOpenHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer((-931));
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.maxFill = (-1);
      int2ReferenceOpenHashMap0.put((-931), integer0);
      int2ReferenceOpenHashMap0.put(3, "6_aYZ);OrKuNJYt*");
      int2ReferenceOpenHashMap0.put(432, (Object) null);
      Object object0 = int2ReferenceOpenHashMap0.put((-285), "mv03qWUcl~-Pr^KpoV4");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer((-931));
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.maxFill = (-1);
      int2ReferenceOpenHashMap0.put((-931), integer0);
      int2ReferenceOpenHashMap0.put(3, "6_aYZ);OrKuNJYt*");
      int2ReferenceOpenHashMap0.put(432, (Object) null);
      Object object0 = int2ReferenceOpenHashMap0.put((-270), "mv03qWUcl~-Pr^KpoV4");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.put((-136), "");
      int2ReferenceOpenHashMap0.maxFill = (-136);
      int2ReferenceOpenHashMap0.put(284, (String) null);
      String string0 = int2ReferenceOpenHashMap0.put(284, "IM RH");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.mask = 0;
      int[] intArray0 = new int[1];
      intArray0[0] = (-3173);
      int2ReferenceOpenHashMap0.key = intArray0;
      // Undeclared exception!
      int2ReferenceOpenHashMap0.put(491, "");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.put((-144), (String) null);
      String string0 = int2ReferenceOpenHashMap0.put((-144), (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.maxFill = (-136);
      int2ReferenceOpenHashMap0.size = (-136);
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(284, (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>(0, 1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.key = null;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(2, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.size = 288;
      int2ReferenceOpenHashMap0.size = 2146910947;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(511, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Too large (2146910949 expected elements with load factor 0.75)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.size = 288;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(0, object0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.put(0, int2ReferenceOpenHashMap0);
      Object object0 = int2ReferenceOpenHashMap0.put(0, (Object) null);
      assertNotNull(object0);
  }
}
