/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 20:46:08 GMT 2019
 */

package net.tridentsdk.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import net.tridentsdk.base.Position;
import net.tridentsdk.world.World;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Position_ESTest extends Position_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      World world0 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position0 = new Position(world0);
      Position position1 = new Position(world0, 0.0F, 0.0, 0.0, 0.0F, 0.0F);
      boolean boolean0 = position1.equals(position0);
      assertEquals(0.0F, position1.getPitch(), 0.01F);
      assertTrue(boolean0);
      assertEquals(0.0F, position1.getYaw(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      World world0 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position0 = new Position(world0, (-2607.65764890462), (-2289.84), 0.0);
      boolean boolean0 = position0.equals(position0);
      assertEquals(0.0F, position0.getPitch(), 0.01F);
      assertTrue(boolean0);
      assertEquals(0.0F, position0.getYaw(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      World world0 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position0 = new Position(world0);
      World world1 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position1 = new Position(world1);
      boolean boolean0 = position0.equals(position1);
      assertEquals(0.0F, position1.getYaw(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, position1.getPitch(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      World world0 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position0 = new Position(world0, (-6.158889858317527), (-6.158889858317527), (-6.158889858317527));
      World world1 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position1 = new Position(world1, (-6.158889858317527), (-6.158889858317527), (-1906.57198), (-2538.1506F), (-2538.1506F));
      boolean boolean0 = position1.equals(position0);
      assertEquals(0.0F, position0.getYaw(), 0.01F);
      assertEquals((-18.150635F), position1.getPitch(), 0.01F);
      assertEquals((-18.150635F), position1.getYaw(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, position0.getPitch(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      World world0 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position0 = new Position(world0, 87.6100221646659, 87.6100221646659, 87.6100221646659);
      World world1 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position1 = new Position(world1, 87.6100221646659, 635.41036398, 635.41036398, 2456.7837F, 2456.7837F);
      boolean boolean0 = position0.equals(position1);
      assertEquals(26.783691F, position1.getPitch(), 0.01F);
      assertEquals(0.0F, position0.getPitch(), 0.01F);
      assertFalse(boolean0);
      assertEquals(296.7837F, position1.getYaw(), 0.01F);
      assertEquals(0.0F, position0.getYaw(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      World world0 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position0 = new Position(world0, (-6.158889858317527), (-6.158889858317527), (-6.158889858317527));
      World world1 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position1 = new Position(world1, (-1788), (-1788), (-1788));
      boolean boolean0 = position0.equals(position1);
      assertEquals(0.0F, position1.getPitch(), 0.01F);
      assertEquals(0.0F, position1.getYaw(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      World world0 = mock(World.class, new ViolatedAssumptionAnswer());
      Position position0 = new Position(world0, (-6.158889858317527), (-6.158889858317527), (-6.158889858317527));
      Object object0 = new Object();
      boolean boolean0 = position0.equals(object0);
      assertEquals(0.0F, position0.getYaw(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0.0F, position0.getPitch(), 0.01F);
  }
}
