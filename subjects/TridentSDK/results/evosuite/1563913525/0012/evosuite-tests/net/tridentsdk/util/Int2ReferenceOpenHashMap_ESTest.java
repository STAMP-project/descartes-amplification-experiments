/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 20:44:34 GMT 2019
 */

package net.tridentsdk.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.tridentsdk.util.Int2ReferenceOpenHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Int2ReferenceOpenHashMap_ESTest extends Int2ReferenceOpenHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.put(2, "");
      int2ReferenceOpenHashMap0.size = (-1621);
      int2ReferenceOpenHashMap0.put((-1640), "");
      int2ReferenceOpenHashMap0.maxFill = (-1621);
      // Undeclared exception!
      int2ReferenceOpenHashMap0.put((-2722), (String) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.put(2, "[! (");
      int2ReferenceOpenHashMap0.put((-1640), (String) null);
      int2ReferenceOpenHashMap0.maxFill = (-1640);
      String string0 = int2ReferenceOpenHashMap0.put((-2722), (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.maxFill = 0;
      Integer integer0 = new Integer(0);
      int2ReferenceOpenHashMap0.put((-2517), integer0);
      int2ReferenceOpenHashMap0.put((-4460), (Object) null);
      Object object0 = int2ReferenceOpenHashMap0.put((-4460), integer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.maxFill = 0;
      Integer integer0 = new Integer((-3038));
      Object object0 = int2ReferenceOpenHashMap0.put((-2517), integer0);
      int2ReferenceOpenHashMap0.put((-4460), (Object) null);
      int2ReferenceOpenHashMap0.put(2341, object0);
      Object object1 = int2ReferenceOpenHashMap0.put((-1642), (Object) null);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.put(0, "");
      String string0 = int2ReferenceOpenHashMap0.put(0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>(0, 0.75F);
      Integer integer0 = new Integer(0);
      int2ReferenceOpenHashMap0.put(0, integer0);
      Object object0 = int2ReferenceOpenHashMap0.put(1438, integer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.size = (-1621);
      int2ReferenceOpenHashMap0.maxFill = (-1621);
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put((-2722), (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.put(2, "");
      String string0 = int2ReferenceOpenHashMap0.put(2, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.key = null;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(2279, ")");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>(0, 0.75F);
      Integer integer0 = new Integer(0);
      int2ReferenceOpenHashMap0.size = 1717986918;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(1438, integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Too large (1717986920 expected elements with load factor 0.75)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }
}
