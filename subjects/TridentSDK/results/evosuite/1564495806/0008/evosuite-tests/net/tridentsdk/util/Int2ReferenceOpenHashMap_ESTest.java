/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 30 14:21:51 GMT 2019
 */

package net.tridentsdk.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.tridentsdk.util.Int2ReferenceOpenHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Int2ReferenceOpenHashMap_ESTest extends Int2ReferenceOpenHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      Integer integer0 = new Integer(95);
      Object object0 = int2ReferenceOpenHashMap0.put(1, integer0);
      int2ReferenceOpenHashMap0.size = 733;
      int2ReferenceOpenHashMap0.mask = 8;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(1, object0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      Integer integer0 = new Integer(1);
      Object object0 = int2ReferenceOpenHashMap0.put(1, integer0);
      int2ReferenceOpenHashMap0.maxFill = 1;
      int2ReferenceOpenHashMap0.mask = 8;
      Object object1 = int2ReferenceOpenHashMap0.put(1, object0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>(1, 1);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      int2ReferenceOpenHashMap0.key = intArray0;
      Object object0 = int2ReferenceOpenHashMap0.put(1, intArray0[0]);
      assertArrayEquals(new int[] {1, 0, 0, 0, 0, 0, 0}, intArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap1 = new Int2ReferenceOpenHashMap<Object>(0, 0.75F);
      int2ReferenceOpenHashMap1.put(0, int2ReferenceOpenHashMap0);
      Object object0 = int2ReferenceOpenHashMap1.put((-920), int2ReferenceOpenHashMap0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.mask = 4;
      int[] intArray0 = new int[3];
      intArray0[0] = 813;
      int2ReferenceOpenHashMap0.key = intArray0;
      // Undeclared exception!
      int2ReferenceOpenHashMap0.put(4, "");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.maxFill = (-1);
      int2ReferenceOpenHashMap0.put((-1530), "(.h\"r6dz0K/Q{u");
      int[] intArray0 = new int[2];
      intArray0[0] = 3;
      intArray0[1] = (-1530);
      int2ReferenceOpenHashMap0.key = intArray0;
      String string0 = int2ReferenceOpenHashMap0.put((-1530), "Q");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>(0, 1.0F);
      int2ReferenceOpenHashMap0.containsNullKey = true;
      String string0 = int2ReferenceOpenHashMap0.put(0, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.maxFill = (-1);
      int2ReferenceOpenHashMap0.put((-1530), "(.h\"r6dz0K/Q{u");
      int[] intArray0 = new int[2];
      intArray0[0] = 3;
      int2ReferenceOpenHashMap0.key = intArray0;
      String string0 = int2ReferenceOpenHashMap0.put((-1530), "Q");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      int2ReferenceOpenHashMap0.maxFill = (-1856);
      int2ReferenceOpenHashMap0.size = (-103);
      Integer integer0 = new Integer((-103));
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(0, integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.mask = 16;
      int2ReferenceOpenHashMap0.mask = 0;
      int2ReferenceOpenHashMap0.put(1487, " expected elements with load factor ");
      // Undeclared exception!
      int2ReferenceOpenHashMap0.put(5798, (Object) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>(0, 1.0F);
      int2ReferenceOpenHashMap0.value = null;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.put((-1530), "(.h\"r6dz0K/Q{u");
      String string0 = int2ReferenceOpenHashMap0.put((-1530), "Q");
      assertNotNull(string0);
      assertEquals("(.h\"r6dz0K/Q{u", string0);
  }
}
