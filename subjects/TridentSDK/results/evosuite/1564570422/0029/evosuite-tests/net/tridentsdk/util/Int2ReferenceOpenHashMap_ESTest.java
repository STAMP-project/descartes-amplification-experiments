/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 11:31:19 GMT 2019
 */

package net.tridentsdk.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.tridentsdk.util.Int2ReferenceOpenHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Int2ReferenceOpenHashMap_ESTest extends Int2ReferenceOpenHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>(0, 1.0F);
      Object object0 = new Object();
      int2ReferenceOpenHashMap0.put((-1), object0);
      int2ReferenceOpenHashMap0.put(1544, (Object) null);
      int2ReferenceOpenHashMap0.put(1, (Object) null);
      Object object1 = int2ReferenceOpenHashMap0.put(16, (Object) null);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>(0, 1.0F);
      Object object0 = new Object();
      int2ReferenceOpenHashMap0.put((-1), object0);
      int2ReferenceOpenHashMap0.put(1544, (Object) null);
      int2ReferenceOpenHashMap0.put(1, (Object) null);
      Object object1 = int2ReferenceOpenHashMap0.put(1, object0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>(0, 1.0F);
      int2ReferenceOpenHashMap0.put(0, "Kw^hHEr:)\"0s;v-^#A");
      Object object0 = int2ReferenceOpenHashMap0.put(0, "Kw^hHEr:)\"0s;v-^#A");
      assertEquals("Kw^hHEr:)\"0s;v-^#A", object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>(0, 1.0F);
      Object object0 = new Object();
      int2ReferenceOpenHashMap0.put((-1), object0);
      int2ReferenceOpenHashMap0.put(1544, (Object) null);
      int2ReferenceOpenHashMap0.put(1, (Object) null);
      Object object1 = int2ReferenceOpenHashMap0.put(0, "Kw^hHEr:)\"0s;v-^#A");
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>(1, 1);
      int2ReferenceOpenHashMap0.size = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(103, "X%QY)AZaHL_=dY");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap0.mask = 0;
      Integer integer0 = new Integer(1376);
      int2ReferenceOpenHashMap0.put(894, integer0);
      // Undeclared exception!
      int2ReferenceOpenHashMap0.put(1, "h\"6S8z!2}4\"2#");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap1 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap1.value = null;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap1.put((-1154), int2ReferenceOpenHashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      Object object0 = new Object();
      int2ReferenceOpenHashMap0.size = 2146792627;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put((-925), object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Too large (2146792629 expected elements with load factor 0.75)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>(0, 1.0F);
      Object object0 = new Object();
      int2ReferenceOpenHashMap0.put((-1), object0);
      Integer integer0 = new Integer(1);
      Object object1 = int2ReferenceOpenHashMap0.put((-1), integer0);
      assertSame(object1, object0);
  }
}
