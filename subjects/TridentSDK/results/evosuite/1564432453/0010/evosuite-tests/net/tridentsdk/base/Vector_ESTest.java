/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 29 20:48:03 GMT 2019
 */

package net.tridentsdk.base;

import org.junit.Test;
import static org.junit.Assert.*;
import net.tridentsdk.base.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Vector_ESTest extends Vector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector vector0 = new Vector(0.0, (-1224.060207356061), (-803.796539166));
      Vector vector1 = vector0.add(vector0);
      assertEquals((-2448), vector1.getIntY());
      assertEquals(0.0, vector1.getX(), 0.01);
      assertEquals(2928.7623786219337, vector1.getMagnitude(), 0.01);
      assertEquals((-1607), vector1.getIntZ());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Vector vector0 = new Vector(48, 48, 48);
      assertEquals(48, vector0.getIntZ());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Vector vector0 = new Vector(0.0, (-1224.060207356061), (-803.796539166));
      Vector vector1 = new Vector(1, 0, (-1));
      Vector vector2 = vector0.add(vector1);
      assertEquals(1.0, vector2.getX(), 0.01);
      assertEquals(1464.9306675355438, vector2.getMagnitude(), 0.01);
      assertEquals((-1224.060207356061), vector2.getY(), 0.01);
      assertEquals((-804.796539166), vector2.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Vector vector0 = new Vector();
      assertEquals(0, vector0.getIntZ());
  }
}
