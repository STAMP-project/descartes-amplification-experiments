/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 30 21:37:37 GMT 2019
 */

package net.tridentsdk.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.tridentsdk.util.Int2ReferenceOpenHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Int2ReferenceOpenHashMap_ESTest extends Int2ReferenceOpenHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap1 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap1.put((-1328), (Object) null);
      int2ReferenceOpenHashMap1.maxFill = 1722;
      int2ReferenceOpenHashMap1.put((-1149), (Object) null);
      int2ReferenceOpenHashMap1.maxFill = 0;
      Object object0 = int2ReferenceOpenHashMap1.put(6381, int2ReferenceOpenHashMap0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap1 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap1.maxFill = (-1);
      int2ReferenceOpenHashMap1.put((-1328), (Object) null);
      int2ReferenceOpenHashMap1.maxFill = 1;
      Object object0 = int2ReferenceOpenHashMap1.put(6360, int2ReferenceOpenHashMap0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.n = 0;
      int2ReferenceOpenHashMap0.put(0, "a2AZWAWswaiIV");
      String string0 = int2ReferenceOpenHashMap0.put(0, " Cshk");
      assertNotNull(string0);
      assertEquals("a2AZWAWswaiIV", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      int2ReferenceOpenHashMap0.mask = 0;
      Integer integer0 = new Integer((-2565));
      int2ReferenceOpenHashMap0.put((-4001), integer0);
      // Undeclared exception!
      int2ReferenceOpenHashMap0.put((-2565), integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Object>();
      int[] intArray0 = new int[7];
      intArray0[1] = (-1);
      intArray0[2] = 3472;
      int2ReferenceOpenHashMap0.key = intArray0;
      Object object0 = new Object();
      Object object1 = int2ReferenceOpenHashMap0.put((-1385), object0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap1 = new Int2ReferenceOpenHashMap<Object>();
      int2ReferenceOpenHashMap1.put(2, int2ReferenceOpenHashMap0);
      Object object0 = int2ReferenceOpenHashMap1.put(233, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>(0, 1.0F);
      int2ReferenceOpenHashMap0.put(0, "N|fuF*5a8@)a{=QGM2O");
      String string0 = int2ReferenceOpenHashMap0.put(2059, "N|fuF*5a8@)a{=QGM2O");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.put((-1), "");
      String string0 = int2ReferenceOpenHashMap0.put((-1), "tm`1]0K!*u|/@c3G");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Int2ReferenceOpenHashMap<String> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<String>();
      int2ReferenceOpenHashMap0.value = null;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(1823, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      int2ReferenceOpenHashMap0.size = 2147483645;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put(1, (Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Too large (2147483647 expected elements with load factor 0.75)
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      Int2ReferenceOpenHashMap<Object> int2ReferenceOpenHashMap1 = new Int2ReferenceOpenHashMap<Object>();
      Integer[] integerArray0 = new Integer[1];
      int2ReferenceOpenHashMap0.value = integerArray0;
      int2ReferenceOpenHashMap1.value = (Object[]) int2ReferenceOpenHashMap0.value;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap1.put(6360, int2ReferenceOpenHashMap0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // net.tridentsdk.util.Int2ReferenceOpenHashMap
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Int2ReferenceOpenHashMap<Integer> int2ReferenceOpenHashMap0 = new Int2ReferenceOpenHashMap<Integer>();
      Integer[] integerArray0 = new Integer[6];
      int2ReferenceOpenHashMap0.value = integerArray0;
      // Undeclared exception!
      try { 
        int2ReferenceOpenHashMap0.put((-1772), integerArray0[0]);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("net.tridentsdk.util.Int2ReferenceOpenHashMap", e);
      }
  }
}
