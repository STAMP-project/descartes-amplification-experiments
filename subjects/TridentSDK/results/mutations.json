{
    "mutators": [
        "void",
        "null",
        "empty",
        "true",
        "false",
        "0",
        "1",
        "(short)0",
        "(short)1",
        "(byte)0",
        "(byte)1",
        "0L",
        "1L",
        "0.0",
        "1.0",
        "0.0f",
        "1.0f",
        "'\\40'",
        "'A'",
        "\"\"",
        "\"A\""
    ],
    "mutations": [
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "add",
                "description": "(Ljava/util/Map$Entry;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeByte",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeByteArray",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeCompound",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeDouble",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeFloat",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeIntArray",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeList",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeLong",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeShort",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computeString",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "computerInt",
                "description": "(Ljava/lang/String;Ljava/util/function/BiFunction;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "get",
                "description": "(Ljava/lang/String;)Ljava/lang/Object;",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "(byte)0",
            "method": {
                "name": "getByte",
                "description": "(Ljava/lang/String;)B",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "(byte)1",
            "method": {
                "name": "getByte",
                "description": "(Ljava/lang/String;)B",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "empty",
            "method": {
                "name": "getByteArray",
                "description": "(Ljava/lang/String;)[B",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getByteArray",
                "description": "(Ljava/lang/String;)[B",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getCompound",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/meta/nbt/Tag$Compound;",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "0.0",
            "method": {
                "name": "getDouble",
                "description": "(Ljava/lang/String;)D",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "1.0",
            "method": {
                "name": "getDouble",
                "description": "(Ljava/lang/String;)D",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "0.0f",
            "method": {
                "name": "getFloat",
                "description": "(Ljava/lang/String;)F",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "1.0f",
            "method": {
                "name": "getFloat",
                "description": "(Ljava/lang/String;)F",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "0",
            "method": {
                "name": "getInt",
                "description": "(Ljava/lang/String;)I",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "1",
            "method": {
                "name": "getInt",
                "description": "(Ljava/lang/String;)I",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "empty",
            "method": {
                "name": "getIntArray",
                "description": "(Ljava/lang/String;)[I",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getIntArray",
                "description": "(Ljava/lang/String;)[I",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getList",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "0L",
            "method": {
                "name": "getLong",
                "description": "(Ljava/lang/String;)J",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "1L",
            "method": {
                "name": "getLong",
                "description": "(Ljava/lang/String;)J",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "(short)0",
            "method": {
                "name": "getShort",
                "description": "(Ljava/lang/String;)S",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "(short)1",
            "method": {
                "name": "getShort",
                "description": "(Ljava/lang/String;)S",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "\"\"",
            "method": {
                "name": "getString",
                "description": "(Ljava/lang/String;)Ljava/lang/String;",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "\"A\"",
            "method": {
                "name": "getString",
                "description": "(Ljava/lang/String;)Ljava/lang/String;",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getString",
                "description": "(Ljava/lang/String;)Ljava/lang/String;",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putByte",
                "description": "(Ljava/lang/String;B)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putByteArray",
                "description": "(Ljava/lang/String;[B)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putCompound",
                "description": "(Lnet/tridentsdk/meta/nbt/Tag$Compound;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putDouble",
                "description": "(Ljava/lang/String;D)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putFloat",
                "description": "(Ljava/lang/String;F)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putInt",
                "description": "(Ljava/lang/String;I)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putIntArray",
                "description": "(Ljava/lang/String;[I)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putList",
                "description": "(Ljava/lang/String;Lnet/tridentsdk/meta/nbt/Tag$List;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putLong",
                "description": "(Ljava/lang/String;J)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putShort",
                "description": "(Ljava/lang/String;S)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "putString",
                "description": "(Ljava/lang/String;Ljava/lang/String;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "remove",
                "description": "(Ljava/lang/String;)Z",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "remove",
                "description": "(Ljava/lang/String;)Z",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/io/DataOutputStream;)V",
                "class": "Tag$Compound",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "addExtra",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "addExtra",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "addWith",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "addWith",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "asJson",
                "description": "()Lorg/hjson/JsonValue;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testEmpty(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testPlain(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testJsonValidity(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.entity.living.PlayerTest.testSendMessageDefault(net.tridentsdk.entity.living.PlayerTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testEmpty(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "create",
                "description": "()Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testEmpty(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testPlain(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testJsonValidity(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.entity.living.PlayerTest.testSendMessageDefault(net.tridentsdk.entity.living.PlayerTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testEmpty(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "empty",
                "description": "()Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testEmpty(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testEmpty(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.entity.living.PlayerTest.testSendMessageDefault(net.tridentsdk.entity.living.PlayerTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.entity.living.PlayerTest.testSendMessageDefault(net.tridentsdk.entity.living.PlayerTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "fromFormat",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "fromJson",
                "description": "(Lorg/hjson/JsonObject;)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "hasExtra",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;Z)Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 3,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "hasExtra",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;Z)Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "hasWith",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;Z)Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "hasWith",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;Z)Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "isBold",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "isBold",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "isItalic",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "isItalic",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "isObfuscated",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "isObfuscated",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "isStrikethrough",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "isStrikethrough",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "isUnderlined",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "isUnderlined",
                "description": "()Z",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setBold",
                "description": "(Z)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setItalic",
                "description": "(Z)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setObfuscated",
                "description": "(Z)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setStrikethrough",
                "description": "(Z)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setUnderlined",
                "description": "(Z)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "stripColor",
                "description": "()Lorg/hjson/JsonValue;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "text",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/ui/chat/ChatComponent;",
                "class": "ChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testPlain(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testJsonValidity(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.entity.living.PlayerTest.testSendMessageDefault(net.tridentsdk.entity.living.PlayerTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testPlain(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "add",
                "description": "(DDD)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "add",
                "description": "(III)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "add",
                "description": "(Lnet/tridentsdk/base/AbstractVector;)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "divide",
                "description": "(DDD)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testNormalize(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "divide",
                "description": "(III)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "divide",
                "description": "(Lnet/tridentsdk/base/AbstractVector;)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "eq",
                "description": "(DD)Z",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testIntConstructor(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.VectorsTest.testSetsEqualsHash(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.PositionTest.testTheOtherConstructor(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.PositionTest.testEqualsHashString(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testIntConstructor(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "eq",
                "description": "(DD)Z",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 17,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testIntConstructor(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.VectorsTest.testSetsEqualsHash(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.PositionTest.testTheOtherConstructor(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.PositionTest.testEqualsHashString(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testIntConstructor(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.VectorsTest.testSetsEqualsHash(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testIntConstructor(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testIntConstructor(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.VectorsTest.testSetsEqualsHash(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testIntConstructor(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSetsEqualsHash(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "0",
            "method": {
                "name": "getIntX",
                "description": "()I",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.PositionTest.testBlock(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "1",
            "method": {
                "name": "getIntX",
                "description": "()I",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.PositionTest.testBlock(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "0",
            "method": {
                "name": "getIntY",
                "description": "()I",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.PositionTest.testBlock(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "1",
            "method": {
                "name": "getIntY",
                "description": "()I",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.PositionTest.testBlock(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "0",
            "method": {
                "name": "getIntZ",
                "description": "()I",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.PositionTest.testBlock(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "1",
            "method": {
                "name": "getIntZ",
                "description": "()I",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.PositionTest.testBlock(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "multiply",
                "description": "(DDD)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "multiply",
                "description": "(III)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "multiply",
                "description": "(Lnet/tridentsdk/base/AbstractVector;)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "set",
                "description": "(III)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setX",
                "description": "(I)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setY",
                "description": "(I)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setZ",
                "description": "(I)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "0.0",
            "method": {
                "name": "square",
                "description": "(D)D",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testNormalize(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "1.0",
            "method": {
                "name": "square",
                "description": "(D)D",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testNormalize(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "subtract",
                "description": "(DDD)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "subtract",
                "description": "(III)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "subtract",
                "description": "(Lnet/tridentsdk/base/AbstractVector;)Lnet/tridentsdk/base/AbstractVector;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "toPosition",
                "description": "(Lnet/tridentsdk/world/World;)Lnet/tridentsdk/base/Position;",
                "class": "AbstractVector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testToPosition(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testToPosition(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testToPosition(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testToPosition(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testToPosition(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testToPosition(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "TIMED_OUT",
            "mutator": "0",
            "method": {
                "name": "arraySize",
                "description": "(IF)I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "TIMED_OUT",
            "mutator": "1",
            "method": {
                "name": "arraySize",
                "description": "(IF)I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "get",
                "description": "(I)Ljava/lang/Object;",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOobOf(net.tridentsdk.base.SubstanceTest)",
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "0",
            "method": {
                "name": "insert",
                "description": "(ILjava/lang/Object;)I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "1",
            "method": {
                "name": "insert",
                "description": "(ILjava/lang/Object;)I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "0",
            "method": {
                "name": "maxFill",
                "description": "(IF)I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "1",
            "method": {
                "name": "maxFill",
                "description": "(IF)I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "0",
            "method": {
                "name": "mix",
                "description": "(I)I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOobOf(net.tridentsdk.base.SubstanceTest)",
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "1",
            "method": {
                "name": "mix",
                "description": "(I)I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOobOf(net.tridentsdk.base.SubstanceTest)",
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "TIMED_OUT",
            "mutator": "0L",
            "method": {
                "name": "nextPowerOfTwo",
                "description": "(J)J",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "TIMED_OUT",
            "mutator": "1L",
            "method": {
                "name": "nextPowerOfTwo",
                "description": "(J)J",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "put",
                "description": "(ILjava/lang/Object;)Ljava/lang/Object;",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "0",
            "method": {
                "name": "realSize",
                "description": "()I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "1",
            "method": {
                "name": "realSize",
                "description": "()I",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "TIMED_OUT",
            "mutator": "void",
            "method": {
                "name": "rehash",
                "description": "(I)V",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "remove",
                "description": "(I)Ljava/lang/Object;",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "removeEntry",
                "description": "(I)Ljava/lang/Object;",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "removeNullEntry",
                "description": "()Ljava/lang/Object;",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "shiftKeys",
                "description": "(I)V",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "false",
            "method": {
                "name": "trim",
                "description": "()Z",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "trim",
                "description": "()Z",
                "class": "Int2ReferenceOpenHashMap",
                "package": "net.tridentsdk.util"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "0.0",
            "method": {
                "name": "distance",
                "description": "(Lnet/tridentsdk/base/Position;)D",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "1.0",
            "method": {
                "name": "distance",
                "description": "(Lnet/tridentsdk/base/Position;)D",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "0.0",
            "method": {
                "name": "distanceSquared",
                "description": "(Lnet/tridentsdk/base/Position;)D",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "1.0",
            "method": {
                "name": "distanceSquared",
                "description": "(Lnet/tridentsdk/base/Position;)D",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.distance(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "eq",
                "description": "(FF)Z",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testTheOtherConstructor(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.PositionTest.testEqualsHashString(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.testTheOtherConstructor(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "eq",
                "description": "(FF)Z",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testTheOtherConstructor(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.PositionTest.testEqualsHashString(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testTheOtherConstructor(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.PositionTest.testEqualsHashString(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.testTheOtherConstructor(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testTheOtherConstructor(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.PositionTest.testEqualsHashString(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.testEqualsHashString(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "0",
            "method": {
                "name": "getChunkX",
                "description": "()I",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "1",
            "method": {
                "name": "getChunkX",
                "description": "()I",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "0",
            "method": {
                "name": "getChunkZ",
                "description": "()I",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "1",
            "method": {
                "name": "getChunkZ",
                "description": "()I",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "set",
                "description": "(DDD)Lnet/tridentsdk/base/Position;",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)",
                    "net.tridentsdk.base.PositionTest.testEqualsHashString(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setPitch",
                "description": "(F)Lnet/tridentsdk/base/Position;",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setWorld",
                "description": "(Lnet/tridentsdk/world/World;)Lnet/tridentsdk/base/Position;",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setX",
                "description": "(D)Lnet/tridentsdk/base/Position;",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setY",
                "description": "(D)Lnet/tridentsdk/base/Position;",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setYaw",
                "description": "(F)Lnet/tridentsdk/base/Position;",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.PositionTest.testSettersAndGetters(net.tridentsdk.base.PositionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setZ",
                "description": "(D)Lnet/tridentsdk/base/Position;",
                "class": "Position",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "addDispatcherProvider",
                "description": "(Ljava/util/function/Predicate;Ljava/util/function/Function;)V",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "dispatch",
                "description": "(Ljava/lang/String;Lnet/tridentsdk/command/CommandSource;)Z",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "dispatch",
                "description": "(Ljava/lang/String;Lnet/tridentsdk/command/CommandSource;)Z",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "\"\"",
            "method": {
                "name": "getClassName",
                "description": "(Ljava/lang/Class;)Ljava/lang/String;",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "\"A\"",
            "method": {
                "name": "getClassName",
                "description": "(Ljava/lang/Class;)Ljava/lang/String;",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getClassName",
                "description": "(Ljava/lang/Class;)Ljava/lang/String;",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getDispatchers",
                "description": "()Ljava/util/Map;",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "\"\"",
            "method": {
                "name": "getMethodSignature",
                "description": "(Ljava/lang/reflect/Method;)Ljava/lang/String;",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "\"A\"",
            "method": {
                "name": "getMethodSignature",
                "description": "(Ljava/lang/reflect/Method;)Ljava/lang/String;",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getMethodSignature",
                "description": "(Ljava/lang/reflect/Method;)Ljava/lang/String;",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getPluginDispatchers",
                "description": "()Ljava/util/Map;",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "isValidCommandName",
                "description": "(Ljava/lang/String;)Z",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "isValidCommandName",
                "description": "(Ljava/lang/String;)Z",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "register",
                "description": "(Lnet/tridentsdk/plugin/Plugin;Lnet/tridentsdk/command/CommandListener;)V",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "unregister",
                "description": "(Ljava/lang/Class;)V",
                "class": "CommandHandler",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "achievement",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/ui/chat/HoverEvent;",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testAchievementJson(net.tridentsdk.ui.chat.HoverEventTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testAchievementJson(net.tridentsdk.ui.chat.HoverEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "asJson",
                "description": "()Lorg/hjson/JsonValue;",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testAchievementJson(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testItem(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testJsonValidity(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testAchievementJson(net.tridentsdk.ui.chat.HoverEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "false",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "fromJson",
                "description": "(Lorg/hjson/JsonValue;)Lnet/tridentsdk/ui/chat/HoverEvent;",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testItem(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testJsonValidity(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testItem(net.tridentsdk.ui.chat.HoverEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "item",
                "description": "(Lnet/tridentsdk/inventory/Item;)Lnet/tridentsdk/ui/chat/HoverEvent;",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testItem(net.tridentsdk.ui.chat.HoverEventTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testItem(net.tridentsdk.ui.chat.HoverEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "text",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/ui/chat/HoverEvent;",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testJsonValidity(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "text",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;)Lnet/tridentsdk/ui/chat/HoverEvent;",
                "class": "HoverEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.HoverEventTest.testJsonValidity(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "load",
                "description": "(Ljava/nio/file/Path;)Lnet/tridentsdk/plugin/Plugin;",
                "class": "PluginLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "load",
                "description": "(Ljava/nio/file/Path;Ljava/util/Set;)Lnet/tridentsdk/plugin/Plugin;",
                "class": "PluginLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "loadAll",
                "description": "()V",
                "class": "PluginLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "loadAll",
                "description": "(Ljava/util/Set;)V",
                "class": "PluginLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "reload",
                "description": "()V",
                "class": "PluginLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "unload",
                "description": "(Ljava/lang/String;)Z",
                "class": "PluginLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "unload",
                "description": "(Ljava/lang/String;)Z",
                "class": "PluginLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "unloadAll",
                "description": "()Z",
                "class": "PluginLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "unloadAll",
                "description": "()Z",
                "class": "PluginLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "0.0",
            "method": {
                "name": "getMagnitude",
                "description": "()D",
                "class": "Vector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testNormalize(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType)"
                ],
                "killing": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "1.0",
            "method": {
                "name": "getMagnitude",
                "description": "()D",
                "class": "Vector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testNormalize(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "0.0",
            "method": {
                "name": "getMagnitudeSquared",
                "description": "()D",
                "class": "Vector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testNormalize(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType)"
                ],
                "killing": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "1.0",
            "method": {
                "name": "getMagnitudeSquared",
                "description": "()D",
                "class": "Vector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 5,
                "ordered": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testNormalize(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "normalize",
                "description": "()Lnet/tridentsdk/base/Vector;",
                "class": "Vector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testNormalize(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType)"
                ],
                "killing": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "set",
                "description": "(DDD)Lnet/tridentsdk/base/Vector;",
                "class": "Vector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testNormalize(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.VectorsTest.testOps(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testOps(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testNormalize(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setX",
                "description": "(D)Lnet/tridentsdk/base/Vector;",
                "class": "Vector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.VectorsTest.testSetsEqualsHash(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testSGDouble(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setY",
                "description": "(D)Lnet/tridentsdk/base/Vector;",
                "class": "Vector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.VectorsTest.testSetsEqualsHash(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testSGDouble(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "setZ",
                "description": "(D)Lnet/tridentsdk/base/Vector;",
                "class": "Vector",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.VectorsTest.testSetsEqualsHash(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)",
                    "net.tridentsdk.base.VectorsTest.testSGDouble(net.tridentsdk.base.VectorsTest)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B1.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B1)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGDouble(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSGInt(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B2.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B2)",
                    "net.tridentsdk.base.generated.VectorsTest_jmhType_B3.testSetsEqualsHash(net.tridentsdk.base.generated.VectorsTest_jmhType_B3)"
                ],
                "killing": [
                    "net.tridentsdk.base.VectorsTest.testSGInt(net.tridentsdk.base.VectorsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "anticlockwise",
                "description": "()Lnet/tridentsdk/base/BlockDirection;",
                "class": "BlockDirection",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.BlockDirectionTest.testAnticlockwise(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.BlockDirectionTest.testAnticlockwise(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "anticlockwise",
                "description": "(Z)Lnet/tridentsdk/base/BlockDirection;",
                "class": "BlockDirection",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.BlockDirectionTest.testAnticlockwise(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.BlockDirectionTest.testAnticlockwise(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "clockwise",
                "description": "()Lnet/tridentsdk/base/BlockDirection;",
                "class": "BlockDirection",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.BlockDirectionTest.testClockwise(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.BlockDirectionTest.testClockwise(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "clockwise",
                "description": "(Z)Lnet/tridentsdk/base/BlockDirection;",
                "class": "BlockDirection",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.BlockDirectionTest.testClockwise(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.BlockDirectionTest.testClockwise(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "fromMinecraftDirection",
                "description": "(I)Lnet/tridentsdk/base/BlockDirection;",
                "class": "BlockDirection",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.BlockDirectionTest.testMinecraftDirections(net.tridentsdk.base.BlockDirectionTest)",
                    "net.tridentsdk.base.BlockDirectionTest.testLookupFailure(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.BlockDirectionTest.testMinecraftDirections(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "getOpposite",
                "description": "()Lnet/tridentsdk/base/BlockDirection;",
                "class": "BlockDirection",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.BlockDirectionTest.testOpposites(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.BlockDirectionTest.testOpposites(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "hasMinecraftDirection",
                "description": "()Z",
                "class": "BlockDirection",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 3,
                "ordered": [
                    "net.tridentsdk.base.BlockDirectionTest.testMinecraftDirections(net.tridentsdk.base.BlockDirectionTest)",
                    "net.tridentsdk.base.BlockDirectionTest.testLookupFailure(net.tridentsdk.base.BlockDirectionTest)",
                    "net.tridentsdk.base.BlockDirectionTest.testDirectionalDifferences(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.BlockDirectionTest.testDirectionalDifferences(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "hasMinecraftDirection",
                "description": "()Z",
                "class": "BlockDirection",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.BlockDirectionTest.testMinecraftDirections(net.tridentsdk.base.BlockDirectionTest)",
                    "net.tridentsdk.base.BlockDirectionTest.testLookupFailure(net.tridentsdk.base.BlockDirectionTest)",
                    "net.tridentsdk.base.BlockDirectionTest.testDirectionalDifferences(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.BlockDirectionTest.testMinecraftDirections(net.tridentsdk.base.BlockDirectionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "asJson",
                "description": "()Lorg/hjson/JsonObject;",
                "class": "ServerPingEvent$ServerPingResponse",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponse",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponse",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponse",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponse",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setDescription",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;)Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponse;",
                "class": "ServerPingEvent$ServerPingResponse",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setPlayers",
                "description": "(Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponsePlayers;)Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponse;",
                "class": "ServerPingEvent$ServerPingResponse",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setVersion",
                "description": "(Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponseVersion;)Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponse;",
                "class": "ServerPingEvent$ServerPingResponse",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "asJson",
                "description": "()Lorg/hjson/JsonObject;",
                "class": "ServerPingEvent$ServerPingResponsePlayers",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponsePlayers",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponsePlayers",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponsePlayers",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponsePlayers",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setMaxPlayers",
                "description": "(I)Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponsePlayers;",
                "class": "ServerPingEvent$ServerPingResponsePlayers",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setOnlinePlayers",
                "description": "(I)Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponsePlayers;",
                "class": "ServerPingEvent$ServerPingResponsePlayers",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setSamples",
                "description": "([Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponseSample;)Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponsePlayers;",
                "class": "ServerPingEvent$ServerPingResponsePlayers",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "fromName",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/base/Substance;",
                "class": "Substance",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "fromNumericId",
                "description": "(I)Lnet/tridentsdk/base/Substance;",
                "class": "Substance",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SubstanceTest.testOobOf(net.tridentsdk.base.SubstanceTest)",
                    "net.tridentsdk.base.SubstanceTest.testOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.SubstanceTest.testOobOf(net.tridentsdk.base.SubstanceTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "fromStringId",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/base/Substance;",
                "class": "Substance",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "isBlock",
                "description": "()Z",
                "class": "Substance",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "isBlock",
                "description": "()Z",
                "class": "Substance",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "isItem",
                "description": "()Z",
                "class": "Substance",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "isItem",
                "description": "()Z",
                "class": "Substance",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "asJson",
                "description": "()Lorg/hjson/JsonObject;",
                "class": "ClickEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ClickEventTest.testJsonValidity(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ClickEventTest.testOpenUrlJson(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ClickEventTest.testRunCommandJson(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ClickEventTest.testSuggestCommandJson(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ClickEventTest.testOpenFileJson(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ClickEventTest.testJsonValidity(net.tridentsdk.ui.chat.ClickEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "false",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ClickEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ClickEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ClickEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ClickEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "fromJson",
                "description": "(Lorg/hjson/JsonObject;)Lnet/tridentsdk/ui/chat/ClickEvent;",
                "class": "ClickEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ClickEventTest.testJsonValidity(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ClickEventTest.testJsonValidity(net.tridentsdk.ui.chat.ClickEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(Lnet/tridentsdk/ui/chat/ClickAction;Ljava/lang/String;)Lnet/tridentsdk/ui/chat/ClickEvent;",
                "class": "ClickEvent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ClickEventTest.testJsonValidity(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ClickEventTest.testOpenUrlJson(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ClickEventTest.testRunCommandJson(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ClickEventTest.testSuggestCommandJson(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ClickEventTest.testOpenFileJson(net.tridentsdk.ui.chat.ClickEventTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ClickEventTest.testJsonValidity(net.tridentsdk.ui.chat.ClickEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "asJson",
                "description": "()Lorg/hjson/JsonObject;",
                "class": "ServerPingEvent$ServerPingResponseSample",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponseSample",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponseSample",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponseSample",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponseSample",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setName",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponseSample;",
                "class": "ServerPingEvent$ServerPingResponseSample",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setUuid",
                "description": "(Ljava/util/UUID;)Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponseSample;",
                "class": "ServerPingEvent$ServerPingResponseSample",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "builder",
                "description": "()Lnet/tridentsdk/world/opt/WorldCreateSpec$WorldSpecBuilder;",
                "class": "WorldCreateSpec",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "custom",
                "description": "()Lnet/tridentsdk/world/opt/WorldCreateSpec;",
                "class": "WorldCreateSpec",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.testCustom(net.tridentsdk.world.opt.WorldCreateSpecTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.testCustom(net.tridentsdk.world.opt.WorldCreateSpecTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "\"\"",
            "method": {
                "name": "getOptionString",
                "description": "()Ljava/lang/String;",
                "class": "WorldCreateSpec",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.defaultOpts(net.tridentsdk.world.opt.WorldCreateSpecTest)",
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.testCustom(net.tridentsdk.world.opt.WorldCreateSpecTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "\"A\"",
            "method": {
                "name": "getOptionString",
                "description": "()Ljava/lang/String;",
                "class": "WorldCreateSpec",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.defaultOpts(net.tridentsdk.world.opt.WorldCreateSpecTest)",
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.testCustom(net.tridentsdk.world.opt.WorldCreateSpecTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "null",
            "method": {
                "name": "getOptionString",
                "description": "()Ljava/lang/String;",
                "class": "WorldCreateSpec",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.defaultOpts(net.tridentsdk.world.opt.WorldCreateSpecTest)",
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.testCustom(net.tridentsdk.world.opt.WorldCreateSpecTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "false",
            "method": {
                "name": "isAllowFeatures",
                "description": "()Z",
                "class": "WorldCreateSpec",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.defaultOpts(net.tridentsdk.world.opt.WorldCreateSpecTest)",
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.testCustom(net.tridentsdk.world.opt.WorldCreateSpecTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "isAllowFeatures",
                "description": "()Z",
                "class": "WorldCreateSpec",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 2,
                "ordered": [
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.defaultOpts(net.tridentsdk.world.opt.WorldCreateSpecTest)",
                    "net.tridentsdk.world.opt.WorldCreateSpecTest.testCustom(net.tridentsdk.world.opt.WorldCreateSpecTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "asJson",
                "description": "()Lorg/hjson/JsonObject;",
                "class": "ServerPingEvent$ServerPingResponseVersion",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponseVersion",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponseVersion",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponseVersion",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "ServerPingEvent$ServerPingResponseVersion",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "setName",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/event/server/ServerPingEvent$ServerPingResponseVersion;",
                "class": "ServerPingEvent$ServerPingResponseVersion",
                "package": "net.tridentsdk.event.server"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "\"\"",
            "method": {
                "name": "getUsage",
                "description": "()Ljava/lang/String;",
                "class": "ParamsCommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "\"A\"",
            "method": {
                "name": "getUsage",
                "description": "()Ljava/lang/String;",
                "class": "ParamsCommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getUsage",
                "description": "()Ljava/lang/String;",
                "class": "ParamsCommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "isContainedBy",
                "description": "(Ljava/lang/Class;)Z",
                "class": "ParamsCommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "isContainedBy",
                "description": "(Ljava/lang/Class;)Z",
                "class": "ParamsCommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "run",
                "description": "(Ljava/lang/String;Lnet/tridentsdk/command/CommandSource;[Ljava/lang/String;)V",
                "class": "ParamsCommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "byName",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/entity/living/Player;",
                "class": "Player",
                "package": "net.tridentsdk.entity.living"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "byUuid",
                "description": "(Ljava/util/UUID;)Lnet/tridentsdk/entity/living/Player;",
                "class": "Player",
                "package": "net.tridentsdk.entity.living"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "fuzzySearch",
                "description": "(Ljava/lang/String;)Ljava/util/Map;",
                "class": "Player",
                "package": "net.tridentsdk.entity.living"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "search",
                "description": "(Ljava/lang/String;)Ljava/util/Map;",
                "class": "Player",
                "package": "net.tridentsdk.entity.living"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "void",
            "method": {
                "name": "sendMessage",
                "description": "(Ljava/lang/String;)V",
                "class": "Player",
                "package": "net.tridentsdk.entity.living"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.entity.living.PlayerTest.testSendMessageDefault(net.tridentsdk.entity.living.PlayerTest)"
                ],
                "killing": [
                    "net.tridentsdk.entity.living.PlayerTest.testSendMessageDefault(net.tridentsdk.entity.living.PlayerTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "void",
            "method": {
                "name": "sendMessage",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;)V",
                "class": "Player",
                "package": "net.tridentsdk.entity.living"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.entity.living.PlayerTest.testSendMessageDefault(net.tridentsdk.entity.living.PlayerTest)"
                ],
                "killing": [
                    "net.tridentsdk.entity.living.PlayerTest.testSendMessageDefault(net.tridentsdk.entity.living.PlayerTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "isColor",
                "description": "()Z",
                "class": "ChatColor",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "isColor",
                "description": "()Z",
                "class": "ChatColor",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "isFormat",
                "description": "()Z",
                "class": "ChatColor",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 3,
                "ordered": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "true",
            "method": {
                "name": "isFormat",
                "description": "()Z",
                "class": "ChatColor",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testColors(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.HoverEventTest.testTextJson(net.tridentsdk.ui.chat.HoverEventTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(C)Lnet/tridentsdk/ui/chat/ChatColor;",
                "class": "ChatColor",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatColorTest.testError(net.tridentsdk.ui.chat.ChatColorTest)",
                    "net.tridentsdk.ui.chat.ChatColorTest.testColorRegistration(net.tridentsdk.ui.chat.ChatColorTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testFromFormatString2(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatColorTest.testError(net.tridentsdk.ui.chat.ChatColorTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "get",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/plugin/channel/PluginChannel;",
                "class": "PluginChannel",
                "package": "net.tridentsdk.plugin.channel"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "open",
                "description": "(Ljava/lang/String;Ljava/util/Collection;)Lnet/tridentsdk/plugin/channel/PluginChannel;",
                "class": "PluginChannel",
                "package": "net.tridentsdk.plugin.channel"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "open",
                "description": "(Ljava/lang/String;[Lnet/tridentsdk/entity/living/Player;)Lnet/tridentsdk/plugin/channel/PluginChannel;",
                "class": "PluginChannel",
                "package": "net.tridentsdk.plugin.channel"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "openAll",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/plugin/channel/PluginChannel;",
                "class": "PluginChannel",
                "package": "net.tridentsdk.plugin.channel"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "tryOpen",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/plugin/channel/PluginChannel;",
                "class": "PluginChannel",
                "package": "net.tridentsdk.plugin.channel"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "void",
            "method": {
                "name": "copyTo",
                "description": "(Lnet/tridentsdk/world/opt/GameRuleMap;)V",
                "class": "GameRuleMap",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.OptsTest.gameRuleValueTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "get",
                "description": "(Lnet/tridentsdk/world/opt/GameRule;)Ljava/lang/Object;",
                "class": "GameRuleMap",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.OptsTest.gameRuleValueTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.opt.OptsTest.gameRuleValueTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "void",
            "method": {
                "name": "reset",
                "description": "(Lnet/tridentsdk/world/opt/GameRule;)V",
                "class": "GameRuleMap",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.OptsTest.gameRuleValueTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.opt.OptsTest.gameRuleValueTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "void",
            "method": {
                "name": "set",
                "description": "(Lnet/tridentsdk/world/opt/GameRule;Ljava/lang/Object;)V",
                "class": "GameRuleMap",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.OptsTest.gameRuleValueTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.opt.OptsTest.gameRuleValueTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "false",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "WorldBorder$DoubleXZ",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.ConstantsTest.testWorldBorder(net.tridentsdk.world.opt.ConstantsTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "canEqual",
                "description": "(Ljava/lang/Object;)Z",
                "class": "WorldBorder$DoubleXZ",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.ConstantsTest.testWorldBorder(net.tridentsdk.world.opt.ConstantsTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "WorldBorder$DoubleXZ",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.ConstantsTest.testWorldBorder(net.tridentsdk.world.opt.ConstantsTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "WorldBorder$DoubleXZ",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.ConstantsTest.testWorldBorder(net.tridentsdk.world.opt.ConstantsTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "isAlias",
                "description": "(Ljava/lang/String;)Z",
                "class": "CommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "isAlias",
                "description": "(Ljava/lang/String;)Z",
                "class": "CommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "isMainCommand",
                "description": "(Ljava/lang/String;)Z",
                "class": "CommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "isMainCommand",
                "description": "(Ljava/lang/String;)Z",
                "class": "CommandDispatcher",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "newItem",
                "description": "(Lnet/tridentsdk/base/Substance;)Lnet/tridentsdk/inventory/Item;",
                "class": "Item",
                "package": "net.tridentsdk.inventory"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.inventory.ItemTest.newItem(net.tridentsdk.inventory.ItemTest)"
                ],
                "killing": [
                    "net.tridentsdk.inventory.ItemTest.newItem(net.tridentsdk.inventory.ItemTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "newItem",
                "description": "(Lnet/tridentsdk/base/Substance;I)Lnet/tridentsdk/inventory/Item;",
                "class": "Item",
                "package": "net.tridentsdk.inventory"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.inventory.ItemTest.newItem1(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem(net.tridentsdk.inventory.ItemTest)"
                ],
                "killing": [
                    "net.tridentsdk.inventory.ItemTest.newItem1(net.tridentsdk.inventory.ItemTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "newItem",
                "description": "(Lnet/tridentsdk/base/Substance;IB)Lnet/tridentsdk/inventory/Item;",
                "class": "Item",
                "package": "net.tridentsdk.inventory"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.inventory.ItemTest.newItem1(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem2(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem(net.tridentsdk.inventory.ItemTest)"
                ],
                "killing": [
                    "net.tridentsdk.inventory.ItemTest.newItem1(net.tridentsdk.inventory.ItemTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "newItem",
                "description": "(Lnet/tridentsdk/base/Substance;IBLnet/tridentsdk/meta/ItemMeta;)Lnet/tridentsdk/inventory/Item;",
                "class": "Item",
                "package": "net.tridentsdk.inventory"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.inventory.ItemTest.newItem1(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem2(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem3(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem(net.tridentsdk.inventory.ItemTest)"
                ],
                "killing": [
                    "net.tridentsdk.inventory.ItemTest.newItem1(net.tridentsdk.inventory.ItemTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "void",
            "method": {
                "name": "intercept",
                "description": "(Lnet/tridentsdk/logger/Logger;Lnet/tridentsdk/logger/LogHandler;)V",
                "class": "LogHandler",
                "package": "net.tridentsdk.logger"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.logger.LogHandlerTest.intercept(net.tridentsdk.logger.LogHandlerTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "removeHandler",
                "description": "(Lnet/tridentsdk/logger/Logger;Lnet/tridentsdk/logger/LogHandler;)Z",
                "class": "LogHandler",
                "package": "net.tridentsdk.logger"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.logger.LogHandlerTest.removeHandler(net.tridentsdk.logger.LogHandlerTest)"
                ],
                "killing": [
                    "net.tridentsdk.logger.LogHandlerTest.removeHandler(net.tridentsdk.logger.LogHandlerTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "removeHandler",
                "description": "(Lnet/tridentsdk/logger/Logger;Lnet/tridentsdk/logger/LogHandler;)Z",
                "class": "LogHandler",
                "package": "net.tridentsdk.logger"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.logger.LogHandlerTest.removeHandler(net.tridentsdk.logger.LogHandlerTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "load",
                "description": "(Ljava/io/File;)Lnet/tridentsdk/config/Config;",
                "class": "Config",
                "package": "net.tridentsdk.config"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.config.ConfigTest.testFile(net.tridentsdk.config.ConfigTest)"
                ],
                "killing": [
                    "net.tridentsdk.config.ConfigTest.testFile(net.tridentsdk.config.ConfigTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "load",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/config/Config;",
                "class": "Config",
                "package": "net.tridentsdk.config"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.config.ConfigTest.testPathString(net.tridentsdk.config.ConfigTest)"
                ],
                "killing": [
                    "net.tridentsdk.config.ConfigTest.testPathString(net.tridentsdk.config.ConfigTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "load",
                "description": "(Ljava/nio/file/Path;)Lnet/tridentsdk/config/Config;",
                "class": "Config",
                "package": "net.tridentsdk.config"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.config.ConfigTest.testPath(net.tridentsdk.config.ConfigTest)"
                ],
                "killing": [
                    "net.tridentsdk.config.ConfigTest.testPath(net.tridentsdk.config.ConfigTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "false",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "IntPair",
                "package": "net.tridentsdk.world"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.IntPairTest.equalsHashString(net.tridentsdk.world.IntPairTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.IntPairTest.equalsHashString(net.tridentsdk.world.IntPairTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "SURVIVED",
            "mutator": "true",
            "method": {
                "name": "equals",
                "description": "(Ljava/lang/Object;)Z",
                "class": "IntPair",
                "package": "net.tridentsdk.world"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.IntPairTest.equalsHashString(net.tridentsdk.world.IntPairTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "make",
                "description": "(II)Lnet/tridentsdk/world/IntPair;",
                "class": "IntPair",
                "package": "net.tridentsdk.world"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.IntPairTest.testGets(net.tridentsdk.world.IntPairTest)",
                    "net.tridentsdk.world.IntPairTest.equalsHashString(net.tridentsdk.world.IntPairTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.IntPairTest.testGets(net.tridentsdk.world.IntPairTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$11",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$11",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$11",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$5",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$5",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$5",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$10",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$10",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$10",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$6",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$6",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$6",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$7",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$7",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$7",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$8",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$8",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$8",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$9",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$9",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$9",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$12",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$12",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$12",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$2",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$2",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$2",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$3",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$3",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$3",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$4",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "read",
                "description": "(Ljava/lang/String;Ljava/io/DataInputStream;)Ljava/lang/Object;",
                "class": "Tag$Type$4",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "write",
                "description": "(Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type$4",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "register",
                "description": "(Lnet/tridentsdk/plugin/channel/SimpleChannelListener;)V",
                "class": "SimpleChannelListener",
                "package": "net.tridentsdk.plugin.channel"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "unregister",
                "description": "(Ljava/lang/Class;)Z",
                "class": "SimpleChannelListener",
                "package": "net.tridentsdk.plugin.channel"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "unregister",
                "description": "(Ljava/lang/Class;)Z",
                "class": "SimpleChannelListener",
                "package": "net.tridentsdk.plugin.channel"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "getGlobalTabList",
                "description": "()Lnet/tridentsdk/ui/tablist/TabList;",
                "class": "TabList",
                "package": "net.tridentsdk.ui.tablist"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.tablist.TabListTest.getGlobal(net.tridentsdk.ui.tablist.TabListTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.tablist.TabListTest.getGlobal(net.tridentsdk.ui.tablist.TabListTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "newTabList",
                "description": "()Lnet/tridentsdk/ui/tablist/TabList;",
                "class": "TabList",
                "package": "net.tridentsdk.ui.tablist"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.tablist.TabListTest.newTabList(net.tridentsdk.ui.tablist.TabListTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.tablist.TabListTest.newTabList(net.tridentsdk.ui.tablist.TabListTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "decode",
                "description": "(Ljava/io/DataInputStream;)Lnet/tridentsdk/meta/nbt/Tag$Compound;",
                "class": "Tag",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "readFully",
                "description": "(Ljava/io/DataInputStream;)Ljava/util/Map$Entry;",
                "class": "Tag",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "get",
                "description": "(Ljava/lang/Class;)Lnet/tridentsdk/logger/Logger;",
                "class": "Logger",
                "package": "net.tridentsdk.logger"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.logger.LoggerTest.get1(net.tridentsdk.logger.LoggerTest)"
                ],
                "killing": [
                    "net.tridentsdk.logger.LoggerTest.get1(net.tridentsdk.logger.LoggerTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "get",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/logger/Logger;",
                "class": "Logger",
                "package": "net.tridentsdk.logger"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.logger.LoggerTest.get(net.tridentsdk.logger.LoggerTest)"
                ],
                "killing": [
                    "net.tridentsdk.logger.LoggerTest.get(net.tridentsdk.logger.LoggerTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "close",
                "description": "()V",
                "class": "PluginClassLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "findClass",
                "description": "(Ljava/lang/String;)Ljava/lang/Class;",
                "class": "PluginClassLoader",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "setChatComponent",
                "description": "(Lnet/tridentsdk/ui/chat/ChatComponent;)V",
                "class": "PlayerChatEvent",
                "package": "net.tridentsdk.event.player"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "setRecipients",
                "description": "(Ljava/util/Collection;)V",
                "class": "PlayerChatEvent",
                "package": "net.tridentsdk.event.player"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "isTypeOf",
                "description": "(Lnet/tridentsdk/command/CommandSource;)Z",
                "class": "CommandSourceType$1",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "isTypeOf",
                "description": "(Lnet/tridentsdk/command/CommandSource;)Z",
                "class": "CommandSourceType$1",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "isTypeOf",
                "description": "(Lnet/tridentsdk/command/CommandSource;)Z",
                "class": "CommandSourceType$3",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "isTypeOf",
                "description": "(Lnet/tridentsdk/command/CommandSource;)Z",
                "class": "CommandSourceType$3",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "false",
            "method": {
                "name": "isTypeOf",
                "description": "(Lnet/tridentsdk/command/CommandSource;)Z",
                "class": "CommandSourceType$2",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "true",
            "method": {
                "name": "isTypeOf",
                "description": "(Lnet/tridentsdk/command/CommandSource;)Z",
                "class": "CommandSourceType$2",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "registerTransformer",
                "description": "(Ljava/lang/Class;Ljava/util/function/BiFunction;)V",
                "class": "Transformers",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "transform",
                "description": "(Ljava/lang/String;Ljava/lang/reflect/Parameter;Ljava/lang/Class;)Ljava/lang/Object;",
                "class": "Transformers",
                "package": "net.tridentsdk.command"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "get",
                "description": "()Lnet/tridentsdk/Impl$Provider;",
                "class": "Impl",
                "package": "net.tridentsdk"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ImplTest.testSetGet(net.tridentsdk.ImplTest)",
                    "net.tridentsdk.config.ConfigTest.testPath(net.tridentsdk.config.ConfigTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem1(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem2(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem3(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.logger.LoggerTest.get(net.tridentsdk.logger.LoggerTest)",
                    "net.tridentsdk.logger.LoggerTest.get1(net.tridentsdk.logger.LoggerTest)",
                    "net.tridentsdk.ui.tablist.TabListTest.newTabList(net.tridentsdk.ui.tablist.TabListTest)",
                    "net.tridentsdk.config.ConfigTest.testPathString(net.tridentsdk.config.ConfigTest)",
                    "net.tridentsdk.logger.LogHandlerTest.removeHandler(net.tridentsdk.logger.LogHandlerTest)",
                    "net.tridentsdk.inventory.InventoryTest.newInventory(net.tridentsdk.inventory.InventoryTest)",
                    "net.tridentsdk.logger.LogHandlerTest.intercept(net.tridentsdk.logger.LogHandlerTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.ui.tablist.TabListTest.getGlobal(net.tridentsdk.ui.tablist.TabListTest)",
                    "net.tridentsdk.ui.bossbar.BossBarTest.newBossBar(net.tridentsdk.ui.bossbar.BossBarTest)",
                    "net.tridentsdk.ServerTest.testGetInstance(net.tridentsdk.ServerTest)",
                    "net.tridentsdk.config.ConfigTest.testFile(net.tridentsdk.config.ConfigTest)"
                ],
                "killing": [
                    "net.tridentsdk.ImplTest.testSetGet(net.tridentsdk.ImplTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "TIMED_OUT",
            "mutator": "void",
            "method": {
                "name": "setImpl",
                "description": "(Lnet/tridentsdk/Impl$Provider;)V",
                "class": "Impl",
                "package": "net.tridentsdk"
            },
            "tests": {
                "run": 9,
                "ordered": [
                    "net.tridentsdk.ImplTest.testSetGet(net.tridentsdk.ImplTest)",
                    "net.tridentsdk.logger.LoggerTest.get(net.tridentsdk.logger.LoggerTest)",
                    "net.tridentsdk.inventory.InventoryTest.newInventory(net.tridentsdk.inventory.InventoryTest)",
                    "net.tridentsdk.logger.LogHandlerTest.intercept(net.tridentsdk.logger.LogHandlerTest)",
                    "net.tridentsdk.inventory.ItemTest.newItem(net.tridentsdk.inventory.ItemTest)",
                    "net.tridentsdk.ui.tablist.TabListTest.getGlobal(net.tridentsdk.ui.tablist.TabListTest)",
                    "net.tridentsdk.ui.bossbar.BossBarTest.newBossBar(net.tridentsdk.ui.bossbar.BossBarTest)",
                    "net.tridentsdk.ServerTest.testGetInstance(net.tridentsdk.ServerTest)",
                    "net.tridentsdk.config.ConfigTest.testFile(net.tridentsdk.config.ConfigTest)"
                ],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "from",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/world/opt/GameRule;",
                "class": "GameRule",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.OptsTest.gameRuleTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.opt.OptsTest.gameRuleTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "getKeyStrings",
                "description": "()Ljava/util/Collection;",
                "class": "GameRule",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "init",
                "description": "(Ljava/nio/file/Path;Lnet/tridentsdk/plugin/PluginDesc;Lnet/tridentsdk/plugin/PluginClassLoader;)V",
                "class": "Plugin",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "release",
                "description": "()V",
                "class": "Plugin",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "asJson",
                "description": "()Lorg/hjson/JsonValue;",
                "class": "ChatComponent$StringChatComponent",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)",
                    "net.tridentsdk.ui.chat.ChatComponentTest.testGettersAndSetters(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ChatComponentTest.testTranslateWith(net.tridentsdk.ui.chat.ChatComponentTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/meta/entity/living/monster/SkeletonType;",
                "class": "SkeletonType",
                "package": "net.tridentsdk.meta.entity.living.monster"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.SkeletonTypeTest.testError(net.tridentsdk.base.SkeletonTypeTest)",
                    "net.tridentsdk.base.SkeletonTypeTest.testTypes(net.tridentsdk.base.SkeletonTypeTest)",
                    "net.tridentsdk.base.SkeletonTypeTest.testData(net.tridentsdk.base.SkeletonTypeTest)",
                    "net.tridentsdk.base.SkeletonTypeTest.testIndex(net.tridentsdk.base.SkeletonTypeTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.SkeletonTypeTest.testError(net.tridentsdk.base.SkeletonTypeTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/ui/bossbar/BossBarColor;",
                "class": "BossBarColor",
                "package": "net.tridentsdk.ui.bossbar"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.bossbar.BossBarColorTest.testError(net.tridentsdk.ui.bossbar.BossBarColorTest)",
                    "net.tridentsdk.ui.bossbar.BossBarColorTest.testIDs(net.tridentsdk.ui.bossbar.BossBarColorTest)",
                    "net.tridentsdk.ui.bossbar.BossBarColorTest.testIndex(net.tridentsdk.ui.bossbar.BossBarColorTest)",
                    "net.tridentsdk.ui.bossbar.BossBarColorTest.testColors(net.tridentsdk.ui.bossbar.BossBarColorTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.bossbar.BossBarColorTest.testError(net.tridentsdk.ui.bossbar.BossBarColorTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/ui/chat/ClientChatMode;",
                "class": "ClientChatMode",
                "package": "net.tridentsdk.ui.chat"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.chat.ClientChatModeTest.testModeRegistration(net.tridentsdk.ui.chat.ClientChatModeTest)",
                    "net.tridentsdk.ui.chat.ClientChatModeTest.testError(net.tridentsdk.ui.chat.ClientChatModeTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.chat.ClientChatModeTest.testModeRegistration(net.tridentsdk.ui.chat.ClientChatModeTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/meta/entity/living/animal/HorseColor;",
                "class": "HorseColor",
                "package": "net.tridentsdk.meta.entity.living.animal"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.HorseColorTest.testData(net.tridentsdk.base.HorseColorTest)",
                    "net.tridentsdk.base.HorseColorTest.testColors(net.tridentsdk.base.HorseColorTest)",
                    "net.tridentsdk.base.HorseColorTest.testError(net.tridentsdk.base.HorseColorTest)",
                    "net.tridentsdk.base.HorseColorTest.testIndex(net.tridentsdk.base.HorseColorTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.HorseColorTest.testData(net.tridentsdk.base.HorseColorTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "void",
            "method": {
                "name": "writeFully",
                "description": "(Ljava/lang/String;Ljava/lang/Object;Ljava/io/DataOutputStream;)V",
                "class": "Tag$Type",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "newBossBar",
                "description": "()Lnet/tridentsdk/ui/bossbar/BossBar;",
                "class": "BossBar",
                "package": "net.tridentsdk.ui.bossbar"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.bossbar.BossBarTest.newBossBar(net.tridentsdk.ui.bossbar.BossBarTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.bossbar.BossBarTest.newBossBar(net.tridentsdk.ui.bossbar.BossBarTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "from",
                "description": "(I)Lnet/tridentsdk/world/opt/GameMode;",
                "class": "GameMode",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.OptsTest.gameModeTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.opt.OptsTest.gameModeTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/base/DyeColor;",
                "class": "DyeColor",
                "package": "net.tridentsdk.base"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.DyeColorTest.testData(net.tridentsdk.base.DyeColorTest)",
                    "net.tridentsdk.base.DyeColorTest.testError(net.tridentsdk.base.DyeColorTest)",
                    "net.tridentsdk.base.DyeColorTest.testColors(net.tridentsdk.base.DyeColorTest)",
                    "net.tridentsdk.base.DyeColorTest.testIndex(net.tridentsdk.base.DyeColorTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.DyeColorTest.testData(net.tridentsdk.base.DyeColorTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newTitle",
                "description": "()Lnet/tridentsdk/ui/title/Title;",
                "class": "Title",
                "package": "net.tridentsdk.ui.title"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "visitFile",
                "description": "(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;",
                "class": "PluginLoader$1",
                "package": "net.tridentsdk.plugin"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/meta/entity/living/VillagerProfession;",
                "class": "VillagerProfession",
                "package": "net.tridentsdk.meta.entity.living"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.VillagerProfessionTest.testError(net.tridentsdk.base.VillagerProfessionTest)",
                    "net.tridentsdk.base.VillagerProfessionTest.testData(net.tridentsdk.base.VillagerProfessionTest)",
                    "net.tridentsdk.base.VillagerProfessionTest.testIndex(net.tridentsdk.base.VillagerProfessionTest)",
                    "net.tridentsdk.base.VillagerProfessionTest.testTypes(net.tridentsdk.base.VillagerProfessionTest)",
                    "net.tridentsdk.base.ZombieTypeTest.testVillagers(net.tridentsdk.base.ZombieTypeTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.VillagerProfessionTest.testError(net.tridentsdk.base.VillagerProfessionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "from",
                "description": "(Ljava/lang/String;)Lnet/tridentsdk/world/opt/LevelType;",
                "class": "LevelType",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.OptsTest.levelTypeTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.opt.OptsTest.levelTypeTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "build",
                "description": "()Lnet/tridentsdk/world/opt/WorldCreateSpec;",
                "class": "WorldCreateSpec$WorldSpecBuilder",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/meta/entity/living/animal/HorseType;",
                "class": "HorseType",
                "package": "net.tridentsdk.meta.entity.living.animal"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.HorseTypeTest.testError(net.tridentsdk.base.HorseTypeTest)",
                    "net.tridentsdk.base.HorseTypeTest.testData(net.tridentsdk.base.HorseTypeTest)",
                    "net.tridentsdk.base.HorseTypeTest.testIndex(net.tridentsdk.base.HorseTypeTest)",
                    "net.tridentsdk.base.HorseTypeTest.testTypes(net.tridentsdk.base.HorseTypeTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.HorseTypeTest.testError(net.tridentsdk.base.HorseTypeTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "from",
                "description": "(I)Lnet/tridentsdk/world/opt/Difficulty;",
                "class": "Difficulty",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.OptsTest.difficultyTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.opt.OptsTest.difficultyTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/meta/entity/living/animal/OcelotType;",
                "class": "OcelotType",
                "package": "net.tridentsdk.meta.entity.living.animal"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.OcelotTypeTest.testError(net.tridentsdk.base.OcelotTypeTest)",
                    "net.tridentsdk.base.OcelotTypeTest.testIndex(net.tridentsdk.base.OcelotTypeTest)",
                    "net.tridentsdk.base.OcelotTypeTest.testTypes(net.tridentsdk.base.OcelotTypeTest)",
                    "net.tridentsdk.base.OcelotTypeTest.testData(net.tridentsdk.base.OcelotTypeTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.OcelotTypeTest.testError(net.tridentsdk.base.OcelotTypeTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "from",
                "description": "(I)Lnet/tridentsdk/world/opt/Dimension;",
                "class": "Dimension",
                "package": "net.tridentsdk.world.opt"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.world.opt.OptsTest.dimensionTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "killing": [
                    "net.tridentsdk.world.opt.OptsTest.dimensionTest(net.tridentsdk.world.opt.OptsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/meta/entity/living/animal/RabbitType;",
                "class": "RabbitType",
                "package": "net.tridentsdk.meta.entity.living.animal"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.RabbitTypeTest.testError(net.tridentsdk.base.RabbitTypeTest)",
                    "net.tridentsdk.base.RabbitTypeTest.testTypes(net.tridentsdk.base.RabbitTypeTest)",
                    "net.tridentsdk.base.RabbitTypeTest.testData(net.tridentsdk.base.RabbitTypeTest)",
                    "net.tridentsdk.base.RabbitTypeTest.testIndex(net.tridentsdk.base.RabbitTypeTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.RabbitTypeTest.testError(net.tridentsdk.base.RabbitTypeTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/meta/entity/living/monster/ZombieType;",
                "class": "ZombieType",
                "package": "net.tridentsdk.meta.entity.living.monster"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.ZombieTypeTest.testData(net.tridentsdk.base.ZombieTypeTest)",
                    "net.tridentsdk.base.ZombieTypeTest.testError(net.tridentsdk.base.ZombieTypeTest)",
                    "net.tridentsdk.base.ZombieTypeTest.testTypes(net.tridentsdk.base.ZombieTypeTest)",
                    "net.tridentsdk.base.ZombieTypeTest.testIndex(net.tridentsdk.base.ZombieTypeTest)",
                    "net.tridentsdk.base.VillagerProfessionTest.testZombies(net.tridentsdk.base.VillagerProfessionTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.ZombieTypeTest.testData(net.tridentsdk.base.ZombieTypeTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "get",
                "description": "(Ljava/lang/Object;)Lnet/tridentsdk/meta/nbt/Tag$Type;",
                "class": "Tag$Type$13",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": false,
            "status": "NO_COVERAGE",
            "mutator": "null",
            "method": {
                "name": "newListOfType",
                "description": "()Lnet/tridentsdk/meta/nbt/Tag$List;",
                "class": "Tag$Type$1",
                "package": "net.tridentsdk.meta.nbt"
            },
            "tests": {
                "run": 0,
                "ordered": [],
                "killing": [],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/meta/entity/living/animal/HorseMarkings;",
                "class": "HorseMarkings",
                "package": "net.tridentsdk.meta.entity.living.animal"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.base.HorseMarkingsTest.testData(net.tridentsdk.base.HorseMarkingsTest)",
                    "net.tridentsdk.base.HorseMarkingsTest.testError(net.tridentsdk.base.HorseMarkingsTest)",
                    "net.tridentsdk.base.HorseMarkingsTest.testIndex(net.tridentsdk.base.HorseMarkingsTest)",
                    "net.tridentsdk.base.HorseMarkingsTest.testMarkings(net.tridentsdk.base.HorseMarkingsTest)"
                ],
                "killing": [
                    "net.tridentsdk.base.HorseMarkingsTest.testData(net.tridentsdk.base.HorseMarkingsTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "newInventory",
                "description": "(Lnet/tridentsdk/inventory/InventoryType;I)Lnet/tridentsdk/inventory/Inventory;",
                "class": "Inventory",
                "package": "net.tridentsdk.inventory"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.inventory.InventoryTest.newInventory(net.tridentsdk.inventory.InventoryTest)"
                ],
                "killing": [
                    "net.tridentsdk.inventory.InventoryTest.newInventory(net.tridentsdk.inventory.InventoryTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "of",
                "description": "(I)Lnet/tridentsdk/ui/bossbar/BossBarDivision;",
                "class": "BossBarDivision",
                "package": "net.tridentsdk.ui.bossbar"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ui.bossbar.BossBarDivisionTest.testError(net.tridentsdk.ui.bossbar.BossBarDivisionTest)",
                    "net.tridentsdk.ui.bossbar.BossBarDivisionTest.testIDs(net.tridentsdk.ui.bossbar.BossBarDivisionTest)",
                    "net.tridentsdk.ui.bossbar.BossBarDivisionTest.testIndex(net.tridentsdk.ui.bossbar.BossBarDivisionTest)",
                    "net.tridentsdk.ui.bossbar.BossBarDivisionTest.testDivisions(net.tridentsdk.ui.bossbar.BossBarDivisionTest)"
                ],
                "killing": [
                    "net.tridentsdk.ui.bossbar.BossBarDivisionTest.testError(net.tridentsdk.ui.bossbar.BossBarDivisionTest)"
                ],
                "succeeding": []
            }
        },
        {
            "detected": true,
            "status": "KILLED",
            "mutator": "null",
            "method": {
                "name": "getInstance",
                "description": "()Lnet/tridentsdk/Server;",
                "class": "Server",
                "package": "net.tridentsdk"
            },
            "tests": {
                "run": 1,
                "ordered": [
                    "net.tridentsdk.ServerTest.testGetInstance(net.tridentsdk.ServerTest)"
                ],
                "killing": [
                    "net.tridentsdk.ServerTest.testGetInstance(net.tridentsdk.ServerTest)"
                ],
                "succeeding": []
            }
        }
    ],
    "time": 36883
}