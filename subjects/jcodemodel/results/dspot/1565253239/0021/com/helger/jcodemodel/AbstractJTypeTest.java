package com.helger.jcodemodel;


import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.annotation.Nonnull;
import org.junit.After;
import org.junit.Assert;
import org.junit.Test;


public final class AbstractJTypeTest {
    private static final class AssignmentTypes {
        private final AbstractJClass m_aVariable;

        private final AbstractJClass m_aValue;

        public AssignmentTypes(final AbstractJClass aVariable, final AbstractJClass aValue) {
            m_aVariable = aVariable;
            m_aValue = aValue;
        }
    }

    private List<AbstractJClass> freshTypes = new ArrayList<>();

    private List<AbstractJTypeTest.AssignmentTypes> freshAssignableTypes = new ArrayList<>();

    @Nonnull
    private void _registerType(final AbstractJClass type) {
        freshTypes.add(type);
    }

    @Nonnull
    private List<AbstractJClass> _refreshTypes() {
        final List<AbstractJClass> result = freshTypes;
        freshTypes = new ArrayList<>();
        return result;
    }

    @Nonnull
    private List<AbstractJTypeTest.AssignmentTypes> _refreshAssignableTypes() {
        final List<AbstractJTypeTest.AssignmentTypes> result = freshAssignableTypes;
        freshAssignableTypes = new ArrayList<>();
        return result;
    }

    private void _assertIsAssignableInTopLevelPositionOnly(final AbstractJClass variable, final AbstractJClass value) {
        final boolean result = variable.isAssignableFrom(value);
        Assert.assertTrue(((("Expecting " + variable) + " to be assignable from ") + value), result);
    }

    private void _assertIsAssignable(final AbstractJClass variable, final AbstractJClass value) {
        freshAssignableTypes.add(new AbstractJTypeTest.AssignmentTypes(variable, value));
        _assertIsAssignableInTopLevelPositionOnly(variable, value);
    }

    private void _assertIsNotAssignable(final AbstractJClass variable, final AbstractJClass value) {
        final boolean result = variable.isAssignableFrom(value);
        Assert.assertFalse(((("Expecting " + variable) + " not to be assignable from ") + value), result);
    }

    @After
    public void cleanup() {
        _refreshTypes();
        _refreshAssignableTypes();
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isPrimitive());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isError());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg118() throws Exception {
        AbstractJClass[] __DSPOT_aClazz_39 = new AbstractJClass[]{  };
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__11 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__12 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__14 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__15 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__16 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__18 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__19 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__21 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__23 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__25 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__26 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__28 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__30 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__32 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__34 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__36 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__38 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__39 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__41 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__43 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__45 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__48 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__49 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg118__53 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isPrimitive());
        AbstractJClass o_testIsAssignableFromSmoke_mg118__56 = _List.narrow(__DSPOT_aClazz_39);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).isArray());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__56)).isPrimitive());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__16)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__19)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__21)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__23)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__26)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__28)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__30)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__32)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__34)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__36)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__39)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__41)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__43)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__45)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__49)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg118__53)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg107() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isPrimitive());
        AbstractJType o_testIsAssignableFromSmoke_mg107__55 = _Integer.unboxify();
        Assert.assertTrue(((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).isPrimitive());
        Assert.assertFalse(((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JPrimitiveType(int)", ((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).toString());
        Assert.assertFalse(((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).isArray());
        Assert.assertFalse(((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).isError());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg84_failAssert0() throws Exception {
        try {
            String __DSPOT_sField_27 = "ND7C-6y}W`_*s>).BmtV";
            final JCodeModel codeModel = new JCodeModel();
            final AbstractJClass _Object = codeModel.ref(Object.class);
            final AbstractJClass _Integer = codeModel.ref(Integer.class);
            final AbstractJClass _List = codeModel.ref(List.class);
            _List.narrow(_Integer);
            _List.narrow(_Integer);
            _List.narrow(_Object);
            _List.narrow(_Integer);
            _List.narrow(_Integer);
            _List.narrow(_Object);
            _List.narrow(_Object.wildcardExtends());
            _List.narrow(_Integer);
            _List.narrow(_Object.wildcardExtends());
            _List.narrow(_Integer.wildcardExtends());
            _List.narrow(_Integer.wildcardSuper());
            _List.narrow(_Object);
            _List.narrow(_Integer.wildcardSuper());
            _List.narrow(_Object.wildcardSuper());
            _List.narrow(_Integer.wildcardSuper());
            _List.narrow(_Integer.wildcardExtends());
            _List.narrow(_Integer.wildcardExtends());
            _List.narrow(_Integer.wildcardSuper());
            _List.narrow(_List);
            _List.narrow(_List.narrow(_Integer));
            _List.narrow(_List.wildcardExtends());
            _List.narrow(_List.narrow(_Integer));
            _List.narrow(_List.narrow(_Object).wildcardExtends());
            _List.narrow(_List);
            _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
            _List.narrow(_List.narrow(_List.wildcardSuper()));
            _Object.staticRef(__DSPOT_sField_27);
            org.junit.Assert.fail("testIsAssignableFromSmoke_mg84 should have thrown IllegalArgumentException");
        } catch (IllegalArgumentException expected) {
            Assert.assertEquals("The expression must be true but it is not: Field name contains \'.\': ND7C-6y}W`_*s>).BmtV", expected.getMessage());
        }
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg61() throws Exception {
        String __DSPOT_sMessage_14 = "#Ahw*&z*$G`c:wkJ!][,";
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__11 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__12 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__14 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__15 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__16 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__18 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__19 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__21 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__23 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__25 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__26 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__28 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__30 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__32 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__34 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__36 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__38 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__39 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__41 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__43 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__45 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__48 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__49 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg61__53 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isPrimitive());
        JErrorClass o_testIsAssignableFromSmoke_mg61__56 = codeModel.errorClass(__DSPOT_sMessage_14);
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).isInterface());
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).isAbstract());
        Assert.assertEquals("#Ahw*&z*$G`c:wkJ!][,", ((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).getMessage());
        Assert.assertTrue(((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).isError());
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).isParameterized());
        Assert.assertNull(((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((Collection) (((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).isReference());
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).isArray());
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg61__56)).isPrimitive());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__16)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__19)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__21)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__23)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__26)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__28)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__30)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__32)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__34)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__36)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__39)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__41)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__43)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__45)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__49)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg61__53)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg62() throws Exception {
        String __DSPOT_sName_16 = "xk?Yw`yc.L`HJ*J8r}4@";
        String __DSPOT_sMessage_15 = "J^uy}s#6CE3#^t lGvSz";
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__11 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__13 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__14 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__15 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__16 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__17 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__19 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__20 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__22 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__24 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__26 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__27 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__29 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__31 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__35 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__37 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__39 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__40 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__42 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__44 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__46 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__49 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__50 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg62__54 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isPrimitive());
        JErrorClass o_testIsAssignableFromSmoke_mg62__57 = codeModel.errorClass(__DSPOT_sMessage_15, __DSPOT_sName_16);
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).isInterface());
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).isAbstract());
        Assert.assertEquals("J^uy}s#6CE3#^t lGvSz", ((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).getMessage());
        Assert.assertTrue(((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).isError());
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).isParameterized());
        Assert.assertNull(((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((Collection) (((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).isReference());
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).isArray());
        Assert.assertFalse(((JErrorClass) (o_testIsAssignableFromSmoke_mg62__57)).isPrimitive());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__16)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__19)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__26)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__39)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__46)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__49)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__50)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg62__54)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg52() throws Exception {
        String __DSPOT_sFullyQualifiedClassName_3 = "2[|+mr6#-VtX(r!Fs2l>";
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__11 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__12 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__14 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__15 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__16 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__18 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__19 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__21 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__23 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__25 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__26 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__28 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__30 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__32 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__34 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__36 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__38 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__39 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__41 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__43 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__45 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__48 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__49 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg52__53 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isPrimitive());
        JDefinedClass o_testIsAssignableFromSmoke_mg52__56 = codeModel._getClass(__DSPOT_sFullyQualifiedClassName_3);
        Assert.assertNull(o_testIsAssignableFromSmoke_mg52__56);
        Assert.assertFalse(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__16)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__19)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__21)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__23)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__26)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__28)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__30)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__32)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__34)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__36)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__39)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__41)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__43)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__45)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__49)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg52__53)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg100() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg100__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isPrimitive());
        AbstractJClass o_testIsAssignableFromSmoke_mg100__55 = _Integer.narrowAny();
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).getTypeParameters())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.lang.Integer<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__55)).isPrimitive());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg100__52)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg90() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg90__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isPrimitive());
        JArrayClass o_testIsAssignableFromSmoke_mg90__55 = _Integer.array();
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).isInterface());
        Assert.assertTrue(((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).isArray());
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).isAbstract());
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).isParameterized());
        Assert.assertNull(((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JArrayClass(java.lang.Integer[])", ((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).toString());
        Assert.assertTrue(((Collection) (((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).isReference());
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).isPrimitive());
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg90__55)).isError());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg90__52)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg58() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg58__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isPrimitive());
        boolean o_testIsAssignableFromSmoke_mg58__55 = codeModel.buildsErrorTypeRefs();
        Assert.assertFalse(o_testIsAssignableFromSmoke_mg58__55);
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg58__52)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg59() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg59__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isPrimitive());
        int o_testIsAssignableFromSmoke_mg59__55 = codeModel.countArtifacts();
        Assert.assertEquals(0, ((int) (o_testIsAssignableFromSmoke_mg59__55)));
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg59__52)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg86() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg86__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isPrimitive());
        AbstractJType o_testIsAssignableFromSmoke_mg86__55 = _Object.unboxify();
        Assert.assertFalse(((JReferencedClass) (o_testIsAssignableFromSmoke_mg86__55)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (o_testIsAssignableFromSmoke_mg86__55)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (o_testIsAssignableFromSmoke_mg86__55)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (o_testIsAssignableFromSmoke_mg86__55)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (o_testIsAssignableFromSmoke_mg86__55)).isReference());
        Assert.assertFalse(((JReferencedClass) (o_testIsAssignableFromSmoke_mg86__55)).isArray());
        Assert.assertFalse(((JReferencedClass) (o_testIsAssignableFromSmoke_mg86__55)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (o_testIsAssignableFromSmoke_mg86__55)).isError());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg86__52)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg65() throws Exception {
        String __DSPOT_sFullyQualifiedClassName_18 = "u)p]QM-k,I]-r8//GGUV";
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__11 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__12 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__14 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__15 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__16 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__18 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__19 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__21 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__23 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__25 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__26 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__28 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__30 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__32 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__34 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__36 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__38 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__39 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__41 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__43 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__45 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__48 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__49 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__53 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isPrimitive());
        AbstractJClass o_testIsAssignableFromSmoke_mg65__56 = codeModel.ref(__DSPOT_sFullyQualifiedClassName_18);
        Assert.assertEquals(-1464434245, ((int) (((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).hashCode())));
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isAbstract());
        Assert.assertNull(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).getOuter());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isAnnotationTypeDeclaration());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isAnonymous());
        Assert.assertTrue(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isClass());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isInterface());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isPackage());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isParameterized());
        Assert.assertNull(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((Collection) (((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isReference());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isArray());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isPrimitive());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isError());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg77() throws Exception {
        Class<?>[] __DSPOT_aClazzes_24 = new Class<?>[]{  };
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__11 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__12 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__14 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__15 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__16 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__18 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__19 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__21 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__23 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__25 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__26 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__28 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__30 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__32 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__34 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__36 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__38 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__39 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__41 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__43 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__45 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__48 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__49 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg77__53 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isPrimitive());
        AbstractJClass o_testIsAssignableFromSmoke_mg77__56 = _Object.narrow(__DSPOT_aClazzes_24);
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).isArray());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).getTypeParameters())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.lang.Object<>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__56)).isPrimitive());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__16)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__19)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__21)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__23)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__26)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__28)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__30)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__32)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__34)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__36)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__39)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__41)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__43)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__45)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__49)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg77__53)).isPrimitive());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg66() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isPrimitive());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isPrimitive());
        JPackage o_testIsAssignableFromSmoke_mg66__55 = codeModel.rootPackage();
        Assert.assertTrue(((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).isUnnamed());
        Assert.assertFalse(((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).isClass());
        Assert.assertTrue(((Collection) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getAllResourceFiles())).isEmpty());
        Assert.assertTrue(((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).isUnnamed());
        Assert.assertFalse(((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).isClass());
        Assert.assertTrue(((Collection) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getAllResourceFiles())).isEmpty());
        Assert.assertTrue(((JPackage) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getPackage())).isUnnamed());
        Assert.assertFalse(((JPackage) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getPackage())).isClass());
        Assert.assertTrue(((Collection) (((JPackage) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getPackage())).getAllResourceFiles())).isEmpty());
        Assert.assertTrue(((JPackage) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getPackage())).isPackage());
        Assert.assertTrue(((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).isPackage());
        Assert.assertTrue(((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).isPackage());
        Assert.assertFalse(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isError());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isParameterized());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getAllInnerClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).toString());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isReference());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isPrimitive());
    }
}

