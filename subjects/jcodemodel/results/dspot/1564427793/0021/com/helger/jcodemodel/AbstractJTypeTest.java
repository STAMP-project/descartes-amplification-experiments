package com.helger.jcodemodel;


import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.annotation.Nonnull;
import org.junit.After;
import org.junit.Assert;
import org.junit.Test;


public final class AbstractJTypeTest {
    private static final class AssignmentTypes {
        private final AbstractJClass m_aVariable;

        private final AbstractJClass m_aValue;

        public AssignmentTypes(final AbstractJClass aVariable, final AbstractJClass aValue) {
            m_aVariable = aVariable;
            m_aValue = aValue;
        }
    }

    private List<AbstractJClass> freshTypes = new ArrayList<>();

    private List<AbstractJTypeTest.AssignmentTypes> freshAssignableTypes = new ArrayList<>();

    @Nonnull
    private void _registerType(final AbstractJClass type) {
        freshTypes.add(type);
    }

    @Nonnull
    private List<AbstractJClass> _refreshTypes() {
        final List<AbstractJClass> result = freshTypes;
        freshTypes = new ArrayList<>();
        return result;
    }

    @Nonnull
    private List<AbstractJTypeTest.AssignmentTypes> _refreshAssignableTypes() {
        final List<AbstractJTypeTest.AssignmentTypes> result = freshAssignableTypes;
        freshAssignableTypes = new ArrayList<>();
        return result;
    }

    private void _assertIsAssignableInTopLevelPositionOnly(final AbstractJClass variable, final AbstractJClass value) {
        final boolean result = variable.isAssignableFrom(value);
        Assert.assertTrue(((("Expecting " + variable) + " to be assignable from ") + value), result);
    }

    private void _assertIsAssignable(final AbstractJClass variable, final AbstractJClass value) {
        freshAssignableTypes.add(new AbstractJTypeTest.AssignmentTypes(variable, value));
        _assertIsAssignableInTopLevelPositionOnly(variable, value);
    }

    private void _assertIsNotAssignable(final AbstractJClass variable, final AbstractJClass value) {
        final boolean result = variable.isAssignableFrom(value);
        Assert.assertFalse(((("Expecting " + variable) + " not to be assignable from ") + value), result);
    }

    @After
    public void cleanup() {
        _refreshTypes();
        _refreshAssignableTypes();
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__52)).isReference());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__9)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__10)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__11)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__12)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__13)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__14)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__15)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__17)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__18)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__20)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__22)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__24)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__25)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__27)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__29)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__31)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__33)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__35)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__37)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__38)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__40)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__42)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__44)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__47)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getPrimitiveType());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isParameterized());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke__48)).isReference());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg111() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg111__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isReference());
        JArrayClass o_testIsAssignableFromSmoke_mg111__55 = _List.array();
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).isInterface());
        Assert.assertTrue(((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).isArray());
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).isAbstract());
        Assert.assertEquals("com.helger.jcodemodel.JArrayClass(java.util.List[])", ((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).toString());
        Assert.assertTrue(((Collection) (((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).getTypeParameters())).isEmpty());
        Assert.assertNull(((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).isParameterized());
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).isPrimitive());
        Assert.assertFalse(((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).isError());
        Assert.assertTrue(((JArrayClass) (o_testIsAssignableFromSmoke_mg111__55)).isReference());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__9)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__10)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__11)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__12)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__13)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__14)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__15)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__17)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__18)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__20)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__22)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__24)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__25)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__27)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__29)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__31)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__33)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__35)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__37)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__38)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__40)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__42)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__44)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__47)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__48)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg111__52)).isReference());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg80() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg80__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isReference());
        AbstractJClass o_testIsAssignableFromSmoke_mg80__55 = _Object.narrowEmpty();
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).isArray());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).getTypeParameters())).isEmpty());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.lang.Object<>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__55)).isReference());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__9)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__10)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__11)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__12)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__13)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__14)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__15)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__17)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__18)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__20)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__22)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__24)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__25)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__27)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__29)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__31)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__33)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__35)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__37)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__38)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__40)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__42)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__44)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__47)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__48)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg80__52)).isReference());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg107() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg107__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isReference());
        AbstractJType o_testIsAssignableFromSmoke_mg107__55 = _Integer.unboxify();
        Assert.assertTrue(((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).isPrimitive());
        Assert.assertEquals("com.helger.jcodemodel.JPrimitiveType(int)", ((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).toString());
        Assert.assertFalse(((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).isArray());
        Assert.assertFalse(((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).isError());
        Assert.assertFalse(((JPrimitiveType) (o_testIsAssignableFromSmoke_mg107__55)).isReference());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__9)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__10)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__11)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__12)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__13)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__14)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__15)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__17)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__18)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__20)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__22)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__24)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__25)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__27)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__29)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__31)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__33)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__35)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__37)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__38)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__40)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__42)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__44)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__47)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__48)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg107__52)).isReference());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg84_failAssert0() throws Exception {
        try {
            String __DSPOT_sField_27 = "ND7C-6y}W`_*s>).BmtV";
            final JCodeModel codeModel = new JCodeModel();
            final AbstractJClass _Object = codeModel.ref(Object.class);
            final AbstractJClass _Integer = codeModel.ref(Integer.class);
            final AbstractJClass _List = codeModel.ref(List.class);
            _List.narrow(_Integer);
            _List.narrow(_Integer);
            _List.narrow(_Object);
            _List.narrow(_Integer);
            _List.narrow(_Integer);
            _List.narrow(_Object);
            _List.narrow(_Object.wildcardExtends());
            _List.narrow(_Integer);
            _List.narrow(_Object.wildcardExtends());
            _List.narrow(_Integer.wildcardExtends());
            _List.narrow(_Integer.wildcardSuper());
            _List.narrow(_Object);
            _List.narrow(_Integer.wildcardSuper());
            _List.narrow(_Object.wildcardSuper());
            _List.narrow(_Integer.wildcardSuper());
            _List.narrow(_Integer.wildcardExtends());
            _List.narrow(_Integer.wildcardExtends());
            _List.narrow(_Integer.wildcardSuper());
            _List.narrow(_List);
            _List.narrow(_List.narrow(_Integer));
            _List.narrow(_List.wildcardExtends());
            _List.narrow(_List.narrow(_Integer));
            _List.narrow(_List.narrow(_Object).wildcardExtends());
            _List.narrow(_List);
            _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
            _List.narrow(_List.narrow(_List.wildcardSuper()));
            _Object.staticRef(__DSPOT_sField_27);
            org.junit.Assert.fail("testIsAssignableFromSmoke_mg84 should have thrown IllegalArgumentException");
        } catch (IllegalArgumentException expected) {
            Assert.assertEquals("The expression must be true but it is not: Field name contains \'.\': ND7C-6y}W`_*s>).BmtV", expected.getMessage());
        }
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg65() throws Exception {
        String __DSPOT_sFullyQualifiedClassName_18 = "u)p]QM-k,I]-r8//GGUV";
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__11 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__12 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__14 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__15 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__16 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__18 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__19 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__21 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__23 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__25 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__26 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__28 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__30 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__32 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__34 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__36 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__38 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__39 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__41 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__43 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__45 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__48 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__49 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg65__53 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isReference());
        AbstractJClass o_testIsAssignableFromSmoke_mg65__56 = codeModel.ref(__DSPOT_sFullyQualifiedClassName_18);
        Assert.assertEquals(-1464434245, ((int) (((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).hashCode())));
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isAbstract());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isInterface());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isPackage());
        Assert.assertNull(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).getOuter());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isAnonymous());
        Assert.assertTrue(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isClass());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isAnnotationTypeDeclaration());
        Assert.assertTrue(((Collection) (((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).getTypeParameters())).isEmpty());
        Assert.assertNull(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isParameterized());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isArray());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isPrimitive());
        Assert.assertFalse(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isError());
        Assert.assertTrue(((JDirectClass) (o_testIsAssignableFromSmoke_mg65__56)).isReference());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__10)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__11)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__12)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__13)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__14)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__15)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__16)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__18)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__19)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__21)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__23)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__25)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__26)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__28)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__30)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__32)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__34)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__36)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__38)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__39)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__41)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__43)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__45)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__48)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__49)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg65__53)).isReference());
    }

    @Test(timeout = 10000)
    public void testIsAssignableFromSmoke_mg66() throws Exception {
        final JCodeModel codeModel = new JCodeModel();
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        final AbstractJClass _Object = codeModel.ref(Object.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        final AbstractJClass _Integer = codeModel.ref(Integer.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        final AbstractJClass _List = codeModel.ref(List.class);
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__9 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__10 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__11 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__12 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__13 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__14 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__15 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__17 = _List.narrow(_Integer);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__18 = _List.narrow(_Object.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__20 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__22 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__24 = _List.narrow(_Object);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__25 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__27 = _List.narrow(_Object.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__29 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__31 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__33 = _List.narrow(_Integer.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__35 = _List.narrow(_Integer.wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__37 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__38 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__40 = _List.narrow(_List.wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__42 = _List.narrow(_List.narrow(_Integer));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__44 = _List.narrow(_List.narrow(_Object).wildcardExtends());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__47 = _List.narrow(_List);
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__48 = _List.narrow(_List.narrow(_List.narrow(_List)).wildcardSuper());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isReference());
        JNarrowedClass o_testIsAssignableFromSmoke_mg66__52 = _List.narrow(_List.narrow(_List.wildcardSuper()));
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isReference());
        JPackage o_testIsAssignableFromSmoke_mg66__55 = codeModel.rootPackage();
        Assert.assertTrue(((JPackage) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getPackage())).isPackage());
        Assert.assertFalse(((JPackage) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getPackage())).isClass());
        Assert.assertTrue(((JPackage) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getPackage())).isUnnamed());
        Assert.assertTrue(((Collection) (((JPackage) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getPackage())).getAllResourceFiles())).isEmpty());
        Assert.assertTrue(((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).isPackage());
        Assert.assertFalse(((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).isClass());
        Assert.assertTrue(((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).isUnnamed());
        Assert.assertTrue(((Collection) (((JPackage) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getPackage())).getAllResourceFiles())).isEmpty());
        Assert.assertTrue(((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).isPackage());
        Assert.assertFalse(((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).isClass());
        Assert.assertTrue(((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).isUnnamed());
        Assert.assertTrue(((Collection) (((JPackage) (o_testIsAssignableFromSmoke_mg66__55)).getAllResourceFiles())).isEmpty());
        Assert.assertFalse(((Collection) (((JCodeModel) (codeModel)).getAllPackages())).isEmpty());
        Assert.assertNull(((JCodeModel) (codeModel)).getBuildingCharset());
        Assert.assertEquals("\n", ((JCodeModel) (codeModel)).getBuildingNewLine());
        Assert.assertTrue(((Collection) (((JCodeModel) (codeModel)).getAllDontImportClasses())).isEmpty());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Object)", ((JReferencedClass) (_Object)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Object)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Object)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Object)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Object)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Object)).isError());
        Assert.assertTrue(((JReferencedClass) (_Object)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.lang.Integer)", ((JReferencedClass) (_Integer)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_Integer)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isArray());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_Integer)).isError());
        Assert.assertTrue(((JReferencedClass) (_Integer)).isReference());
        Assert.assertEquals("com.helger.jcodemodel.JReferencedClass(java.util.List)", ((JReferencedClass) (_List)).toString());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((Collection) (((JReferencedClass) (_List)).getAllInnerClasses())).isEmpty());
        Assert.assertFalse(((JReferencedClass) (_List)).isParameterized());
        Assert.assertFalse(((JReferencedClass) (_List)).isArray());
        Assert.assertFalse(((JReferencedClass) (_List)).isPrimitive());
        Assert.assertFalse(((JReferencedClass) (_List)).isError());
        Assert.assertTrue(((JReferencedClass) (_List)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__9)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__10)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__11)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__12)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__13)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__14)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__15)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__17)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__18)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__20)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__22)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__24)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__25)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Object>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__27)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__29)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__31)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__33)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.lang.Integer>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__35)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__37)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__38)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__40)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<java.lang.Integer>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__42)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? extends java.util.List<java.lang.Object>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__44)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__47)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<? super java.util.List<java.util.List<java.util.List>>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__48)).isReference());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isInterface());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isArray());
        Assert.assertFalse(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getTypeParameters())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isAbstract());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isError());
        Assert.assertEquals("com.helger.jcodemodel.JNarrowedClass(java.util.List<java.util.List<? super java.util.List>>)", ((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).toString());
        Assert.assertNull(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getPrimitiveType());
        Assert.assertTrue(((Collection) (((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).getAllInnerClasses())).isEmpty());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isParameterized());
        Assert.assertFalse(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isPrimitive());
        Assert.assertTrue(((JNarrowedClass) (o_testIsAssignableFromSmoke_mg66__52)).isReference());
    }
}

