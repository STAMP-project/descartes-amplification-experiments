/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 00:04:02 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.helger.jcodemodel.EWildcardBoundMode;
import com.helger.jcodemodel.JArrayClass;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JNarrowedClass;
import com.helger.jcodemodel.JTypeVarClass;
import com.helger.jcodemodel.JTypeWildcard;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JArrayClass_ESTest extends JArrayClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JArrayClass jArrayClass0 = new JArrayClass(jCodeModel0, jCodeModel0.DOUBLE);
      JTypeVarClass jTypeVarClass0 = new JTypeVarClass(jArrayClass0);
      assertFalse(jTypeVarClass0.isParameterized());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      EWildcardBoundMode eWildcardBoundMode0 = EWildcardBoundMode.EXTENDS;
      JTypeWildcard jTypeWildcard0 = new JTypeWildcard(jCodeModel0.NULL, eWildcardBoundMode0);
      JArrayClass jArrayClass0 = new JArrayClass(jCodeModel0, jTypeWildcard0);
      JNarrowedClass jNarrowedClass0 = new JNarrowedClass(jArrayClass0, jArrayClass0);
      LinkedList<JTypeWildcard> linkedList0 = new LinkedList<JTypeWildcard>();
      JNarrowedClass jNarrowedClass1 = null;
      try {
        jNarrowedClass1 = new JNarrowedClass(jNarrowedClass0, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The expression must be false but it is not: aBasis may not be a narrowed class: com.helger.jcodemodel.JNarrowedClass(? extends null[]<? extends null[]>)
         //
         verifyException("com.helger.jcodemodel.util.JCValueEnforcer", e);
      }
  }
}
