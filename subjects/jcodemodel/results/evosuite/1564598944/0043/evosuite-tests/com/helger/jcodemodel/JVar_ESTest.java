/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 19:37:35 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import com.helger.jcodemodel.JAnonymousClass;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JEnumConstant;
import com.helger.jcodemodel.JErrorClass;
import com.helger.jcodemodel.JFieldVar;
import com.helger.jcodemodel.JMods;
import com.helger.jcodemodel.JReferencedClass;
import com.helger.jcodemodel.JStringLiteral;
import com.helger.jcodemodel.JVar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JVar_ESTest extends JVar_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JMods jMods0 = new JMods((-1345));
      JCodeModel jCodeModel0 = new JCodeModel();
      Class<Object> class0 = Object.class;
      JReferencedClass jReferencedClass0 = new JReferencedClass(jCodeModel0, class0);
      JEnumConstant jEnumConstant0 = new JEnumConstant(jReferencedClass0, "");
      JVar jVar0 = new JVar(jMods0, jReferencedClass0, "SCXj$m", jEnumConstant0);
      assertEquals("SCXj$m", jVar0.name());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JErrorClass jErrorClass0 = new JErrorClass(jCodeModel0, "NewType", "");
      JAnonymousClass jAnonymousClass0 = new JAnonymousClass(jErrorClass0);
      JMods jMods0 = new JMods((-2100));
      JStringLiteral jStringLiteral0 = new JStringLiteral("NewType");
      JFieldVar jFieldVar0 = new JFieldVar(jAnonymousClass0, jMods0, jCodeModel0.LONG, "NewType", jStringLiteral0);
      boolean boolean0 = jFieldVar0.isAnnotated();
      assertFalse(boolean0);
  }
}
