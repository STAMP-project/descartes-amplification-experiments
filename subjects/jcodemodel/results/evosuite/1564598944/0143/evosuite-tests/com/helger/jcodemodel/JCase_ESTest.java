/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 21:21:53 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.helger.jcodemodel.IJExpression;
import com.helger.jcodemodel.JAnonymousClass;
import com.helger.jcodemodel.JArrayClass;
import com.helger.jcodemodel.JCase;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JEnumConstant;
import com.helger.jcodemodel.JErrorClass;
import com.helger.jcodemodel.JErrorClassUsedException;
import com.helger.jcodemodel.JFieldRef;
import com.helger.jcodemodel.JLambda;
import com.helger.jcodemodel.JLambdaMethodRef;
import com.helger.jcodemodel.JNarrowedClass;
import com.helger.jcodemodel.JOpTernary;
import com.helger.jcodemodel.JOpUnary;
import com.helger.jcodemodel.JTypeVar;
import com.helger.jcodemodel.SourcePrintWriter;
import com.helger.jcodemodel.writer.JFormatter;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JCase_ESTest extends JCase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JTypeVar jTypeVar0 = new JTypeVar(jCodeModel0, ":/g");
      JNarrowedClass jNarrowedClass0 = new JNarrowedClass(jTypeVar0, jTypeVar0);
      JAnonymousClass jAnonymousClass0 = new JAnonymousClass(jNarrowedClass0);
      JFieldRef jFieldRef0 = new JFieldRef(jAnonymousClass0, "");
      JCase jCase0 = new JCase(jFieldRef0);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "54_e^D#v2%@e-(");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "54_e^D#v2%@e-(");
      // Undeclared exception!
      try { 
        jCase0.state(jFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.helger.jcodemodel.JDefinedClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JLambda jLambda0 = new JLambda();
      JOpTernary jOpTernary0 = new JOpTernary(jLambda0, ": ", jLambda0, "", jLambda0);
      JCase jCase0 = new JCase(jOpTernary0);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "QkaS}'/}6LW");
      // Undeclared exception!
      try { 
        jCase0.state(jFormatter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Lambda expression is empty!
         //
         verifyException("com.helger.jcodemodel.JLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JErrorClass jErrorClass0 = new JErrorClass(jCodeModel0, "TUn0:6=");
      JArrayClass jArrayClass0 = new JArrayClass(jCodeModel0, jErrorClass0);
      JLambdaMethodRef jLambdaMethodRef0 = new JLambdaMethodRef(jArrayClass0);
      JOpUnary jOpUnary0 = new JOpUnary(jLambdaMethodRef0, "xCEXPWD");
      JCase jCase0 = new JCase(jOpUnary0);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "since");
      // Undeclared exception!
      try { 
        jCase0.state(jFormatter0);
        fail("Expecting exception: JErrorClassUsedException");
      
      } catch(JErrorClassUsedException e) {
         //
         // TUn0:6=
         //
         verifyException("com.helger.jcodemodel.JErrorClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JCase jCase0 = new JCase((IJExpression) null, true);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "nX3r");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "nX3r");
      jCase0.state(jFormatter0);
      assertEquals("nX3rdefault:nX3r", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JArrayClass jArrayClass0 = new JArrayClass(jCodeModel0, jCodeModel0.NULL);
      JEnumConstant jEnumConstant0 = new JEnumConstant(jArrayClass0, "");
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "");
      JCase jCase0 = new JCase(jEnumConstant0);
      jCase0.state(jFormatter0);
      assertEquals("case :", stringWriter0.toString());
  }
}
