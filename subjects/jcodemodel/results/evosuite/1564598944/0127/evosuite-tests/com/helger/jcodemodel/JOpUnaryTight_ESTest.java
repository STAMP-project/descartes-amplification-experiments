/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 21:04:57 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.helger.jcodemodel.JAnonymousClass;
import com.helger.jcodemodel.JAtomInt;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JEnumConstant;
import com.helger.jcodemodel.JLambda;
import com.helger.jcodemodel.JOpUnaryTight;
import com.helger.jcodemodel.JTypeVar;
import com.helger.jcodemodel.SourcePrintWriter;
import com.helger.jcodemodel.writer.JFormatter;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JOpUnaryTight_ESTest extends JOpUnaryTight_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JTypeVar jTypeVar0 = new JTypeVar(jCodeModel0, "78b!lna9QpkDr*VR=@");
      JAnonymousClass jAnonymousClass0 = new JAnonymousClass(jTypeVar0);
      JEnumConstant jEnumConstant0 = new JEnumConstant(jAnonymousClass0, "78b!lna9QpkDr*VR=@");
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight(jEnumConstant0, "78b!lna9QpkDr*VR=@");
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "78b!lna9QpkDr*VR=@");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "");
      // Undeclared exception!
      try { 
        jOpUnaryTight0.generate(jFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.helger.jcodemodel.JDefinedClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JLambda jLambda0 = new JLambda();
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight("", jLambda0);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "com.helger.jcodemodel.JOpUnaryTight");
      // Undeclared exception!
      try { 
        jOpUnaryTight0.generate(jFormatter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Lambda expression is empty!
         //
         verifyException("com.helger.jcodemodel.JLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JAtomInt jAtomInt0 = new JAtomInt(1148);
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight(jAtomInt0, "com.helger.jcodemodel.AbstractJAnnotationValue");
      StringWriter stringWriter0 = new StringWriter(1148);
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "*ar5a");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "com.helger.jcodemodel.AbstractJAnnotationValue");
      jOpUnaryTight0.generate(jFormatter0);
      assertEquals("1148 com.helger.jcodemodel.AbstractJAnnotationValue", stringWriter0.toString());
  }
}
