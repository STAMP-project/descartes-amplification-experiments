/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 29 22:52:50 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.helger.jcodemodel.EWildcardBoundMode;
import com.helger.jcodemodel.JAnonymousClass;
import com.helger.jcodemodel.JAtom;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JEnumConstant;
import com.helger.jcodemodel.JErrorClass;
import com.helger.jcodemodel.JErrorClassUsedException;
import com.helger.jcodemodel.JFieldRef;
import com.helger.jcodemodel.JForEach;
import com.helger.jcodemodel.JLambda;
import com.helger.jcodemodel.JNarrowedClass;
import com.helger.jcodemodel.JOpUnaryTight;
import com.helger.jcodemodel.JTypeWildcard;
import com.helger.jcodemodel.SourcePrintWriter;
import com.helger.jcodemodel.writer.JFormatter;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JForEach_ESTest extends JForEach_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JAnonymousClass jAnonymousClass0 = new JAnonymousClass(jCodeModel0.NULL);
      JEnumConstant jEnumConstant0 = new JEnumConstant(jAnonymousClass0, "pJ");
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight(jEnumConstant0, "");
      JForEach jForEach0 = new JForEach(jCodeModel0.LONG, "pJ", jOpUnaryTight0);
      StringWriter stringWriter0 = new StringWriter(128);
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "1Pwtq<~n<U%3m");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "VarName");
      // Undeclared exception!
      try { 
        jForEach0.state(jFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.helger.jcodemodel.JDefinedClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JLambda jLambda0 = new JLambda();
      JForEach jForEach0 = new JForEach(jCodeModel0.VOID, "VarName", jLambda0);
      StringWriter stringWriter0 = new StringWriter(125);
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "VarName");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "Collection");
      // Undeclared exception!
      try { 
        jForEach0.state(jFormatter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Lambda expression is empty!
         //
         verifyException("com.helger.jcodemodel.JLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JErrorClass jErrorClass0 = new JErrorClass(jCodeModel0, "*L@ncyOV");
      JNarrowedClass jNarrowedClass0 = new JNarrowedClass(jErrorClass0, jErrorClass0);
      EWildcardBoundMode eWildcardBoundMode0 = EWildcardBoundMode.SUPER;
      JTypeWildcard jTypeWildcard0 = new JTypeWildcard(jNarrowedClass0, eWildcardBoundMode0);
      JFieldRef jFieldRef0 = new JFieldRef(jCodeModel0.INT, "", false);
      JForEach jForEach0 = new JForEach(jTypeWildcard0, "XY$", jFieldRef0);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "XY$");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "*L@ncyOV");
      // Undeclared exception!
      try { 
        jForEach0.state(jFormatter0);
        fail("Expecting exception: JErrorClassUsedException");
      
      } catch(JErrorClassUsedException e) {
         //
         // *L@ncyOV
         //
         verifyException("com.helger.jcodemodel.JErrorClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JAtom jAtom0 = new JAtom("p");
      StringWriter stringWriter0 = new StringWriter();
      JForEach jForEach0 = new JForEach(jCodeModel0.SHORT, "p", jAtom0);
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "p");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "p");
      jForEach0.state(jFormatter0);
      assertEquals("for (short p: p);p", stringWriter0.toString());
  }
}
