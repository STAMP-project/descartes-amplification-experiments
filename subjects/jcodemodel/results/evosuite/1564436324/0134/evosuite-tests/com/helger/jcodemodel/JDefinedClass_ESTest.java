/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 30 00:11:48 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.helger.jcodemodel.AbstractJClass;
import com.helger.jcodemodel.EClassType;
import com.helger.jcodemodel.JAnonymousClass;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JDefinedClass;
import com.helger.jcodemodel.JDirectClass;
import com.helger.jcodemodel.JNarrowedClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JDefinedClass_ESTest extends JDefinedClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JDefinedClass jDefinedClass0 = new JDefinedClass(jCodeModel0, 11, "implements");
      JNarrowedClass jNarrowedClass0 = new JNarrowedClass(jDefinedClass0, jDefinedClass0);
      JNarrowedClass jNarrowedClass1 = null;
      try {
        jNarrowedClass1 = new JNarrowedClass(jNarrowedClass0, jDefinedClass0.EMPTY_ARRAY);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.helger.jcodemodel.JDefinedClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JDefinedClass jDefinedClass0 = new JDefinedClass(jCodeModel0, 2, (String) null);
      EClassType eClassType0 = EClassType.ANNOTATION_TYPE_DECL;
      JDefinedClass jDefinedClass1 = new JDefinedClass(jDefinedClass0, 2, (String) null, eClassType0);
      JDefinedClass jDefinedClass2 = jDefinedClass1._extends((AbstractJClass) jDefinedClass0);
      assertFalse(jDefinedClass2.isHidden());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JDefinedClass jDefinedClass0 = new JDefinedClass(jCodeModel0, 59, "Name");
      JDefinedClass jDefinedClass1 = jDefinedClass0._extends((AbstractJClass) jCodeModel0.NULL);
      assertFalse(jDefinedClass1.isHidden());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JDefinedClass jDefinedClass0 = new JDefinedClass(jCodeModel0, 0, "TyeNme");
      JDefinedClass jDefinedClass1 = new JDefinedClass(jCodeModel0, 0, "TyeNme");
      EClassType eClassType0 = EClassType.ENUM;
      JDirectClass jDirectClass0 = new JDirectClass(jCodeModel0, jDefinedClass0, eClassType0, "TyeNme");
      JDefinedClass jDefinedClass2 = jDefinedClass1._extends((AbstractJClass) jDirectClass0);
      assertFalse(jDefinedClass2.isHidden());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JDefinedClass jDefinedClass0 = new JDefinedClass(jCodeModel0, 0, "TyeNme");
      EClassType eClassType0 = EClassType.ENUM;
      JDirectClass jDirectClass0 = new JDirectClass(jCodeModel0, jDefinedClass0, eClassType0, "TyeNme");
      // Undeclared exception!
      try { 
        jDefinedClass0._extends((AbstractJClass) jDirectClass0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal class inheritance loop.  Outer class TyeNme may not subclass from inner class: TyeNme
         //
         verifyException("com.helger.jcodemodel.JDefinedClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      EClassType eClassType0 = EClassType.INTERFACE;
      JAnonymousClass jAnonymousClass0 = new JAnonymousClass(jCodeModel0.NULL);
      JDefinedClass jDefinedClass0 = new JDefinedClass(jAnonymousClass0, 2, "TypeName", eClassType0);
      // Undeclared exception!
      try { 
        jDefinedClass0._extends((AbstractJClass) jAnonymousClass0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unable to set the super class for an interface
         //
         verifyException("com.helger.jcodemodel.JDefinedClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      EClassType eClassType0 = EClassType.INTERFACE;
      JAnonymousClass jAnonymousClass0 = new JAnonymousClass(jCodeModel0.NULL);
      JDefinedClass jDefinedClass0 = new JDefinedClass(jAnonymousClass0, 2, "TypeName", eClassType0);
      JDefinedClass jDefinedClass1 = jDefinedClass0._extends((AbstractJClass) jDefinedClass0);
      assertFalse(jDefinedClass1.isHidden());
  }
}
