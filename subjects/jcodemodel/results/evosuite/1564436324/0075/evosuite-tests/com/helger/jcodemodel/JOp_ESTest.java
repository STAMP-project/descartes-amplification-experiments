/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 29 23:05:11 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import com.helger.jcodemodel.EWildcardBoundMode;
import com.helger.jcodemodel.JArrayClass;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JLambdaMethodRef;
import com.helger.jcodemodel.JOp;
import com.helger.jcodemodel.JOpBinary;
import com.helger.jcodemodel.JOpUnaryTight;
import com.helger.jcodemodel.JStringLiteral;
import com.helger.jcodemodel.JTypeWildcard;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JOp_ESTest extends JOp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JArrayClass jArrayClass0 = new JArrayClass(jCodeModel0, jCodeModel0.VOID);
      EWildcardBoundMode eWildcardBoundMode0 = EWildcardBoundMode.SUPER;
      JTypeWildcard jTypeWildcard0 = new JTypeWildcard(jArrayClass0, eWildcardBoundMode0);
      JLambdaMethodRef jLambdaMethodRef0 = new JLambdaMethodRef(jTypeWildcard0);
      JOpBinary jOpBinary0 = new JOpBinary(jLambdaMethodRef0, "", jCodeModel0.DOUBLE);
      boolean boolean0 = JOp.hasTopOp(jOpBinary0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JStringLiteral jStringLiteral0 = new JStringLiteral("#");
      boolean boolean0 = JOp.hasTopOp(jStringLiteral0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JStringLiteral jStringLiteral0 = new JStringLiteral("#");
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight(jStringLiteral0, "#");
      boolean boolean0 = JOp.hasTopOp(jOpUnaryTight0);
      assertTrue(boolean0);
  }
}
