/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 13:18:43 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import com.helger.jcodemodel.JAtomDouble;
import com.helger.jcodemodel.JLambda;
import com.helger.jcodemodel.JOp;
import com.helger.jcodemodel.JOpBinary;
import com.helger.jcodemodel.JOpUnaryTight;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JOp_ESTest extends JOp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JAtomDouble jAtomDouble0 = new JAtomDouble((-2410.505623982955));
      JOpBinary jOpBinary0 = new JOpBinary(jAtomDouble0, "java.lang.Double.NaN", jAtomDouble0);
      boolean boolean0 = JOp.hasTopOp(jOpBinary0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JLambda jLambda0 = new JLambda();
      boolean boolean0 = JOp.hasTopOp(jLambda0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JLambda jLambda0 = new JLambda();
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight("/jPS", jLambda0);
      boolean boolean0 = JOp.hasTopOp(jOpUnaryTight0);
      assertTrue(boolean0);
  }
}
