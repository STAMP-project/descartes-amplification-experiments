/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 13:06:47 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.helger.jcodemodel.JArrayClass;
import com.helger.jcodemodel.JAtomInt;
import com.helger.jcodemodel.JCast;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JDefinedClass;
import com.helger.jcodemodel.JErrorClass;
import com.helger.jcodemodel.JErrorClassUsedException;
import com.helger.jcodemodel.JForEach;
import com.helger.jcodemodel.JInvocation;
import com.helger.jcodemodel.JLambda;
import com.helger.jcodemodel.JNarrowedClass;
import com.helger.jcodemodel.JStringLiteral;
import com.helger.jcodemodel.JTypeVarClass;
import com.helger.jcodemodel.SourcePrintWriter;
import com.helger.jcodemodel.writer.JFormatter;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JForEach_ESTest extends JForEach_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JAtomInt jAtomInt0 = new JAtomInt(8);
      StringWriter stringWriter0 = new StringWriter(8);
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "IdenString");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "IdenString");
      JCodeModel jCodeModel0 = new JCodeModel();
      JDefinedClass jDefinedClass0 = new JDefinedClass(jCodeModel0, 0, "IdenString");
      JForEach jForEach0 = new JForEach(jDefinedClass0, "VarName", jAtomInt0);
      // Undeclared exception!
      try { 
        jForEach0.state(jFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.helger.jcodemodel.JDefinedClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JLambda jLambda0 = new JLambda();
      JCast jCast0 = new JCast(jCodeModel0.DOUBLE, jLambda0);
      JForEach jForEach0 = new JForEach(jCodeModel0.FLOAT, "VarName", jCast0);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "for (");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "for (");
      // Undeclared exception!
      try { 
        jForEach0.state(jFormatter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Lambda expression is empty!
         //
         verifyException("com.helger.jcodemodel.JLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JErrorClass jErrorClass0 = new JErrorClass(jCodeModel0, "'@-s9?>f", "Cr");
      JTypeVarClass jTypeVarClass0 = new JTypeVarClass(jErrorClass0);
      JNarrowedClass jNarrowedClass0 = new JNarrowedClass(jTypeVarClass0, jTypeVarClass0.EMPTY_ARRAY);
      JArrayClass jArrayClass0 = new JArrayClass(jCodeModel0, jErrorClass0);
      JInvocation jInvocation0 = new JInvocation(jArrayClass0);
      JCast jCast0 = new JCast(jCodeModel0.NULL, jInvocation0);
      JForEach jForEach0 = new JForEach(jNarrowedClass0, "Cr", jCast0);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, ".9uP~&~Igba'CeYhuh");
      // Undeclared exception!
      try { 
        jForEach0.state(jFormatter0);
        fail("Expecting exception: JErrorClassUsedException");
      
      } catch(JErrorClassUsedException e) {
         //
         // '@-s9?>f
         //
         verifyException("com.helger.jcodemodel.JErrorClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JStringLiteral jStringLiteral0 = new JStringLiteral("NIdSiCri");
      JForEach jForEach0 = new JForEach(jCodeModel0.CHAR, "NIdSiCri", jStringLiteral0);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "NIdSiCri");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "NIdSiCri");
      jForEach0.state(jFormatter0);
      assertEquals("for (char NIdSiCri: \"NIdSiCri\");NIdSiCri", stringWriter0.toString());
  }
}
