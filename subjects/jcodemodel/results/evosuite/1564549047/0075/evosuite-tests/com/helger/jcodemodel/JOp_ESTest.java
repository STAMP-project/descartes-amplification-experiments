/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 31 06:18:30 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import com.helger.jcodemodel.JAtomInt;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JErrorClass;
import com.helger.jcodemodel.JInvocation;
import com.helger.jcodemodel.JNarrowedClass;
import com.helger.jcodemodel.JOp;
import com.helger.jcodemodel.JOpBinary;
import com.helger.jcodemodel.JOpUnary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JOp_ESTest extends JOp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JAtomInt jAtomInt0 = new JAtomInt(1373);
      JOpBinary jOpBinary0 = new JOpBinary(jAtomInt0, "SuperClass", jAtomInt0);
      boolean boolean0 = JOp.hasTopOp(jOpBinary0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JErrorClass jErrorClass0 = new JErrorClass(jCodeModel0, "&");
      JNarrowedClass jNarrowedClass0 = new JNarrowedClass(jErrorClass0, jErrorClass0);
      JInvocation jInvocation0 = new JInvocation(jNarrowedClass0);
      boolean boolean0 = JOp.hasTopOp(jInvocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JErrorClass jErrorClass0 = new JErrorClass(jCodeModel0, "&");
      JNarrowedClass jNarrowedClass0 = new JNarrowedClass(jErrorClass0, jErrorClass0);
      JInvocation jInvocation0 = new JInvocation(jNarrowedClass0);
      JOpUnary jOpUnary0 = new JOpUnary("", jInvocation0);
      boolean boolean0 = JOp.hasTopOp(jOpUnary0);
      assertTrue(boolean0);
  }
}
