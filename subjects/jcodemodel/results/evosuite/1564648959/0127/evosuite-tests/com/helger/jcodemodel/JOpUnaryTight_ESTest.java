/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 01 10:58:54 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.helger.jcodemodel.JAnonymousClass;
import com.helger.jcodemodel.JArrayClass;
import com.helger.jcodemodel.JAtom;
import com.helger.jcodemodel.JCast;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JEnumConstantRef;
import com.helger.jcodemodel.JLambda;
import com.helger.jcodemodel.JNarrowedClass;
import com.helger.jcodemodel.JOpUnaryTight;
import com.helger.jcodemodel.JReferencedClass;
import com.helger.jcodemodel.SourcePrintWriter;
import com.helger.jcodemodel.writer.JFormatter;
import java.io.StringWriter;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JOpUnaryTight_ESTest extends JOpUnaryTight_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      Class<Object> class0 = Object.class;
      JReferencedClass jReferencedClass0 = new JReferencedClass(jCodeModel0, class0);
      JAnonymousClass jAnonymousClass0 = new JAnonymousClass(jReferencedClass0);
      JEnumConstantRef jEnumConstantRef0 = new JEnumConstantRef(jAnonymousClass0, "");
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight(jEnumConstantRef0, "");
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "");
      // Undeclared exception!
      try { 
        jOpUnaryTight0.generate(jFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.helger.jcodemodel.JDefinedClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JLambda jLambda0 = new JLambda();
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight(jLambda0, "TypeName");
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "TypeName");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "");
      // Undeclared exception!
      try { 
        jOpUnaryTight0.generate(jFormatter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Lambda expression is empty!
         //
         verifyException("com.helger.jcodemodel.JLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      LinkedList<JArrayClass> linkedList0 = new LinkedList<JArrayClass>();
      JNarrowedClass jNarrowedClass0 = new JNarrowedClass(jCodeModel0.NULL, linkedList0);
      JAtom jAtom0 = new JAtom("go7@O$F`A$_0'eCX");
      JCast jCast0 = new JCast(jNarrowedClass0, jAtom0);
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight("'ap;Lkm$Ds\"&", jCast0);
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "'ap;Lkm$Ds\"&");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "]`IGaH'|HCf^aI^Av");
      jOpUnaryTight0.generate(jFormatter0);
      assertEquals("'ap;Lkm$Ds\"&((null<> ) go7@O$F`A$_0'eCX)", stringWriter0.toString());
  }
}
