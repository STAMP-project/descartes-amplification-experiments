/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 22:30:54 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import com.helger.jcodemodel.JAnonymousClass;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JErrorClass;
import com.helger.jcodemodel.JFieldVar;
import com.helger.jcodemodel.JInvocation;
import com.helger.jcodemodel.JLambda;
import com.helger.jcodemodel.JMethod;
import com.helger.jcodemodel.JMods;
import com.helger.jcodemodel.JOpUnaryTight;
import com.helger.jcodemodel.JVar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JVar_ESTest extends JVar_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JMods jMods0 = new JMods((-1510));
      JCodeModel jCodeModel0 = new JCodeModel();
      JErrorClass jErrorClass0 = new JErrorClass(jCodeModel0, "o", "o");
      JLambda jLambda0 = new JLambda();
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight("", jLambda0);
      JVar jVar0 = new JVar(jMods0, jErrorClass0, "o", jOpUnaryTight0);
      assertEquals("o", jVar0.name());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JMods jMods0 = new JMods(19);
      JAnonymousClass jAnonymousClass0 = new JAnonymousClass(jCodeModel0.NULL);
      JMethod jMethod0 = new JMethod(19, jAnonymousClass0);
      JInvocation jInvocation0 = new JInvocation(jCodeModel0, jMods0, jMethod0);
      JFieldVar jFieldVar0 = new JFieldVar(jAnonymousClass0, jMods0, jCodeModel0.VOID, "l", jInvocation0);
      boolean boolean0 = jFieldVar0.isAnnotated();
      assertFalse(boolean0);
  }
}
