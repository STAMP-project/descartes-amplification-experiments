/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 30 17:28:17 GMT 2019
 */

package com.helger.jcodemodel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.helger.jcodemodel.JAnonymousClass;
import com.helger.jcodemodel.JAtom;
import com.helger.jcodemodel.JCodeModel;
import com.helger.jcodemodel.JErrorClass;
import com.helger.jcodemodel.JLambda;
import com.helger.jcodemodel.JLambdaMethodRef;
import com.helger.jcodemodel.JOpTernary;
import com.helger.jcodemodel.JOpUnary;
import com.helger.jcodemodel.JOpUnaryTight;
import com.helger.jcodemodel.SourcePrintWriter;
import com.helger.jcodemodel.writer.JFormatter;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JOpUnaryTight_ESTest extends JOpUnaryTight_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JLambda jLambda0 = new JLambda();
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight(jLambda0, "%%,qWhAc4mvDDS");
      StringWriter stringWriter0 = new StringWriter();
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "com.helger.jcodemodel.JOpUnaryTight");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "com.helger.jcodemodel.JOpUnaryTight");
      // Undeclared exception!
      try { 
        jOpUnaryTight0.generate(jFormatter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Lambda expression is empty!
         //
         verifyException("com.helger.jcodemodel.JLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JAtom jAtom0 = new JAtom(",6{-9");
      JOpUnary jOpUnary0 = new JOpUnary(",6{-9", jAtom0);
      JOpTernary jOpTernary0 = new JOpTernary(jOpUnary0, "/S^cN-F|JF'N", jOpUnary0, "The class '", jAtom0);
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight("catch (", jOpTernary0);
      StringWriter stringWriter0 = new StringWriter(502);
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "catch (");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "\"*,Td8)T");
      jOpUnaryTight0.generate(jFormatter0);
      assertEquals("catch (((,6{-9,6{-9)/S^cN-F|JF'N(,6{-9,6{-9) The class ',6{-9)", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JCodeModel jCodeModel0 = new JCodeModel();
      JErrorClass jErrorClass0 = new JErrorClass(jCodeModel0, "", "");
      JAnonymousClass jAnonymousClass0 = new JAnonymousClass(jErrorClass0);
      JLambdaMethodRef jLambdaMethodRef0 = new JLambdaMethodRef(jAnonymousClass0);
      JOpUnaryTight jOpUnaryTight0 = new JOpUnaryTight(jLambdaMethodRef0, "");
      StringWriter stringWriter0 = new StringWriter(4);
      SourcePrintWriter sourcePrintWriter0 = new SourcePrintWriter(stringWriter0, "");
      JFormatter jFormatter0 = new JFormatter(sourcePrintWriter0, "");
      // Undeclared exception!
      try { 
        jOpUnaryTight0.generate(jFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.helger.jcodemodel.JDefinedClass", e);
      }
  }
}
