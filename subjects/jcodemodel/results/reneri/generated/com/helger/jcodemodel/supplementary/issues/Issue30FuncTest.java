/**
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 1997-2010 Oracle and/or its affiliates. All rights reserved.
 * Portions Copyright 2013-2018 Philip Helger + contributors
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
 * or packager/legal/LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at packager/legal/LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */
package com.helger.jcodemodel.supplementary.issues;


/**
 * Test for https://github.com/phax/jcodemodel/issues/30
 *
 * @author Philip Helger
 */
public final class Issue30FuncTest {
    @org.junit.Test
    public void test() throws java.lang.Exception {
        final com.helger.jcodemodel.JCodeModel cm = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|0", com.helger.jcodemodel.JCodeModel.class, new com.helger.jcodemodel.JCodeModel());
        final com.helger.jcodemodel.JPackage aPkg1 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPackage>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|2", com.helger.jcodemodel.JPackage.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|1", com.helger.jcodemodel.JCodeModel.class, cm)._package("id.myapp"));
        final com.helger.jcodemodel.JDefinedClass aClass_R = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|4", com.helger.jcodemodel.JDefinedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPackage>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|3", com.helger.jcodemodel.JPackage.class, aPkg1)._class("R"));
        final com.helger.jcodemodel.JDefinedClass aClass_id = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|6", com.helger.jcodemodel.JDefinedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|5", com.helger.jcodemodel.JDefinedClass.class, aClass_R)._class(((com.helger.jcodemodel.JMod.PUBLIC) | (com.helger.jcodemodel.JMod.STATIC)), "id"));
        final com.helger.jcodemodel.JFieldVar aFieldItem = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldVar>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|11", com.helger.jcodemodel.JFieldVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|7", com.helger.jcodemodel.JDefinedClass.class, aClass_id).field((((com.helger.jcodemodel.JMod.PUBLIC) | (com.helger.jcodemodel.JMod.STATIC)) | (com.helger.jcodemodel.JMod.FINAL)), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|9", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|8", com.helger.jcodemodel.JCodeModel.class, cm).INT), "myItem", eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JAtomInt>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|10", com.helger.jcodemodel.JAtomInt.class, com.helger.jcodemodel.JExpr.lit(1))));
        final com.helger.jcodemodel.JDefinedClass aClass_menu = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|13", com.helger.jcodemodel.JDefinedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|12", com.helger.jcodemodel.JDefinedClass.class, aClass_R)._class(((com.helger.jcodemodel.JMod.PUBLIC) | (com.helger.jcodemodel.JMod.STATIC)), "menu"));
        final com.helger.jcodemodel.JFieldVar aFieldMenu = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldVar>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|18", com.helger.jcodemodel.JFieldVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|14", com.helger.jcodemodel.JDefinedClass.class, aClass_menu).field((((com.helger.jcodemodel.JMod.PUBLIC) | (com.helger.jcodemodel.JMod.STATIC)) | (com.helger.jcodemodel.JMod.FINAL)), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|16", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|15", com.helger.jcodemodel.JCodeModel.class, cm).INT), "myMenu", eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JAtomInt>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|17", com.helger.jcodemodel.JAtomInt.class, com.helger.jcodemodel.JExpr.lit(2))));
        final com.helger.jcodemodel.JPackage aPkg2 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPackage>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|20", com.helger.jcodemodel.JPackage.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|19", com.helger.jcodemodel.JCodeModel.class, cm)._package("demo"));
        final com.helger.jcodemodel.JDefinedClass aClassAct = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|22", com.helger.jcodemodel.JDefinedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPackage>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|21", com.helger.jcodemodel.JPackage.class, aPkg2)._class("HelloAndroidActivity_"));
        final com.helger.jcodemodel.JMethod aMethodCreate = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|26", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|23", com.helger.jcodemodel.JDefinedClass.class, aClassAct).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|25", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|24", com.helger.jcodemodel.JCodeModel.class, cm).BOOLEAN), "onCreateOptionsMenu"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|34", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|28", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|27", com.helger.jcodemodel.JMethod.class, aMethodCreate).body()).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|33", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|30", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldRef>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|29", com.helger.jcodemodel.JFieldRef.class, com.helger.jcodemodel.JExpr.ref("menuInflater")).invoke("inflate")).arg(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldRef>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|32", com.helger.jcodemodel.JFieldRef.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldVar>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|31", com.helger.jcodemodel.JFieldVar.class, aFieldMenu).fieldRef())))));
        final com.helger.jcodemodel.JMethod aMethodSelected = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|38", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|35", com.helger.jcodemodel.JDefinedClass.class, aClassAct).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|37", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|36", com.helger.jcodemodel.JCodeModel.class, cm).BOOLEAN), "onOptionsItemSelected"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JConditional>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|45", com.helger.jcodemodel.JConditional.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|40", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|39", com.helger.jcodemodel.JMethod.class, aMethodSelected).body())._if(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.IJExpression>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|44", com.helger.jcodemodel.IJExpression.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldRef>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|41", com.helger.jcodemodel.JFieldRef.class, com.helger.jcodemodel.JExpr.ref("itemId_")).eq(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldRef>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|43", com.helger.jcodemodel.JFieldRef.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldVar>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|42", com.helger.jcodemodel.JFieldVar.class, aFieldItem).fieldRef())))));
        com.helger.jcodemodel.util.CodeModelTestsHelper.parseCodeModel(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|test()|46", com.helger.jcodemodel.JCodeModel.class, cm));
    }

    @org.junit.Test
    public void testRegression1() throws java.lang.Exception {
        final com.helger.jcodemodel.JCodeModel cm = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|0", com.helger.jcodemodel.JCodeModel.class, new com.helger.jcodemodel.JCodeModel());
        final com.helger.jcodemodel.JPackage aPkg1 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPackage>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|2", com.helger.jcodemodel.JPackage.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|1", com.helger.jcodemodel.JCodeModel.class, cm)._package("id.myapp.activity"));
        final com.helger.jcodemodel.JDefinedClass testClass = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|4", com.helger.jcodemodel.JDefinedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPackage>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|3", com.helger.jcodemodel.JPackage.class, aPkg1)._class("TestClass"));
        final com.helger.jcodemodel.JDirectClass androidR = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|6", com.helger.jcodemodel.JDirectClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|5", com.helger.jcodemodel.JCodeModel.class, cm).directClass("android.R"));
        final com.helger.jcodemodel.JDirectClass androidRId = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|8", com.helger.jcodemodel.JDirectClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|7", com.helger.jcodemodel.JDirectClass.class, androidR)._class("id"));
        final com.helger.jcodemodel.JDirectClass myR = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|10", com.helger.jcodemodel.JDirectClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|9", com.helger.jcodemodel.JCodeModel.class, cm).directClass("id.myapp.R"));
        final com.helger.jcodemodel.JDirectClass myRId = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|12", com.helger.jcodemodel.JDirectClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|11", com.helger.jcodemodel.JDirectClass.class, myR)._class("id"));
        final com.helger.jcodemodel.JBlock constructorBody = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|15", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|14", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|13", com.helger.jcodemodel.JDefinedClass.class, testClass).constructor(com.helger.jcodemodel.JMod.PUBLIC)).body());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|21", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|16", com.helger.jcodemodel.JBlock.class, constructorBody).decl(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|18", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|17", com.helger.jcodemodel.JCodeModel.class, cm).INT), "myInt", eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldRef>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|20", com.helger.jcodemodel.JFieldRef.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|19", com.helger.jcodemodel.JDirectClass.class, androidRId).staticRef("someId"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|27", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|22", com.helger.jcodemodel.JBlock.class, constructorBody).decl(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|24", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|23", com.helger.jcodemodel.JCodeModel.class, cm).INT), "myInt2", eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldRef>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|26", com.helger.jcodemodel.JFieldRef.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|25", com.helger.jcodemodel.JDirectClass.class, myRId).staticRef("otherId"))));
        com.helger.jcodemodel.util.CodeModelTestsHelper.parseCodeModel(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1()|28", com.helger.jcodemodel.JCodeModel.class, cm));
    }

    @org.junit.Test
    public void testRegression1VerySpecialCase() throws java.lang.Exception {
        final com.helger.jcodemodel.JCodeModel cm = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|0", com.helger.jcodemodel.JCodeModel.class, new com.helger.jcodemodel.JCodeModel());
        final com.helger.jcodemodel.JPackage aPkg1 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPackage>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|2", com.helger.jcodemodel.JPackage.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|1", com.helger.jcodemodel.JCodeModel.class, cm)._package("id.myapp.activity"));
        // Class is named like imported class
        final com.helger.jcodemodel.JDefinedClass testClass = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|4", com.helger.jcodemodel.JDefinedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPackage>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|3", com.helger.jcodemodel.JPackage.class, aPkg1)._class("R"));
        final com.helger.jcodemodel.JDirectClass androidR = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|6", com.helger.jcodemodel.JDirectClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|5", com.helger.jcodemodel.JCodeModel.class, cm).directClass("android.R"));
        final com.helger.jcodemodel.JDirectClass androidRId = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|8", com.helger.jcodemodel.JDirectClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|7", com.helger.jcodemodel.JDirectClass.class, androidR)._class("id"));
        final com.helger.jcodemodel.JDirectClass myR = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|10", com.helger.jcodemodel.JDirectClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|9", com.helger.jcodemodel.JCodeModel.class, cm).directClass("id.myapp.R"));
        final com.helger.jcodemodel.JDirectClass myRId = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|12", com.helger.jcodemodel.JDirectClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|11", com.helger.jcodemodel.JDirectClass.class, myR)._class("id"));
        final com.helger.jcodemodel.JBlock constructorBody = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|15", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|14", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|13", com.helger.jcodemodel.JDefinedClass.class, testClass).constructor(com.helger.jcodemodel.JMod.PUBLIC)).body());
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|21", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|16", com.helger.jcodemodel.JBlock.class, constructorBody).decl(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|18", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|17", com.helger.jcodemodel.JCodeModel.class, cm).INT), "myInt", eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldRef>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|20", com.helger.jcodemodel.JFieldRef.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|19", com.helger.jcodemodel.JDirectClass.class, androidRId).staticRef("someId"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|27", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|22", com.helger.jcodemodel.JBlock.class, constructorBody).decl(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|24", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|23", com.helger.jcodemodel.JCodeModel.class, cm).INT), "myInt2", eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JFieldRef>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|26", com.helger.jcodemodel.JFieldRef.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDirectClass>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|25", com.helger.jcodemodel.JDirectClass.class, myRId).staticRef("otherId"))));
        com.helger.jcodemodel.util.CodeModelTestsHelper.parseCodeModel(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.supplementary.issues.Issue30FuncTest|testRegression1VerySpecialCase()|28", com.helger.jcodemodel.JCodeModel.class, cm));
    }
}

