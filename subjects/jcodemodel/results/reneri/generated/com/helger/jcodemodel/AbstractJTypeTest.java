/**
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 1997-2010 Oracle and/or its affiliates. All rights reserved.
 * Portions Copyright 2013-2018 Philip Helger + contributors
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
 * or packager/legal/LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at packager/legal/LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */
package com.helger.jcodemodel;


/**
 * Test class for class {@link AbstractJType}
 *
 * @author Victor Nazarov &lt;asviraspossible@gmail.com&gt;
 */
public final class AbstractJTypeTest {
    private static final class AssignmentTypes {
        private final com.helger.jcodemodel.AbstractJClass m_aVariable;

        private final com.helger.jcodemodel.AbstractJClass m_aValue;

        public AssignmentTypes(final com.helger.jcodemodel.AbstractJClass aVariable, final com.helger.jcodemodel.AbstractJClass aValue) {
            m_aVariable = aVariable;
            m_aValue = aValue;
        }
    }

    private java.util.List<com.helger.jcodemodel.AbstractJClass> freshTypes = new java.util.ArrayList<>();

    private java.util.List<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes> freshAssignableTypes = new java.util.ArrayList<>();

    @javax.annotation.Nonnull
    private void _registerType(final com.helger.jcodemodel.AbstractJClass type) {
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.helger.jcodemodel.AbstractJTypeTest|_registerType(com.helger.jcodemodel.AbstractJClass)|2", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJClass>>observeState("com.helger.jcodemodel.AbstractJTypeTest|_registerType(com.helger.jcodemodel.AbstractJClass)|0", java.util.List.class, freshTypes).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_registerType(com.helger.jcodemodel.AbstractJClass)|1", com.helger.jcodemodel.AbstractJClass.class, type)));
    }

    @javax.annotation.Nonnull
    private java.util.List<com.helger.jcodemodel.AbstractJClass> _refreshTypes() {
        final java.util.List<com.helger.jcodemodel.AbstractJClass> result = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJClass>>observeState("com.helger.jcodemodel.AbstractJTypeTest|_refreshTypes()|0", java.util.List.class, freshTypes);
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJClass>>observeState("com.helger.jcodemodel.AbstractJTypeTest|_refreshTypes()|1", java.util.List.class, (freshTypes = new java.util.ArrayList<>()));
        return eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJClass>>observeState("com.helger.jcodemodel.AbstractJTypeTest|_refreshTypes()|2", java.util.List.class, result);
    }

    @javax.annotation.Nonnull
    private java.util.List<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes> _refreshAssignableTypes() {
        final java.util.List<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes> result = eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>>observeState("com.helger.jcodemodel.AbstractJTypeTest|_refreshAssignableTypes()|0", java.util.List.class, freshAssignableTypes);
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>>observeState("com.helger.jcodemodel.AbstractJTypeTest|_refreshAssignableTypes()|1", java.util.List.class, (freshAssignableTypes = new java.util.ArrayList<>()));
        return eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>>observeState("com.helger.jcodemodel.AbstractJTypeTest|_refreshAssignableTypes()|2", java.util.List.class, result);
    }

    private void _assertIsAssignableInTopLevelPositionOnly(final com.helger.jcodemodel.AbstractJClass variable, final com.helger.jcodemodel.AbstractJClass value) {
        final boolean result = eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignableInTopLevelPositionOnly(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|2", eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignableInTopLevelPositionOnly(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|0", com.helger.jcodemodel.AbstractJClass.class, variable).isAssignableFrom(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignableInTopLevelPositionOnly(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|1", com.helger.jcodemodel.AbstractJClass.class, value)));
        // System.out.println(variable + ".isAssignableFrom(" + value + ") == " +
        // result);
        org.junit.Assert.assertTrue(((("Expecting " + (eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignableInTopLevelPositionOnly(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|3", com.helger.jcodemodel.AbstractJClass.class, variable))) + " to be assignable from ") + (eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignableInTopLevelPositionOnly(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|4", com.helger.jcodemodel.AbstractJClass.class, value))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignableInTopLevelPositionOnly(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|5", result));
    }

    private void _assertIsAssignable(final com.helger.jcodemodel.AbstractJClass variable, final com.helger.jcodemodel.AbstractJClass value) {
        eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|4", eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|0", java.util.List.class, freshAssignableTypes).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|3", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, new com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|1", com.helger.jcodemodel.AbstractJClass.class, variable), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|2", com.helger.jcodemodel.AbstractJClass.class, value)))));
        _assertIsAssignableInTopLevelPositionOnly(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|5", com.helger.jcodemodel.AbstractJClass.class, variable), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|6", com.helger.jcodemodel.AbstractJClass.class, value));
    }

    private void _assertIsNotAssignable(final com.helger.jcodemodel.AbstractJClass variable, final com.helger.jcodemodel.AbstractJClass value) {
        final boolean result = eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.helger.jcodemodel.AbstractJTypeTest|_assertIsNotAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|2", eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsNotAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|0", com.helger.jcodemodel.AbstractJClass.class, variable).isAssignableFrom(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsNotAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|1", com.helger.jcodemodel.AbstractJClass.class, value)));
        // System.out.println(variable + ".isAssignableFrom (" + value + ") == " +
        // result);
        org.junit.Assert.assertFalse(((("Expecting " + (eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsNotAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|3", com.helger.jcodemodel.AbstractJClass.class, variable))) + " not to be assignable from ") + (eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|_assertIsNotAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|4", com.helger.jcodemodel.AbstractJClass.class, value))), eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.helger.jcodemodel.AbstractJTypeTest|_assertIsNotAssignable(com.helger.jcodemodel.AbstractJClass,com.helger.jcodemodel.AbstractJClass)|5", result));
    }

    @org.junit.After
    public void cleanup() {
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJClass>>observeState("com.helger.jcodemodel.AbstractJTypeTest|cleanup()|0", java.util.List.class, _refreshTypes());
        eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>>observeState("com.helger.jcodemodel.AbstractJTypeTest|cleanup()|1", java.util.List.class, _refreshAssignableTypes());
    }

    @org.junit.Test
    public void testIsAssignableFromSmoke() {
        final com.helger.jcodemodel.JCodeModel codeModel = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|0", com.helger.jcodemodel.JCodeModel.class, new com.helger.jcodemodel.JCodeModel());
        final com.helger.jcodemodel.AbstractJClass _Object = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|2", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|1", com.helger.jcodemodel.JCodeModel.class, codeModel).ref(java.lang.Object.class));
        final com.helger.jcodemodel.AbstractJClass _Integer = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|4", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|3", com.helger.jcodemodel.JCodeModel.class, codeModel).ref(java.lang.Integer.class));
        final com.helger.jcodemodel.AbstractJClass _List = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|6", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|5", com.helger.jcodemodel.JCodeModel.class, codeModel).ref(java.util.List.class));
        _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|7", com.helger.jcodemodel.AbstractJClass.class, _Object), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|8", com.helger.jcodemodel.AbstractJClass.class, _Integer));
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|9", com.helger.jcodemodel.AbstractJClass.class, _Integer), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|10", com.helger.jcodemodel.AbstractJClass.class, _Object));
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|11", com.helger.jcodemodel.AbstractJClass.class, _Integer), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|12", com.helger.jcodemodel.AbstractJClass.class, _List));
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|13", com.helger.jcodemodel.AbstractJClass.class, _List), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|14", com.helger.jcodemodel.AbstractJClass.class, _Integer));
        _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|15", com.helger.jcodemodel.AbstractJClass.class, _Object), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|16", com.helger.jcodemodel.AbstractJClass.class, _List));
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|17", com.helger.jcodemodel.AbstractJClass.class, _List), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|18", com.helger.jcodemodel.AbstractJClass.class, _Object));
        _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|21", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|19", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|20", com.helger.jcodemodel.AbstractJClass.class, _Integer))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|24", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|22", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|23", com.helger.jcodemodel.AbstractJClass.class, _Integer))));
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|27", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|25", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|26", com.helger.jcodemodel.AbstractJClass.class, _Object))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|30", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|28", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|29", com.helger.jcodemodel.AbstractJClass.class, _Integer))));
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|33", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|31", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|32", com.helger.jcodemodel.AbstractJClass.class, _Integer))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|36", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|34", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|35", com.helger.jcodemodel.AbstractJClass.class, _Object))));
        _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|40", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|37", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|39", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|38", com.helger.jcodemodel.AbstractJClass.class, _Object).wildcardExtends()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|43", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|41", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|42", com.helger.jcodemodel.AbstractJClass.class, _Integer))));
        _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|47", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|44", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|46", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|45", com.helger.jcodemodel.AbstractJClass.class, _Object).wildcardExtends()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|51", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|48", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|50", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|49", com.helger.jcodemodel.AbstractJClass.class, _Integer).wildcardExtends()))));
        _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|55", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|52", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|54", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|53", com.helger.jcodemodel.AbstractJClass.class, _Integer).wildcardSuper()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|58", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|56", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|57", com.helger.jcodemodel.AbstractJClass.class, _Object))));
        _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|62", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|59", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|61", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|60", com.helger.jcodemodel.AbstractJClass.class, _Integer).wildcardSuper()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|66", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|63", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|65", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|64", com.helger.jcodemodel.AbstractJClass.class, _Object).wildcardSuper()))));
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|70", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|67", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|69", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|68", com.helger.jcodemodel.AbstractJClass.class, _Integer).wildcardSuper()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|74", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|71", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|73", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|72", com.helger.jcodemodel.AbstractJClass.class, _Integer).wildcardExtends()))));
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|78", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|75", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|77", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|76", com.helger.jcodemodel.AbstractJClass.class, _Integer).wildcardExtends()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|82", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|79", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|81", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|80", com.helger.jcodemodel.AbstractJClass.class, _Integer).wildcardSuper()))));
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|85", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|83", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|84", com.helger.jcodemodel.AbstractJClass.class, _List))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|90", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|86", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|89", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|87", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|88", com.helger.jcodemodel.AbstractJClass.class, _Integer))))));
        _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|94", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|91", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|93", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|92", com.helger.jcodemodel.AbstractJClass.class, _List).wildcardExtends()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|99", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|95", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|98", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|96", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|97", com.helger.jcodemodel.AbstractJClass.class, _Integer))))));
        // List<? extends List<Object>> list1 = (List<List>)list2
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|105", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|100", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|104", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|103", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|101", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|102", com.helger.jcodemodel.AbstractJClass.class, _Object))).wildcardExtends()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|108", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|106", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|107", com.helger.jcodemodel.AbstractJClass.class, _List))));
        // List<? super List<List<List>>> list1 = (List<List<? super List>>)list2
        _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|116", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|109", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|115", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|114", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|110", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|113", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|111", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|112", com.helger.jcodemodel.AbstractJClass.class, _List))))).wildcardSuper()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|122", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|117", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|121", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|118", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|120", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromSmoke()|119", com.helger.jcodemodel.AbstractJClass.class, _List).wildcardSuper()))))));
    }

    @org.junit.Test
    public void testIsAssignableFromRandomized() {
        final com.helger.jcodemodel.JCodeModel codeModel = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|0", com.helger.jcodemodel.JCodeModel.class, new com.helger.jcodemodel.JCodeModel());
        final com.helger.jcodemodel.AbstractJClass _Object = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|2", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|1", com.helger.jcodemodel.JCodeModel.class, codeModel).ref(java.lang.Object.class));
        final com.helger.jcodemodel.AbstractJClass _Integer = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|4", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|3", com.helger.jcodemodel.JCodeModel.class, codeModel).ref(java.lang.Integer.class));
        final com.helger.jcodemodel.AbstractJClass _List = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|6", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|5", com.helger.jcodemodel.JCodeModel.class, codeModel).ref(java.util.List.class));
        _registerType(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|7", com.helger.jcodemodel.AbstractJClass.class, _Object));
        _registerType(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|8", com.helger.jcodemodel.AbstractJClass.class, _Integer));
        _registerType(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|9", com.helger.jcodemodel.AbstractJClass.class, _List));
        for (int i = 0; (eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|10", i)) < 2; i++) {
            for (final com.helger.jcodemodel.AbstractJClass type : eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJClass>>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|11", java.util.List.class, _refreshTypes())) {
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|12", com.helger.jcodemodel.AbstractJClass.class, _Object), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|13", com.helger.jcodemodel.AbstractJClass.class, type));
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|14", com.helger.jcodemodel.AbstractJClass.class, type), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|15", com.helger.jcodemodel.AbstractJClass.class, type));
                _registerType(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|18", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|16", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|17", com.helger.jcodemodel.AbstractJClass.class, type))));
                _registerType(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|22", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|19", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|21", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|20", com.helger.jcodemodel.AbstractJClass.class, type).wildcardExtends()))));
                _registerType(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|26", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|23", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|25", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|24", com.helger.jcodemodel.AbstractJClass.class, type).wildcardSuper()))));
                _assertIsAssignableInTopLevelPositionOnly(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|29", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|27", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|28", com.helger.jcodemodel.AbstractJClass.class, type))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|30", com.helger.jcodemodel.AbstractJClass.class, _List));
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|31", com.helger.jcodemodel.AbstractJClass.class, _List), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|34", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|32", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|33", com.helger.jcodemodel.AbstractJClass.class, type))));
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|37", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|35", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|36", com.helger.jcodemodel.AbstractJClass.class, type))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|40", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|38", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|39", com.helger.jcodemodel.AbstractJClass.class, type))));
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|44", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|41", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|43", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|42", com.helger.jcodemodel.AbstractJClass.class, type).wildcardExtends()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|47", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|45", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|46", com.helger.jcodemodel.AbstractJClass.class, type))));
                _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|51", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|48", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|50", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|49", com.helger.jcodemodel.AbstractJClass.class, type).wildcardExtends()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|55", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|52", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|54", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|53", com.helger.jcodemodel.AbstractJClass.class, type).wildcardSuper()))));
                _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|59", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|56", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|58", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|57", com.helger.jcodemodel.AbstractJClass.class, type).wildcardSuper()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|63", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|60", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|62", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|61", com.helger.jcodemodel.AbstractJClass.class, type).wildcardExtends()))));
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|67", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|64", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|66", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|65", com.helger.jcodemodel.AbstractJClass.class, type).wildcardSuper()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|70", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|68", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|69", com.helger.jcodemodel.AbstractJClass.class, type))));
            }
            for (final com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes assignment : eu.stamp_project.reneri.instrumentation.StateObserver.<java.util.List<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|71", java.util.List.class, _refreshAssignableTypes())) {
                if (!(eu.stamp_project.reneri.instrumentation.StateObserver.observe("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|76", eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|73", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|72", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aValue).equals(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|75", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|74", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aVariable))))) {
                    _assertIsNotAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|80", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|77", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|79", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|78", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aVariable))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|84", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|81", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|83", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|82", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aValue))));
                }
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|89", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|85", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|88", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|87", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|86", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aVariable).wildcardExtends()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|93", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|90", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|92", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|91", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aValue))));
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|98", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|94", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|97", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|96", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|95", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aVariable).wildcardExtends()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|103", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|99", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|102", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|101", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|100", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aValue).wildcardExtends()))));
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|108", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|104", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|107", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|106", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|105", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aValue).wildcardSuper()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|112", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|109", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|111", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|110", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aVariable))));
                _assertIsAssignable(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|117", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|113", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|116", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|115", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|114", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aValue).wildcardSuper()))), eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|122", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|118", com.helger.jcodemodel.AbstractJClass.class, _List).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|121", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|120", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes>observeState("com.helger.jcodemodel.AbstractJTypeTest|testIsAssignableFromRandomized()|119", com.helger.jcodemodel.AbstractJTypeTest.AssignmentTypes.class, assignment).m_aVariable).wildcardSuper()))));
            }
        }
    }
}

