/**
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 1997-2010 Oracle and/or its affiliates. All rights reserved.
 * Portions Copyright 2013-2018 Philip Helger + contributors
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
 * or packager/legal/LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at packager/legal/LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */
package com.helger.jcodemodel;


/**
 * Test class for class {@link JInvocation}
 *
 * @author Philip Helger
 */
public final class JInvocationTest {
    @org.junit.Test
    public void testWithGenerics() throws java.lang.Exception {
        final com.helger.jcodemodel.JCodeModel cm = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|0", com.helger.jcodemodel.JCodeModel.class, new com.helger.jcodemodel.JCodeModel());
        final com.helger.jcodemodel.JDefinedClass cls = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|2", com.helger.jcodemodel.JDefinedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|1", com.helger.jcodemodel.JCodeModel.class, cm)._class("TestInvocation"));
        final com.helger.jcodemodel.JTypeVar tc = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|4", com.helger.jcodemodel.JTypeVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|3", com.helger.jcodemodel.JDefinedClass.class, cls).generify("IMPL"));
        final com.helger.jcodemodel.JMethod mc = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|6", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|5", com.helger.jcodemodel.JDefinedClass.class, cls).constructor(com.helger.jcodemodel.JMod.PUBLIC));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|9", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|7", com.helger.jcodemodel.JMethod.class, mc).param(com.helger.jcodemodel.JMod.FINAL, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|8", com.helger.jcodemodel.JTypeVar.class, tc), "ctor"));
        final com.helger.jcodemodel.JMethod m1 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|13", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|10", com.helger.jcodemodel.JDefinedClass.class, cls).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|12", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|11", com.helger.jcodemodel.JCodeModel.class, cm).VOID), "foo1"));
        final com.helger.jcodemodel.JTypeVar tv1 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|15", com.helger.jcodemodel.JTypeVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|14", com.helger.jcodemodel.JMethod.class, m1).generify("T"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|18", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|16", com.helger.jcodemodel.JMethod.class, m1).param(com.helger.jcodemodel.JMod.FINAL, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|17", com.helger.jcodemodel.JTypeVar.class, tv1), "foo"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JReturn>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|21", com.helger.jcodemodel.JReturn.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|20", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|19", com.helger.jcodemodel.JMethod.class, m1).body())._return());
        final com.helger.jcodemodel.JMethod m1a = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|25", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|22", com.helger.jcodemodel.JDefinedClass.class, cls).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|24", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|23", com.helger.jcodemodel.JCodeModel.class, cm).VOID), "foo1a"));
        final com.helger.jcodemodel.JTypeVar tv1a = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|27", com.helger.jcodemodel.JTypeVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|26", com.helger.jcodemodel.JMethod.class, m1a).generify("T", java.math.BigInteger.class));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|30", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|28", com.helger.jcodemodel.JMethod.class, m1a).param(com.helger.jcodemodel.JMod.FINAL, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|29", com.helger.jcodemodel.JTypeVar.class, tv1a), "foo"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JReturn>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|33", com.helger.jcodemodel.JReturn.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|32", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|31", com.helger.jcodemodel.JMethod.class, m1a).body())._return());
        final com.helger.jcodemodel.JMethod m1b = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|37", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|34", com.helger.jcodemodel.JDefinedClass.class, cls).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|36", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|35", com.helger.jcodemodel.JCodeModel.class, cm).VOID), "foo1b"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|45", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|38", com.helger.jcodemodel.JMethod.class, m1b).param(com.helger.jcodemodel.JMod.FINAL, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|44", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|40", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|39", com.helger.jcodemodel.JCodeModel.class, cm).ref(java.util.Comparator.class)).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeWildcard>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|43", com.helger.jcodemodel.JTypeWildcard.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|42", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|41", com.helger.jcodemodel.JCodeModel.class, cm).ref(java.lang.CharSequence.class)).wildcardSuper()))), "foo"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JReturn>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|48", com.helger.jcodemodel.JReturn.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|47", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|46", com.helger.jcodemodel.JMethod.class, m1b).body())._return());
        final com.helger.jcodemodel.JMethod m2 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|52", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|49", com.helger.jcodemodel.JDefinedClass.class, cls).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|51", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|50", com.helger.jcodemodel.JCodeModel.class, cm).VOID), "foo2"));
        final com.helger.jcodemodel.JTypeVar tv21 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|54", com.helger.jcodemodel.JTypeVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|53", com.helger.jcodemodel.JMethod.class, m2).generify("T"));
        final com.helger.jcodemodel.JTypeVar tv22 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|56", com.helger.jcodemodel.JTypeVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|55", com.helger.jcodemodel.JMethod.class, m2).generify("U"));
        final com.helger.jcodemodel.JTypeVar tv23 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|58", com.helger.jcodemodel.JTypeVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|57", com.helger.jcodemodel.JMethod.class, m2).generify("V"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|61", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|59", com.helger.jcodemodel.JMethod.class, m2).param(com.helger.jcodemodel.JMod.FINAL, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|60", com.helger.jcodemodel.JTypeVar.class, tv21), "t"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|64", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|62", com.helger.jcodemodel.JMethod.class, m2).param(com.helger.jcodemodel.JMod.FINAL, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|63", com.helger.jcodemodel.JTypeVar.class, tv22), "u"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|67", com.helger.jcodemodel.JVar.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|65", com.helger.jcodemodel.JMethod.class, m2).param(com.helger.jcodemodel.JMod.FINAL, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JTypeVar>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|66", com.helger.jcodemodel.JTypeVar.class, tv23), "v"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JReturn>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|70", com.helger.jcodemodel.JReturn.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|69", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|68", com.helger.jcodemodel.JMethod.class, m2).body())._return());
        final com.helger.jcodemodel.JMethod minvoke = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|74", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|71", com.helger.jcodemodel.JDefinedClass.class, cls).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|73", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|72", com.helger.jcodemodel.JCodeModel.class, cm).VOID), "bar"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|85", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|76", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|75", com.helger.jcodemodel.JMethod.class, minvoke).body()).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|84", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|79", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|78", com.helger.jcodemodel.JInvocation.class, com.helger.jcodemodel.JExpr._new(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|77", com.helger.jcodemodel.JDefinedClass.class, cls))).narrow(java.lang.Integer.class)).arg(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.IJExpression>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|83", com.helger.jcodemodel.IJExpression.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|81", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|80", com.helger.jcodemodel.JCodeModel.class, cm).INT).wrap(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JAtomInt>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|82", com.helger.jcodemodel.JAtomInt.class, com.helger.jcodemodel.JExpr.lit(17))))))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|92", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|87", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|86", com.helger.jcodemodel.JMethod.class, minvoke).body()).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|91", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|90", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|89", com.helger.jcodemodel.JInvocation.class, com.helger.jcodemodel.JExpr.invokeThis(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|88", com.helger.jcodemodel.JMethod.class, m1))).narrow(java.lang.String.class)).arg("jippie"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|98", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|94", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|93", com.helger.jcodemodel.JMethod.class, minvoke).body()).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|97", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|96", com.helger.jcodemodel.JInvocation.class, com.helger.jcodemodel.JExpr.invoke(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|95", com.helger.jcodemodel.JMethod.class, m1))).arg("jippie"))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|118", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|100", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|99", com.helger.jcodemodel.JMethod.class, minvoke).body()).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|117", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|112", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|110", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|109", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|105", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|103", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|102", com.helger.jcodemodel.JInvocation.class, com.helger.jcodemodel.JExpr.invokeThis(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|101", com.helger.jcodemodel.JMethod.class, m2))).narrow(java.lang.String.class)).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|104", com.helger.jcodemodel.JDefinedClass.class, cls))).narrow(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|108", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|107", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|106", com.helger.jcodemodel.JCodeModel.class, cm).ref(java.util.List.class)).narrow(java.lang.Long.class)))).arg("jippie")).arg(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JAtom>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|111", com.helger.jcodemodel.JAtom.class, com.helger.jcodemodel.JExpr._this()))).arg(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|116", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|115", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|114", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|113", com.helger.jcodemodel.JCodeModel.class, cm).ref(java.util.ArrayList.class)).narrow(java.lang.Long.class))._new())))));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|131", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|120", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|119", com.helger.jcodemodel.JMethod.class, minvoke).body()).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|130", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|125", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|123", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|122", com.helger.jcodemodel.JInvocation.class, com.helger.jcodemodel.JExpr.invoke(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|121", com.helger.jcodemodel.JMethod.class, m2))).arg("jippie")).arg(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JAtom>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|124", com.helger.jcodemodel.JAtom.class, com.helger.jcodemodel.JExpr._this()))).arg(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|129", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JNarrowedClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|128", com.helger.jcodemodel.JNarrowedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.AbstractJClass>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|127", com.helger.jcodemodel.AbstractJClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|126", com.helger.jcodemodel.JCodeModel.class, cm).ref(java.util.ArrayList.class)).narrow(java.lang.Long.class))._new())))));
        com.helger.jcodemodel.util.CodeModelTestsHelper.parseCodeModel(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testWithGenerics()|132", com.helger.jcodemodel.JCodeModel.class, cm));
    }

    @org.junit.Test
    public void testChainedInvoke() throws java.lang.Exception {
        final com.helger.jcodemodel.JCodeModel cm = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|0", com.helger.jcodemodel.JCodeModel.class, new com.helger.jcodemodel.JCodeModel());
        final com.helger.jcodemodel.JDefinedClass cls = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|2", com.helger.jcodemodel.JDefinedClass.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|1", com.helger.jcodemodel.JCodeModel.class, cm)._class("TestInvocation2"));
        final com.helger.jcodemodel.JMethod m1 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|5", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|3", com.helger.jcodemodel.JDefinedClass.class, cls).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|4", com.helger.jcodemodel.JDefinedClass.class, cls), "foo1"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JReturn>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|9", com.helger.jcodemodel.JReturn.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|7", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|6", com.helger.jcodemodel.JMethod.class, m1).body())._return(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JAtom>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|8", com.helger.jcodemodel.JAtom.class, com.helger.jcodemodel.JExpr._this())));
        final com.helger.jcodemodel.JMethod m2 = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|12", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|10", com.helger.jcodemodel.JDefinedClass.class, cls).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|11", com.helger.jcodemodel.JDefinedClass.class, cls), "foo2"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JReturn>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|16", com.helger.jcodemodel.JReturn.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|14", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|13", com.helger.jcodemodel.JMethod.class, m2).body())._return(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JAtom>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|15", com.helger.jcodemodel.JAtom.class, com.helger.jcodemodel.JExpr._this())));
        final com.helger.jcodemodel.JMethod minvoke = eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|20", com.helger.jcodemodel.JMethod.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JDefinedClass>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|17", com.helger.jcodemodel.JDefinedClass.class, cls).method(com.helger.jcodemodel.JMod.PUBLIC, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JPrimitiveType>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|19", com.helger.jcodemodel.JPrimitiveType.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|18", com.helger.jcodemodel.JCodeModel.class, cm).VOID), "bar"));
        eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|27", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JBlock>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|22", com.helger.jcodemodel.JBlock.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|21", com.helger.jcodemodel.JMethod.class, minvoke).body()).add(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|26", com.helger.jcodemodel.JInvocation.class, eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JInvocation>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|24", com.helger.jcodemodel.JInvocation.class, com.helger.jcodemodel.JExpr.invoke(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|23", com.helger.jcodemodel.JMethod.class, m1))).invoke(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JMethod>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|25", com.helger.jcodemodel.JMethod.class, m2)))));
        com.helger.jcodemodel.util.CodeModelTestsHelper.parseCodeModel(eu.stamp_project.reneri.instrumentation.StateObserver.<com.helger.jcodemodel.JCodeModel>observeState("com.helger.jcodemodel.JInvocationTest|testChainedInvoke()|28", com.helger.jcodemodel.JCodeModel.class, cm));
    }
}

